// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package admin

import (
	context "context"
	billing "github.com/deniskelin/tada-proto/tada/api/billing"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ChangeTariffClient is the client API for ChangeTariff service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ChangeTariffClient interface {
	GetChangesTariffsByPersonalAccount(ctx context.Context, in *billing.GetChangesTariffsByPersonalAccountRequest, opts ...grpc.CallOption) (*billing.GetChangesTariffsByPersonalAccountResponse, error)
	CreateChangeTariffOnPersonalAccount(ctx context.Context, in *billing.CreateChangeTariffOnPersonalAccountRequest, opts ...grpc.CallOption) (*billing.CreateChangeTariffOnPersonalAccountResponse, error)
	DeleteChangeTariffOnPersonalAccount(ctx context.Context, in *billing.DeleteChangeTariffOnPersonalAccountRequest, opts ...grpc.CallOption) (*billing.DeleteChangeTariffOnPersonalAccountResponse, error)
}

type changeTariffClient struct {
	cc grpc.ClientConnInterface
}

func NewChangeTariffClient(cc grpc.ClientConnInterface) ChangeTariffClient {
	return &changeTariffClient{cc}
}

func (c *changeTariffClient) GetChangesTariffsByPersonalAccount(ctx context.Context, in *billing.GetChangesTariffsByPersonalAccountRequest, opts ...grpc.CallOption) (*billing.GetChangesTariffsByPersonalAccountResponse, error) {
	out := new(billing.GetChangesTariffsByPersonalAccountResponse)
	err := c.cc.Invoke(ctx, "/tada.gateway.admin.ChangeTariff/GetChangesTariffsByPersonalAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *changeTariffClient) CreateChangeTariffOnPersonalAccount(ctx context.Context, in *billing.CreateChangeTariffOnPersonalAccountRequest, opts ...grpc.CallOption) (*billing.CreateChangeTariffOnPersonalAccountResponse, error) {
	out := new(billing.CreateChangeTariffOnPersonalAccountResponse)
	err := c.cc.Invoke(ctx, "/tada.gateway.admin.ChangeTariff/CreateChangeTariffOnPersonalAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *changeTariffClient) DeleteChangeTariffOnPersonalAccount(ctx context.Context, in *billing.DeleteChangeTariffOnPersonalAccountRequest, opts ...grpc.CallOption) (*billing.DeleteChangeTariffOnPersonalAccountResponse, error) {
	out := new(billing.DeleteChangeTariffOnPersonalAccountResponse)
	err := c.cc.Invoke(ctx, "/tada.gateway.admin.ChangeTariff/DeleteChangeTariffOnPersonalAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChangeTariffServer is the server API for ChangeTariff service.
// All implementations must embed UnimplementedChangeTariffServer
// for forward compatibility
type ChangeTariffServer interface {
	GetChangesTariffsByPersonalAccount(context.Context, *billing.GetChangesTariffsByPersonalAccountRequest) (*billing.GetChangesTariffsByPersonalAccountResponse, error)
	CreateChangeTariffOnPersonalAccount(context.Context, *billing.CreateChangeTariffOnPersonalAccountRequest) (*billing.CreateChangeTariffOnPersonalAccountResponse, error)
	DeleteChangeTariffOnPersonalAccount(context.Context, *billing.DeleteChangeTariffOnPersonalAccountRequest) (*billing.DeleteChangeTariffOnPersonalAccountResponse, error)
	mustEmbedUnimplementedChangeTariffServer()
}

// UnimplementedChangeTariffServer must be embedded to have forward compatible implementations.
type UnimplementedChangeTariffServer struct {
}

func (UnimplementedChangeTariffServer) GetChangesTariffsByPersonalAccount(context.Context, *billing.GetChangesTariffsByPersonalAccountRequest) (*billing.GetChangesTariffsByPersonalAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChangesTariffsByPersonalAccount not implemented")
}
func (UnimplementedChangeTariffServer) CreateChangeTariffOnPersonalAccount(context.Context, *billing.CreateChangeTariffOnPersonalAccountRequest) (*billing.CreateChangeTariffOnPersonalAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateChangeTariffOnPersonalAccount not implemented")
}
func (UnimplementedChangeTariffServer) DeleteChangeTariffOnPersonalAccount(context.Context, *billing.DeleteChangeTariffOnPersonalAccountRequest) (*billing.DeleteChangeTariffOnPersonalAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteChangeTariffOnPersonalAccount not implemented")
}
func (UnimplementedChangeTariffServer) mustEmbedUnimplementedChangeTariffServer() {}

// UnsafeChangeTariffServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ChangeTariffServer will
// result in compilation errors.
type UnsafeChangeTariffServer interface {
	mustEmbedUnimplementedChangeTariffServer()
}

func RegisterChangeTariffServer(s grpc.ServiceRegistrar, srv ChangeTariffServer) {
	s.RegisterService(&ChangeTariff_ServiceDesc, srv)
}

func _ChangeTariff_GetChangesTariffsByPersonalAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(billing.GetChangesTariffsByPersonalAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChangeTariffServer).GetChangesTariffsByPersonalAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tada.gateway.admin.ChangeTariff/GetChangesTariffsByPersonalAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChangeTariffServer).GetChangesTariffsByPersonalAccount(ctx, req.(*billing.GetChangesTariffsByPersonalAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChangeTariff_CreateChangeTariffOnPersonalAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(billing.CreateChangeTariffOnPersonalAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChangeTariffServer).CreateChangeTariffOnPersonalAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tada.gateway.admin.ChangeTariff/CreateChangeTariffOnPersonalAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChangeTariffServer).CreateChangeTariffOnPersonalAccount(ctx, req.(*billing.CreateChangeTariffOnPersonalAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChangeTariff_DeleteChangeTariffOnPersonalAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(billing.DeleteChangeTariffOnPersonalAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChangeTariffServer).DeleteChangeTariffOnPersonalAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tada.gateway.admin.ChangeTariff/DeleteChangeTariffOnPersonalAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChangeTariffServer).DeleteChangeTariffOnPersonalAccount(ctx, req.(*billing.DeleteChangeTariffOnPersonalAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ChangeTariff_ServiceDesc is the grpc.ServiceDesc for ChangeTariff service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ChangeTariff_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "tada.gateway.admin.ChangeTariff",
	HandlerType: (*ChangeTariffServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetChangesTariffsByPersonalAccount",
			Handler:    _ChangeTariff_GetChangesTariffsByPersonalAccount_Handler,
		},
		{
			MethodName: "CreateChangeTariffOnPersonalAccount",
			Handler:    _ChangeTariff_CreateChangeTariffOnPersonalAccount_Handler,
		},
		{
			MethodName: "DeleteChangeTariffOnPersonalAccount",
			Handler:    _ChangeTariff_DeleteChangeTariffOnPersonalAccount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tada/gateway/admin/change_tariff_service.proto",
}
