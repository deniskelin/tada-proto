// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.1
// source: tada/gateway/admin/billing/personal_account/enquiry/v1/enquiry_client.proto

package enquiry

import (
	v1 "github.com/deniskelin/tada-proto/tada/billing/api/personal_account/enquiry/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Создание заявки
type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Проверка что тариф публичный или приватный и доступен этому ЛС
	SelectableTariffId uint64 `protobuf:"varint,1,opt,name=selectable_tariff_id,json=selectableTariffId,proto3" json:"selectable_tariff_id,omitempty"`
	// Также тут проверка что занятых рабочих мест должно быть меньше либо равно max_workplace_count на выбираемом тарифе
	// Пример: Бесплатный тариф с 5 рм может быть выбран только если на лс 5 или меньше занятых рм в момент создания заявки
	SelectableWorkplaceCount uint32 `protobuf:"varint,2,opt,name=selectable_workplace_count,json=selectableWorkplaceCount,proto3" json:"selectable_workplace_count,omitempty"`
	// Тут нужна будет проверка гетом по контрагенту на совпадение ЛС
	CounterpartyId uint64 `protobuf:"varint,3,opt,name=counterparty_id,json=counterpartyId,proto3" json:"counterparty_id,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRequest) GetSelectableTariffId() uint64 {
	if x != nil {
		return x.SelectableTariffId
	}
	return 0
}

func (x *CreateRequest) GetSelectableWorkplaceCount() uint32 {
	if x != nil {
		return x.SelectableWorkplaceCount
	}
	return 0
}

func (x *CreateRequest) GetCounterpartyId() uint64 {
	if x != nil {
		return x.CounterpartyId
	}
	return 0
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// заполняется с Тарифа
	TariffName         string  `protobuf:"bytes,3,opt,name=tariff_name,json=tariffName,proto3" json:"tariff_name,omitempty"`
	WorkplacePrice     float32 `protobuf:"fixed32,4,opt,name=workplace_price,json=workplacePrice,proto3" json:"workplace_price,omitempty"`
	PeriodDays         uint32  `protobuf:"varint,5,opt,name=period_days,json=periodDays,proto3" json:"period_days,omitempty"`
	FreeWorkplaceCount uint32  `protobuf:"varint,6,opt,name=free_workplace_count,json=freeWorkplaceCount,proto3" json:"free_workplace_count,omitempty"`
	// Заполняется с заявки
	Id                       uint64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PersonalAccountId        uint64                  `protobuf:"varint,2,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
	SelectableWorkplaceCount uint32                  `protobuf:"varint,11,opt,name=selectable_workplace_count,json=selectableWorkplaceCount,proto3" json:"selectable_workplace_count,omitempty"`
	Amount                   float32                 `protobuf:"fixed32,18,opt,name=amount,proto3" json:"amount,omitempty"`
	ActivationDate           *timestamppb.Timestamp  `protobuf:"bytes,23,opt,name=activation_date,json=activationDate,proto3" json:"activation_date,omitempty"`
	DeactivationDate         *timestamppb.Timestamp  `protobuf:"bytes,24,opt,name=deactivation_date,json=deactivationDate,proto3" json:"deactivation_date,omitempty"`
	CreatedAt                *timestamppb.Timestamp  `protobuf:"bytes,25,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreditedAt               *timestamppb.Timestamp  `protobuf:"bytes,26,opt,name=credited_at,json=creditedAt,proto3,oneof" json:"credited_at,omitempty"`
	ActuallyPaidAt           *timestamppb.Timestamp  `protobuf:"bytes,27,opt,name=actually_paid_at,json=actuallyPaidAt,proto3,oneof" json:"actually_paid_at,omitempty"`
	FixationPaidAt           *timestamppb.Timestamp  `protobuf:"bytes,28,opt,name=fixation_paid_at,json=fixationPaidAt,proto3,oneof" json:"fixation_paid_at,omitempty"`
	ExpirationAt             *timestamppb.Timestamp  `protobuf:"bytes,29,opt,name=expiration_at,json=expirationAt,proto3,oneof" json:"expiration_at,omitempty"`
	ActivateAt               *timestamppb.Timestamp  `protobuf:"bytes,30,opt,name=activate_at,json=activateAt,proto3,oneof" json:"activate_at,omitempty"`
	EnquiryType              v1.EnquiryType          `protobuf:"varint,35,opt,name=enquiry_type,json=enquiryType,proto3,enum=tada.billing.api.personal_account.enquiry.v1.EnquiryType" json:"enquiry_type,omitempty"`
	PaymentType              v1.PaymentType          `protobuf:"varint,36,opt,name=payment_type,json=paymentType,proto3,enum=tada.billing.api.personal_account.enquiry.v1.PaymentType" json:"payment_type,omitempty"`
	EnquiryStatus            v1.EnquiryStatus        `protobuf:"varint,37,opt,name=enquiry_status,json=enquiryStatus,proto3,enum=tada.billing.api.personal_account.enquiry.v1.EnquiryStatus" json:"enquiry_status,omitempty"`
	EnquiryPaymentStatus     v1.EnquiryPaymentStatus `protobuf:"varint,38,opt,name=enquiry_payment_status,json=enquiryPaymentStatus,proto3,enum=tada.billing.api.personal_account.enquiry.v1.EnquiryPaymentStatus" json:"enquiry_payment_status,omitempty"`
	// пустое
	FileName string `protobuf:"bytes,40,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	MediaUrl string `protobuf:"bytes,41,opt,name=media_url,json=mediaUrl,proto3" json:"media_url,omitempty"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_rawDescGZIP(), []int{1}
}

func (x *CreateResponse) GetTariffName() string {
	if x != nil {
		return x.TariffName
	}
	return ""
}

func (x *CreateResponse) GetWorkplacePrice() float32 {
	if x != nil {
		return x.WorkplacePrice
	}
	return 0
}

func (x *CreateResponse) GetPeriodDays() uint32 {
	if x != nil {
		return x.PeriodDays
	}
	return 0
}

func (x *CreateResponse) GetFreeWorkplaceCount() uint32 {
	if x != nil {
		return x.FreeWorkplaceCount
	}
	return 0
}

func (x *CreateResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateResponse) GetPersonalAccountId() uint64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

func (x *CreateResponse) GetSelectableWorkplaceCount() uint32 {
	if x != nil {
		return x.SelectableWorkplaceCount
	}
	return 0
}

func (x *CreateResponse) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateResponse) GetActivationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ActivationDate
	}
	return nil
}

func (x *CreateResponse) GetDeactivationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DeactivationDate
	}
	return nil
}

func (x *CreateResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CreateResponse) GetCreditedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreditedAt
	}
	return nil
}

func (x *CreateResponse) GetActuallyPaidAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ActuallyPaidAt
	}
	return nil
}

func (x *CreateResponse) GetFixationPaidAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FixationPaidAt
	}
	return nil
}

func (x *CreateResponse) GetExpirationAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpirationAt
	}
	return nil
}

func (x *CreateResponse) GetActivateAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ActivateAt
	}
	return nil
}

func (x *CreateResponse) GetEnquiryType() v1.EnquiryType {
	if x != nil {
		return x.EnquiryType
	}
	return v1.EnquiryType(0)
}

func (x *CreateResponse) GetPaymentType() v1.PaymentType {
	if x != nil {
		return x.PaymentType
	}
	return v1.PaymentType(0)
}

func (x *CreateResponse) GetEnquiryStatus() v1.EnquiryStatus {
	if x != nil {
		return x.EnquiryStatus
	}
	return v1.EnquiryStatus(0)
}

func (x *CreateResponse) GetEnquiryPaymentStatus() v1.EnquiryPaymentStatus {
	if x != nil {
		return x.EnquiryPaymentStatus
	}
	return v1.EnquiryPaymentStatus(0)
}

func (x *CreateResponse) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *CreateResponse) GetMediaUrl() string {
	if x != nil {
		return x.MediaUrl
	}
	return ""
}

var File_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto protoreflect.FileDescriptor

var file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_rawDesc = []byte{
	0x0a, 0x4b, 0x74, 0x61, 0x64, 0x61, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x65, 0x6e,
	0x71, 0x75, 0x69, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36, 0x74,
	0x61, 0x64, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x65, 0x6e, 0x71, 0x75, 0x69,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x40, 0x74, 0x61, 0x64, 0x61, 0x2f, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72,
	0x79, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa8, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x1a,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x18, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x49, 0x64, 0x22, 0x9c, 0x0b, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72,
	0x69, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x61, 0x79,
	0x73, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x12, 0x66, 0x72, 0x65, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x11, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x1a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x43, 0x0a, 0x0f, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x47,
	0x0a, 0x11, 0x64, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x64, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x49, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x6c, 0x79,
	0x5f, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x0e, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x50, 0x61, 0x69, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x49, 0x0a, 0x10, 0x66, 0x69, 0x78, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x69, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x02, 0x52, 0x0e, 0x66, 0x69, 0x78, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x69, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x0d, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x03, 0x52,
	0x0c, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x40, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x48, 0x04, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x5c, 0x0a, 0x0c, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x65, 0x6e, 0x71,
	0x75, 0x69, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x5c, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x24, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x65, 0x6e, 0x71, 0x75, 0x69,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x62,
	0x0a, 0x0e, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x25, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x65, 0x6e, 0x71, 0x75, 0x69,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x0d, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x78, 0x0a, 0x16, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x5f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x26, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x42, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x14, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x55, 0x72, 0x6c, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x6c, 0x79, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f,
	0x66, 0x69, 0x78, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x61, 0x74,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x61, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f,
	0x61, 0x74, 0x42, 0x8e, 0x02, 0x0a, 0x36, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a,
	0x62, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x74, 0x65, 0x61,
	0x6d, 0x2f, 0x74, 0x64, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x61, 0x64, 0x61, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2f, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x6e, 0x71, 0x75,
	0x69, 0x72, 0x79, 0xaa, 0x02, 0x35, 0x54, 0x61, 0x64, 0x61, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x45, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x35, 0x54, 0x61,
	0x64, 0x61, 0x5c, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5c, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x5c, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5c, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5c, 0x45, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79,
	0x5c, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_rawDescOnce sync.Once
	file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_rawDescData = file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_rawDesc
)

func file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_rawDescGZIP() []byte {
	file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_rawDescOnce.Do(func() {
		file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_rawDescData)
	})
	return file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_rawDescData
}

var file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_goTypes = []interface{}{
	(*CreateRequest)(nil),         // 0: tada.gateway.admin.billing.personal_account.enquiry.v1.CreateRequest
	(*CreateResponse)(nil),        // 1: tada.gateway.admin.billing.personal_account.enquiry.v1.CreateResponse
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
	(v1.EnquiryType)(0),           // 3: tada.billing.api.personal_account.enquiry.v1.EnquiryType
	(v1.PaymentType)(0),           // 4: tada.billing.api.personal_account.enquiry.v1.PaymentType
	(v1.EnquiryStatus)(0),         // 5: tada.billing.api.personal_account.enquiry.v1.EnquiryStatus
	(v1.EnquiryPaymentStatus)(0),  // 6: tada.billing.api.personal_account.enquiry.v1.EnquiryPaymentStatus
}
var file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_depIdxs = []int32{
	2,  // 0: tada.gateway.admin.billing.personal_account.enquiry.v1.CreateResponse.activation_date:type_name -> google.protobuf.Timestamp
	2,  // 1: tada.gateway.admin.billing.personal_account.enquiry.v1.CreateResponse.deactivation_date:type_name -> google.protobuf.Timestamp
	2,  // 2: tada.gateway.admin.billing.personal_account.enquiry.v1.CreateResponse.created_at:type_name -> google.protobuf.Timestamp
	2,  // 3: tada.gateway.admin.billing.personal_account.enquiry.v1.CreateResponse.credited_at:type_name -> google.protobuf.Timestamp
	2,  // 4: tada.gateway.admin.billing.personal_account.enquiry.v1.CreateResponse.actually_paid_at:type_name -> google.protobuf.Timestamp
	2,  // 5: tada.gateway.admin.billing.personal_account.enquiry.v1.CreateResponse.fixation_paid_at:type_name -> google.protobuf.Timestamp
	2,  // 6: tada.gateway.admin.billing.personal_account.enquiry.v1.CreateResponse.expiration_at:type_name -> google.protobuf.Timestamp
	2,  // 7: tada.gateway.admin.billing.personal_account.enquiry.v1.CreateResponse.activate_at:type_name -> google.protobuf.Timestamp
	3,  // 8: tada.gateway.admin.billing.personal_account.enquiry.v1.CreateResponse.enquiry_type:type_name -> tada.billing.api.personal_account.enquiry.v1.EnquiryType
	4,  // 9: tada.gateway.admin.billing.personal_account.enquiry.v1.CreateResponse.payment_type:type_name -> tada.billing.api.personal_account.enquiry.v1.PaymentType
	5,  // 10: tada.gateway.admin.billing.personal_account.enquiry.v1.CreateResponse.enquiry_status:type_name -> tada.billing.api.personal_account.enquiry.v1.EnquiryStatus
	6,  // 11: tada.gateway.admin.billing.personal_account.enquiry.v1.CreateResponse.enquiry_payment_status:type_name -> tada.billing.api.personal_account.enquiry.v1.EnquiryPaymentStatus
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_init() }
func file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_init() {
	if File_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_goTypes,
		DependencyIndexes: file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_depIdxs,
		MessageInfos:      file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_msgTypes,
	}.Build()
	File_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto = out.File
	file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_rawDesc = nil
	file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_goTypes = nil
	file_tada_gateway_admin_billing_personal_account_enquiry_v1_enquiry_client_proto_depIdxs = nil
}
