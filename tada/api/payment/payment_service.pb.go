// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.1
// source: tada/api/payment/payment_service.proto

package payment

import (
	common "github.com/deniskelin/tada-proto/tada/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BindedCardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор привязанной карты
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Название привязанной карты
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// Активна ли карта
	IsActive bool `protobuf:"varint,3,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// Тип карты (Visa, Mastercard, etc.)
	CardType CardType `protobuf:"varint,4,opt,name=card_type,json=cardType,proto3,enum=tada.api.payment.CardType" json:"card_type,omitempty"`
	// Первые 6 цифр номера карты
	CardFirst6 string `protobuf:"bytes,5,opt,name=card_first6,json=cardFirst6,proto3" json:"card_first6,omitempty"`
	// Последние 4 цифры номера карты
	CardLast4 string `protobuf:"bytes,6,opt,name=card_last4,json=cardLast4,proto3" json:"card_last4,omitempty"`
	// Месяц окончания срока действия карты
	CardExpiryMonth string `protobuf:"bytes,7,opt,name=card_expiry_month,json=cardExpiryMonth,proto3" json:"card_expiry_month,omitempty"`
	// Год окончания срока действия карты
	CardExpiryYear string `protobuf:"bytes,8,opt,name=card_expiry_year,json=cardExpiryYear,proto3" json:"card_expiry_year,omitempty"`
	// Страна в которой выпущена карта
	CardIssuerCountry string `protobuf:"bytes,9,opt,name=card_issuer_country,json=cardIssuerCountry,proto3" json:"card_issuer_country,omitempty"`
	// Организация / Банк выпустивший карту
	CardIssuerName string `protobuf:"bytes,10,opt,name=card_issuer_name,json=cardIssuerName,proto3" json:"card_issuer_name,omitempty"`
}

func (x *BindedCardItem) Reset() {
	*x = BindedCardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_payment_payment_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindedCardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindedCardItem) ProtoMessage() {}

func (x *BindedCardItem) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_payment_payment_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindedCardItem.ProtoReflect.Descriptor instead.
func (*BindedCardItem) Descriptor() ([]byte, []int) {
	return file_tada_api_payment_payment_service_proto_rawDescGZIP(), []int{0}
}

func (x *BindedCardItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BindedCardItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BindedCardItem) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *BindedCardItem) GetCardType() CardType {
	if x != nil {
		return x.CardType
	}
	return CardType_CARD_TYPE_UNKNOWN
}

func (x *BindedCardItem) GetCardFirst6() string {
	if x != nil {
		return x.CardFirst6
	}
	return ""
}

func (x *BindedCardItem) GetCardLast4() string {
	if x != nil {
		return x.CardLast4
	}
	return ""
}

func (x *BindedCardItem) GetCardExpiryMonth() string {
	if x != nil {
		return x.CardExpiryMonth
	}
	return ""
}

func (x *BindedCardItem) GetCardExpiryYear() string {
	if x != nil {
		return x.CardExpiryYear
	}
	return ""
}

func (x *BindedCardItem) GetCardIssuerCountry() string {
	if x != nil {
		return x.CardIssuerCountry
	}
	return ""
}

func (x *BindedCardItem) GetCardIssuerName() string {
	if x != nil {
		return x.CardIssuerName
	}
	return ""
}

type CreatePaymentLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор пользователя
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Сумма платежа
	Amount float32 `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// Валюта платежа
	Currency Currency `protobuf:"varint,3,opt,name=currency,proto3,enum=tada.api.payment.Currency" json:"currency,omitempty"`
	// Описание платежа (назначение платежа)
	// todo: length = 128 symbols
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Адрес на который отправить пользователя после платежа
	ReturnUrl string `protobuf:"bytes,5,opt,name=return_url,json=returnUrl,proto3" json:"return_url,omitempty"`
}

func (x *CreatePaymentLinkRequest) Reset() {
	*x = CreatePaymentLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_payment_payment_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePaymentLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentLinkRequest) ProtoMessage() {}

func (x *CreatePaymentLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_payment_payment_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentLinkRequest.ProtoReflect.Descriptor instead.
func (*CreatePaymentLinkRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_payment_payment_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePaymentLinkRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreatePaymentLinkRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreatePaymentLinkRequest) GetCurrency() Currency {
	if x != nil {
		return x.Currency
	}
	return Currency_CURRENCY_UNKNOWN
}

func (x *CreatePaymentLinkRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreatePaymentLinkRequest) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

type CreatePaymentLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Результат выполнения
	Result *common.Operation `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// ссылка для оплаты
	PaymentLink string `protobuf:"bytes,2,opt,name=payment_link,json=paymentLink,proto3" json:"payment_link,omitempty"`
}

func (x *CreatePaymentLinkResponse) Reset() {
	*x = CreatePaymentLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_payment_payment_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePaymentLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentLinkResponse) ProtoMessage() {}

func (x *CreatePaymentLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_payment_payment_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentLinkResponse.ProtoReflect.Descriptor instead.
func (*CreatePaymentLinkResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_payment_payment_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePaymentLinkResponse) GetResult() *common.Operation {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CreatePaymentLinkResponse) GetPaymentLink() string {
	if x != nil {
		return x.PaymentLink
	}
	return ""
}

type ManualPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// идентификатор пользователя
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// сумма платежа
	Amount float32 `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// Описание платежа (назначение платежа)
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ManualPaymentRequest) Reset() {
	*x = ManualPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_payment_payment_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualPaymentRequest) ProtoMessage() {}

func (x *ManualPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_payment_payment_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualPaymentRequest.ProtoReflect.Descriptor instead.
func (*ManualPaymentRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_payment_payment_service_proto_rawDescGZIP(), []int{3}
}

func (x *ManualPaymentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ManualPaymentRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ManualPaymentRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ManualPaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Результат выполнения
	Result *common.Operation `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ManualPaymentResponse) Reset() {
	*x = ManualPaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_payment_payment_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualPaymentResponse) ProtoMessage() {}

func (x *ManualPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_payment_payment_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualPaymentResponse.ProtoReflect.Descriptor instead.
func (*ManualPaymentResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_payment_payment_service_proto_rawDescGZIP(), []int{4}
}

func (x *ManualPaymentResponse) GetResult() *common.Operation {
	if x != nil {
		return x.Result
	}
	return nil
}

type MakeAutoPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// идентификатор пользователя
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// сумма платежа
	Amount float32 `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// комментарий к платежу (назначение платежа)
	Comment string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	// идентификатор карты пользователя с которой произвести автооплату
	CardId string `protobuf:"bytes,4,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
}

func (x *MakeAutoPaymentRequest) Reset() {
	*x = MakeAutoPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_payment_payment_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeAutoPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeAutoPaymentRequest) ProtoMessage() {}

func (x *MakeAutoPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_payment_payment_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeAutoPaymentRequest.ProtoReflect.Descriptor instead.
func (*MakeAutoPaymentRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_payment_payment_service_proto_rawDescGZIP(), []int{5}
}

func (x *MakeAutoPaymentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MakeAutoPaymentRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *MakeAutoPaymentRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *MakeAutoPaymentRequest) GetCardId() string {
	if x != nil {
		return x.CardId
	}
	return ""
}

type MakeAutoPaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Результат выполнения
	Result *common.Operation `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *MakeAutoPaymentResponse) Reset() {
	*x = MakeAutoPaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_payment_payment_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeAutoPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeAutoPaymentResponse) ProtoMessage() {}

func (x *MakeAutoPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_payment_payment_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeAutoPaymentResponse.ProtoReflect.Descriptor instead.
func (*MakeAutoPaymentResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_payment_payment_service_proto_rawDescGZIP(), []int{6}
}

func (x *MakeAutoPaymentResponse) GetResult() *common.Operation {
	if x != nil {
		return x.Result
	}
	return nil
}

type ProcessPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Данные которые приходят от платежной системы
	Data *structpb.Value `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ProcessPaymentRequest) Reset() {
	*x = ProcessPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_payment_payment_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessPaymentRequest) ProtoMessage() {}

func (x *ProcessPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_payment_payment_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessPaymentRequest.ProtoReflect.Descriptor instead.
func (*ProcessPaymentRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_payment_payment_service_proto_rawDescGZIP(), []int{7}
}

func (x *ProcessPaymentRequest) GetData() *structpb.Value {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProcessPaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Результат выполнения
	Result *common.Operation `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ProcessPaymentResponse) Reset() {
	*x = ProcessPaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_payment_payment_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessPaymentResponse) ProtoMessage() {}

func (x *ProcessPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_payment_payment_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessPaymentResponse.ProtoReflect.Descriptor instead.
func (*ProcessPaymentResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_payment_payment_service_proto_rawDescGZIP(), []int{8}
}

func (x *ProcessPaymentResponse) GetResult() *common.Operation {
	if x != nil {
		return x.Result
	}
	return nil
}

type BindCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// идентификатор пользователя
	UserId          string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BindCheckAmount float32 `protobuf:"fixed32,2,opt,name=bind_check_amount,json=bindCheckAmount,proto3" json:"bind_check_amount,omitempty"`
}

func (x *BindCardRequest) Reset() {
	*x = BindCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_payment_payment_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindCardRequest) ProtoMessage() {}

func (x *BindCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_payment_payment_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindCardRequest.ProtoReflect.Descriptor instead.
func (*BindCardRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_payment_payment_service_proto_rawDescGZIP(), []int{9}
}

func (x *BindCardRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BindCardRequest) GetBindCheckAmount() float32 {
	if x != nil {
		return x.BindCheckAmount
	}
	return 0
}

type BindCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *common.Operation `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// Идентификатор привязанной карты
	CardBindId string `protobuf:"bytes,2,opt,name=card_bind_id,json=cardBindId,proto3" json:"card_bind_id,omitempty"`
}

func (x *BindCardResponse) Reset() {
	*x = BindCardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_payment_payment_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindCardResponse) ProtoMessage() {}

func (x *BindCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_payment_payment_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindCardResponse.ProtoReflect.Descriptor instead.
func (*BindCardResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_payment_payment_service_proto_rawDescGZIP(), []int{10}
}

func (x *BindCardResponse) GetResult() *common.Operation {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *BindCardResponse) GetCardBindId() string {
	if x != nil {
		return x.CardBindId
	}
	return ""
}

type GetUsersCardListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// идентификатор пользователя
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Вывести только активные карты
	OnlyActive bool `protobuf:"varint,2,opt,name=only_active,json=onlyActive,proto3" json:"only_active,omitempty"`
	// Количество возвращаемых значений (для пагинации)
	// todo: max value 100
	Limit int32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// Смещение возвращаемых значений (для пагинации)
	Offset int64 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetUsersCardListRequest) Reset() {
	*x = GetUsersCardListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_payment_payment_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersCardListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersCardListRequest) ProtoMessage() {}

func (x *GetUsersCardListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_payment_payment_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersCardListRequest.ProtoReflect.Descriptor instead.
func (*GetUsersCardListRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_payment_payment_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetUsersCardListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUsersCardListRequest) GetOnlyActive() bool {
	if x != nil {
		return x.OnlyActive
	}
	return false
}

func (x *GetUsersCardListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetUsersCardListRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetUsersCardListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// идентификатор пользователя
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Список привязанных карт для оплаты
	Cards *BindedCardItem `protobuf:"bytes,2,opt,name=cards,proto3" json:"cards,omitempty"`
}

func (x *GetUsersCardListResponse) Reset() {
	*x = GetUsersCardListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_payment_payment_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersCardListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersCardListResponse) ProtoMessage() {}

func (x *GetUsersCardListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_payment_payment_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersCardListResponse.ProtoReflect.Descriptor instead.
func (*GetUsersCardListResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_payment_payment_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetUsersCardListResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUsersCardListResponse) GetCards() *BindedCardItem {
	if x != nil {
		return x.Cards
	}
	return nil
}

var File_tada_api_payment_payment_service_proto protoreflect.FileDescriptor

var file_tada_api_payment_payment_service_proto_rawDesc = []byte{
	0x0a, 0x26, 0x74, 0x61, 0x64, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x74, 0x61, 0x64, 0x61, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x74, 0x61, 0x64, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xfc, 0x02, 0x0a, 0x0e, 0x42, 0x69, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x74, 0x61, 0x64, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x36, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x46, 0x69, 0x72, 0x73, 0x74, 0x36,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x34, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x72, 0x64, 0x4c, 0x61, 0x73, 0x74, 0x34, 0x12,
	0x2a, 0x0a, 0x11, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x61, 0x72, 0x64,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x10, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x61, 0x72, 0x64, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x79, 0x59, 0x65, 0x61, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x63, 0x61, 0x72, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x61, 0x72, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xc4, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1a, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x55, 0x72, 0x6c, 0x22, 0x6e, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x69, 0x0a, 0x14, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x47, 0x0a, 0x15, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x61, 0x64,
	0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x7c, 0x0a, 0x16, 0x4d, 0x61,
	0x6b, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x17, 0x4d, 0x61, 0x6b, 0x65,
	0x41, 0x75, 0x74, 0x6f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x43, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x48, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x56, 0x0a, 0x0f, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x62, 0x69, 0x6e, 0x64, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x64, 0x0a, 0x10, 0x42, 0x69,
	0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x20,
	0x0a, 0x0c, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x42, 0x69, 0x6e, 0x64, 0x49, 0x64,
	0x22, 0x81, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x43, 0x61, 0x72,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6f, 0x6e, 0x6c, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x22, 0x6b, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x05, 0x63, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x69, 0x6e, 0x64,
	0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64,
	0x73, 0x32, 0x9a, 0x07, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0xa2, 0x01,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x12, 0x2a, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2e, 0x22, 0x29, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x3a,
	0x01, 0x2a, 0x12, 0x96, 0x01, 0x0a, 0x11, 0x4d, 0x61, 0x6b, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61,
	0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x6e, 0x75,
	0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2a, 0x22, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x4d, 0x61, 0x6e, 0x75, 0x61,
	0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x9a, 0x01, 0x0a, 0x0f,
	0x4d, 0x61, 0x6b, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x28, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x74, 0x61, 0x64, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x6b,
	0x65, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x22, 0x27, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x4d, 0x61, 0x6b, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x98, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x2e, 0x74, 0x61,
	0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x34, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x22, 0x26, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x7b, 0x0a, 0x08, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x21, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x9b, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x43, 0x61, 0x72,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x43, 0x61, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x90,
	0x01, 0x0a, 0x10, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x42, 0x13, 0x54, 0x61, 0x64, 0x61, 0x41, 0x50, 0x49, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x74, 0x64, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x74, 0x61, 0x64, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x3b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0xf8, 0x01, 0x01, 0xaa, 0x02, 0x10, 0x54, 0x61,
	0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0xca, 0x02,
	0x10, 0x54, 0x61, 0x64, 0x61, 0x5c, 0x41, 0x50, 0x49, 0x5c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tada_api_payment_payment_service_proto_rawDescOnce sync.Once
	file_tada_api_payment_payment_service_proto_rawDescData = file_tada_api_payment_payment_service_proto_rawDesc
)

func file_tada_api_payment_payment_service_proto_rawDescGZIP() []byte {
	file_tada_api_payment_payment_service_proto_rawDescOnce.Do(func() {
		file_tada_api_payment_payment_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_tada_api_payment_payment_service_proto_rawDescData)
	})
	return file_tada_api_payment_payment_service_proto_rawDescData
}

var file_tada_api_payment_payment_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_tada_api_payment_payment_service_proto_goTypes = []interface{}{
	(*BindedCardItem)(nil),            // 0: tada.api.payment.BindedCardItem
	(*CreatePaymentLinkRequest)(nil),  // 1: tada.api.payment.CreatePaymentLinkRequest
	(*CreatePaymentLinkResponse)(nil), // 2: tada.api.payment.CreatePaymentLinkResponse
	(*ManualPaymentRequest)(nil),      // 3: tada.api.payment.ManualPaymentRequest
	(*ManualPaymentResponse)(nil),     // 4: tada.api.payment.ManualPaymentResponse
	(*MakeAutoPaymentRequest)(nil),    // 5: tada.api.payment.MakeAutoPaymentRequest
	(*MakeAutoPaymentResponse)(nil),   // 6: tada.api.payment.MakeAutoPaymentResponse
	(*ProcessPaymentRequest)(nil),     // 7: tada.api.payment.ProcessPaymentRequest
	(*ProcessPaymentResponse)(nil),    // 8: tada.api.payment.ProcessPaymentResponse
	(*BindCardRequest)(nil),           // 9: tada.api.payment.BindCardRequest
	(*BindCardResponse)(nil),          // 10: tada.api.payment.BindCardResponse
	(*GetUsersCardListRequest)(nil),   // 11: tada.api.payment.GetUsersCardListRequest
	(*GetUsersCardListResponse)(nil),  // 12: tada.api.payment.GetUsersCardListResponse
	(CardType)(0),                     // 13: tada.api.payment.CardType
	(Currency)(0),                     // 14: tada.api.payment.Currency
	(*common.Operation)(nil),          // 15: tada.common.Operation
	(*structpb.Value)(nil),            // 16: google.protobuf.Value
}
var file_tada_api_payment_payment_service_proto_depIdxs = []int32{
	13, // 0: tada.api.payment.BindedCardItem.card_type:type_name -> tada.api.payment.CardType
	14, // 1: tada.api.payment.CreatePaymentLinkRequest.currency:type_name -> tada.api.payment.Currency
	15, // 2: tada.api.payment.CreatePaymentLinkResponse.result:type_name -> tada.common.Operation
	15, // 3: tada.api.payment.ManualPaymentResponse.result:type_name -> tada.common.Operation
	15, // 4: tada.api.payment.MakeAutoPaymentResponse.result:type_name -> tada.common.Operation
	16, // 5: tada.api.payment.ProcessPaymentRequest.data:type_name -> google.protobuf.Value
	15, // 6: tada.api.payment.ProcessPaymentResponse.result:type_name -> tada.common.Operation
	15, // 7: tada.api.payment.BindCardResponse.result:type_name -> tada.common.Operation
	0,  // 8: tada.api.payment.GetUsersCardListResponse.cards:type_name -> tada.api.payment.BindedCardItem
	1,  // 9: tada.api.payment.Payment.CreatePaymentLink:input_type -> tada.api.payment.CreatePaymentLinkRequest
	3,  // 10: tada.api.payment.Payment.MakeManualPayment:input_type -> tada.api.payment.ManualPaymentRequest
	5,  // 11: tada.api.payment.Payment.MakeAutoPayment:input_type -> tada.api.payment.MakeAutoPaymentRequest
	7,  // 12: tada.api.payment.Payment.ProcessPayment:input_type -> tada.api.payment.ProcessPaymentRequest
	9,  // 13: tada.api.payment.Payment.BindCard:input_type -> tada.api.payment.BindCardRequest
	11, // 14: tada.api.payment.Payment.GetUsersCardList:input_type -> tada.api.payment.GetUsersCardListRequest
	2,  // 15: tada.api.payment.Payment.CreatePaymentLink:output_type -> tada.api.payment.CreatePaymentLinkResponse
	4,  // 16: tada.api.payment.Payment.MakeManualPayment:output_type -> tada.api.payment.ManualPaymentResponse
	6,  // 17: tada.api.payment.Payment.MakeAutoPayment:output_type -> tada.api.payment.MakeAutoPaymentResponse
	7,  // 18: tada.api.payment.Payment.ProcessPayment:output_type -> tada.api.payment.ProcessPaymentRequest
	10, // 19: tada.api.payment.Payment.BindCard:output_type -> tada.api.payment.BindCardResponse
	12, // 20: tada.api.payment.Payment.GetUsersCardList:output_type -> tada.api.payment.GetUsersCardListResponse
	15, // [15:21] is the sub-list for method output_type
	9,  // [9:15] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_tada_api_payment_payment_service_proto_init() }
func file_tada_api_payment_payment_service_proto_init() {
	if File_tada_api_payment_payment_service_proto != nil {
		return
	}
	file_tada_api_payment_data_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tada_api_payment_payment_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindedCardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_payment_payment_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePaymentLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_payment_payment_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePaymentLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_payment_payment_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_payment_payment_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualPaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_payment_payment_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeAutoPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_payment_payment_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeAutoPaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_payment_payment_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_payment_payment_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessPaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_payment_payment_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_payment_payment_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindCardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_payment_payment_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersCardListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_payment_payment_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersCardListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tada_api_payment_payment_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tada_api_payment_payment_service_proto_goTypes,
		DependencyIndexes: file_tada_api_payment_payment_service_proto_depIdxs,
		MessageInfos:      file_tada_api_payment_payment_service_proto_msgTypes,
	}.Build()
	File_tada_api_payment_payment_service_proto = out.File
	file_tada_api_payment_payment_service_proto_rawDesc = nil
	file_tada_api_payment_payment_service_proto_goTypes = nil
	file_tada_api_payment_payment_service_proto_depIdxs = nil
}
