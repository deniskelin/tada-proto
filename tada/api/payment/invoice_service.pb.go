// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.1
// source: tada/api/payment/invoice_service.proto

package payment

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Структура хранения оплачиваемых позиций
type InvoiceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Оплачиваемая позиция
	Comment string `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	// Стоимость позиции
	Amount float32 `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// Налоговая ставка для позиции
	Vat uint32 `protobuf:"varint,3,opt,name=vat,proto3" json:"vat,omitempty"`
	// Включен ли налог в стоимость
	VatIncluded bool `protobuf:"varint,4,opt,name=vat_included,json=vatIncluded,proto3" json:"vat_included,omitempty"`
}

func (x *InvoiceItem) Reset() {
	*x = InvoiceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_payment_invoice_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceItem) ProtoMessage() {}

func (x *InvoiceItem) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_payment_invoice_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceItem.ProtoReflect.Descriptor instead.
func (*InvoiceItem) Descriptor() ([]byte, []int) {
	return file_tada_api_payment_invoice_service_proto_rawDescGZIP(), []int{0}
}

func (x *InvoiceItem) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *InvoiceItem) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *InvoiceItem) GetVat() uint32 {
	if x != nil {
		return x.Vat
	}
	return 0
}

func (x *InvoiceItem) GetVatIncluded() bool {
	if x != nil {
		return x.VatIncluded
	}
	return false
}

// Структура получателя платежа по выставляемому счету
type InvoiceReceiver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Название компании
	CompanyName string `protobuf:"bytes,1,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	// ИНН/КПП компании
	CompanyId string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// Печать компании (base64 encoded image)
	CompanySign string `protobuf:"bytes,3,opt,name=company_sign,json=companySign,proto3" json:"company_sign,omitempty"`
	// Номер счета компании
	CompanyBankAccount string `protobuf:"bytes,4,opt,name=company_bank_account,json=companyBankAccount,proto3" json:"company_bank_account,omitempty"`
	// Название банка
	BankName string `protobuf:"bytes,5,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`
	// БИК банка
	BankId string `protobuf:"bytes,6,opt,name=bank_id,json=bankId,proto3" json:"bank_id,omitempty"`
	// Корр. Счет банка
	BankAccount string `protobuf:"bytes,7,opt,name=bank_account,json=bankAccount,proto3" json:"bank_account,omitempty"`
}

func (x *InvoiceReceiver) Reset() {
	*x = InvoiceReceiver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_payment_invoice_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceReceiver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceReceiver) ProtoMessage() {}

func (x *InvoiceReceiver) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_payment_invoice_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceReceiver.ProtoReflect.Descriptor instead.
func (*InvoiceReceiver) Descriptor() ([]byte, []int) {
	return file_tada_api_payment_invoice_service_proto_rawDescGZIP(), []int{1}
}

func (x *InvoiceReceiver) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *InvoiceReceiver) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *InvoiceReceiver) GetCompanySign() string {
	if x != nil {
		return x.CompanySign
	}
	return ""
}

func (x *InvoiceReceiver) GetCompanyBankAccount() string {
	if x != nil {
		return x.CompanyBankAccount
	}
	return ""
}

func (x *InvoiceReceiver) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *InvoiceReceiver) GetBankId() string {
	if x != nil {
		return x.BankId
	}
	return ""
}

func (x *InvoiceReceiver) GetBankAccount() string {
	if x != nil {
		return x.BankAccount
	}
	return ""
}

// Структура платильщика по выставляемому счету
type InvoiceSender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Название компании или ФИО физ лица или название ИП
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// ИНН/КПП платильщика
	TaxId *string `protobuf:"bytes,2,opt,name=tax_id,json=taxId,proto3,oneof" json:"tax_id,omitempty"`
	// Юридический адрес (юр) или адрес прописки (физ)
	JuridicalAddress string `protobuf:"bytes,3,opt,name=juridical_address,json=juridicalAddress,proto3" json:"juridical_address,omitempty"`
	// Фактический адрес (юр) или почтоный адрес (физ)
	ActualAddress string `protobuf:"bytes,4,opt,name=actual_address,json=actualAddress,proto3" json:"actual_address,omitempty"`
}

func (x *InvoiceSender) Reset() {
	*x = InvoiceSender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_payment_invoice_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceSender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceSender) ProtoMessage() {}

func (x *InvoiceSender) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_payment_invoice_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceSender.ProtoReflect.Descriptor instead.
func (*InvoiceSender) Descriptor() ([]byte, []int) {
	return file_tada_api_payment_invoice_service_proto_rawDescGZIP(), []int{2}
}

func (x *InvoiceSender) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InvoiceSender) GetTaxId() string {
	if x != nil && x.TaxId != nil {
		return *x.TaxId
	}
	return ""
}

func (x *InvoiceSender) GetJuridicalAddress() string {
	if x != nil {
		return x.JuridicalAddress
	}
	return ""
}

func (x *InvoiceSender) GetActualAddress() string {
	if x != nil {
		return x.ActualAddress
	}
	return ""
}

type GenerateInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор пользователя, которому формируется форма платежа
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Идентификатор лицевого счета, по которому будет производиться платеж
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Информация о получателе платежа
	Receiver *InvoiceReceiver `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty"`
	// Информация об отправителе платежа
	Sender *InvoiceSender `protobuf:"bytes,4,opt,name=sender,proto3" json:"sender,omitempty"`
	// Наименование позиция для оплаты
	Items []*InvoiceItem `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
	// Должность бухгалтера (напр. Главный бухгалтер)
	AccountantPosition string `protobuf:"bytes,6,opt,name=accountant_position,json=accountantPosition,proto3" json:"accountant_position,omitempty"`
	// ФИО бухгалтера
	AccountantName string `protobuf:"bytes,8,opt,name=accountant_name,json=accountantName,proto3" json:"accountant_name,omitempty"`
	// Подпись бухгалтера (base64 encoded image)
	AccountantSign string `protobuf:"bytes,7,opt,name=accountant_sign,json=accountantSign,proto3" json:"accountant_sign,omitempty"`
}

func (x *GenerateInvoiceRequest) Reset() {
	*x = GenerateInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_payment_invoice_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateInvoiceRequest) ProtoMessage() {}

func (x *GenerateInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_payment_invoice_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateInvoiceRequest.ProtoReflect.Descriptor instead.
func (*GenerateInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_payment_invoice_service_proto_rawDescGZIP(), []int{3}
}

func (x *GenerateInvoiceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GenerateInvoiceRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *GenerateInvoiceRequest) GetReceiver() *InvoiceReceiver {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *GenerateInvoiceRequest) GetSender() *InvoiceSender {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *GenerateInvoiceRequest) GetItems() []*InvoiceItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GenerateInvoiceRequest) GetAccountantPosition() string {
	if x != nil {
		return x.AccountantPosition
	}
	return ""
}

func (x *GenerateInvoiceRequest) GetAccountantName() string {
	if x != nil {
		return x.AccountantName
	}
	return ""
}

func (x *GenerateInvoiceRequest) GetAccountantSign() string {
	if x != nil {
		return x.AccountantSign
	}
	return ""
}

type GenerateInvoiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор платежа
	PaymentId string `protobuf:"bytes,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	// Тип содержимого файла, например application/pdf
	ContentType string `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	// Содержимое файла
	Content []byte `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *GenerateInvoiceResponse) Reset() {
	*x = GenerateInvoiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_payment_invoice_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateInvoiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateInvoiceResponse) ProtoMessage() {}

func (x *GenerateInvoiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_payment_invoice_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateInvoiceResponse.ProtoReflect.Descriptor instead.
func (*GenerateInvoiceResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_payment_invoice_service_proto_rawDescGZIP(), []int{4}
}

func (x *GenerateInvoiceResponse) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *GenerateInvoiceResponse) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *GenerateInvoiceResponse) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

var File_tada_api_payment_invoice_service_proto protoreflect.FileDescriptor

var file_tada_api_payment_invoice_service_proto_rawDesc = []byte{
	0x0a, 0x26, 0x74, 0x61, 0x64, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x74, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x76, 0x61, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x76,
	0x61, 0x74, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x76, 0x61, 0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x22, 0x81,
	0x02, 0x0a, 0x0f, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x73, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x61,
	0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e,
	0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61,
	0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x9e, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x06, 0x74, 0x61, 0x78, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x74, 0x61, 0x78, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x11, 0x6a, 0x75, 0x72, 0x69, 0x64, 0x69, 0x63, 0x61,
	0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x6a, 0x75, 0x72, 0x69, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x74, 0x61, 0x78,
	0x5f, 0x69, 0x64, 0x22, 0x80, 0x03, 0x0a, 0x16, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x08, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x33,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x61, 0x6e,
	0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x61,
	0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x61,
	0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x22, 0x75, 0x0a, 0x17, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x32, 0xa2, 0x01,
	0x0a, 0x07, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x28, 0x2e, 0x74, 0x61,
	0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x22, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x2f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x3a,
	0x01, 0x2a, 0x42, 0x90, 0x01, 0x0a, 0x10, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x13, 0x54, 0x61, 0x64, 0x61, 0x41, 0x50, 0x49,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3c,
	0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x74, 0x65, 0x61, 0x6d,
	0x2f, 0x74, 0x64, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x61, 0x64, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x3b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0xf8, 0x01, 0x01, 0xaa,
	0x02, 0x10, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0xca, 0x02, 0x10, 0x54, 0x61, 0x64, 0x61, 0x5c, 0x41, 0x50, 0x49, 0x5c, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tada_api_payment_invoice_service_proto_rawDescOnce sync.Once
	file_tada_api_payment_invoice_service_proto_rawDescData = file_tada_api_payment_invoice_service_proto_rawDesc
)

func file_tada_api_payment_invoice_service_proto_rawDescGZIP() []byte {
	file_tada_api_payment_invoice_service_proto_rawDescOnce.Do(func() {
		file_tada_api_payment_invoice_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_tada_api_payment_invoice_service_proto_rawDescData)
	})
	return file_tada_api_payment_invoice_service_proto_rawDescData
}

var file_tada_api_payment_invoice_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_tada_api_payment_invoice_service_proto_goTypes = []interface{}{
	(*InvoiceItem)(nil),             // 0: tada.api.payment.InvoiceItem
	(*InvoiceReceiver)(nil),         // 1: tada.api.payment.InvoiceReceiver
	(*InvoiceSender)(nil),           // 2: tada.api.payment.InvoiceSender
	(*GenerateInvoiceRequest)(nil),  // 3: tada.api.payment.GenerateInvoiceRequest
	(*GenerateInvoiceResponse)(nil), // 4: tada.api.payment.GenerateInvoiceResponse
}
var file_tada_api_payment_invoice_service_proto_depIdxs = []int32{
	1, // 0: tada.api.payment.GenerateInvoiceRequest.receiver:type_name -> tada.api.payment.InvoiceReceiver
	2, // 1: tada.api.payment.GenerateInvoiceRequest.sender:type_name -> tada.api.payment.InvoiceSender
	0, // 2: tada.api.payment.GenerateInvoiceRequest.items:type_name -> tada.api.payment.InvoiceItem
	3, // 3: tada.api.payment.Invoice.CreateInvoice:input_type -> tada.api.payment.GenerateInvoiceRequest
	4, // 4: tada.api.payment.Invoice.CreateInvoice:output_type -> tada.api.payment.GenerateInvoiceResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_tada_api_payment_invoice_service_proto_init() }
func file_tada_api_payment_invoice_service_proto_init() {
	if File_tada_api_payment_invoice_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tada_api_payment_invoice_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_payment_invoice_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceReceiver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_payment_invoice_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceSender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_payment_invoice_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_payment_invoice_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateInvoiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tada_api_payment_invoice_service_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tada_api_payment_invoice_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tada_api_payment_invoice_service_proto_goTypes,
		DependencyIndexes: file_tada_api_payment_invoice_service_proto_depIdxs,
		MessageInfos:      file_tada_api_payment_invoice_service_proto_msgTypes,
	}.Build()
	File_tada_api_payment_invoice_service_proto = out.File
	file_tada_api_payment_invoice_service_proto_rawDesc = nil
	file_tada_api_payment_invoice_service_proto_goTypes = nil
	file_tada_api_payment_invoice_service_proto_depIdxs = nil
}
