// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: tada/api/billing/tariff_service.proto

package billing

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Status of tariff
type TariffStatus int32

const (
	TariffStatus_TARIFF_STATUS_UNSPECIFIED TariffStatus = 0
	TariffStatus_TARIFF_STATUS_ACTIVE      TariffStatus = 1
	TariffStatus_TARIFF_STATUS_ARCHIVE     TariffStatus = 2
)

// Enum value maps for TariffStatus.
var (
	TariffStatus_name = map[int32]string{
		0: "TARIFF_STATUS_UNSPECIFIED",
		1: "TARIFF_STATUS_ACTIVE",
		2: "TARIFF_STATUS_ARCHIVE",
	}
	TariffStatus_value = map[string]int32{
		"TARIFF_STATUS_UNSPECIFIED": 0,
		"TARIFF_STATUS_ACTIVE":      1,
		"TARIFF_STATUS_ARCHIVE":     2,
	}
)

func (x TariffStatus) Enum() *TariffStatus {
	p := new(TariffStatus)
	*p = x
	return p
}

func (x TariffStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TariffStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_tada_api_billing_tariff_service_proto_enumTypes[0].Descriptor()
}

func (TariffStatus) Type() protoreflect.EnumType {
	return &file_tada_api_billing_tariff_service_proto_enumTypes[0]
}

func (x TariffStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TariffStatus.Descriptor instead.
func (TariffStatus) EnumDescriptor() ([]byte, []int) {
	return file_tada_api_billing_tariff_service_proto_rawDescGZIP(), []int{0}
}

// CreateTariffRequest request on create tariff
type CreateTariffRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TariffName           string                 `protobuf:"bytes,1,opt,name=tariff_name,json=tariffName,proto3" json:"tariff_name,omitempty"`
	FreeWorkplaces       int32                  `protobuf:"varint,2,opt,name=free_workplaces,json=freeWorkplaces,proto3" json:"free_workplaces,omitempty"`
	MinTariffWorkplaces  int32                  `protobuf:"varint,3,opt,name=min_tariff_workplaces,json=minTariffWorkplaces,proto3" json:"min_tariff_workplaces,omitempty"`
	MinStepWorkplaces    int32                  `protobuf:"varint,4,opt,name=min_step_workplaces,json=minStepWorkplaces,proto3" json:"min_step_workplaces,omitempty"`
	DiskSpaceQuotaMb     float64                `protobuf:"fixed64,5,opt,name=disk_space_quota_mb,json=diskSpaceQuotaMb,proto3" json:"disk_space_quota_mb,omitempty"`
	IsBillingFree        bool                   `protobuf:"varint,6,opt,name=is_billing_free,json=isBillingFree,proto3" json:"is_billing_free,omitempty"`
	IsBillingFullTime    bool                   `protobuf:"varint,7,opt,name=is_billing_full_time,json=isBillingFullTime,proto3" json:"is_billing_full_time,omitempty"`
	PeriodDays           int32                  `protobuf:"varint,8,opt,name=period_days,json=periodDays,proto3" json:"period_days,omitempty"`
	CostWorkplace        float64                `protobuf:"fixed64,9,opt,name=cost_workplace,json=costWorkplace,proto3" json:"cost_workplace,omitempty"`
	Currency             string                 `protobuf:"bytes,10,opt,name=currency,proto3" json:"currency,omitempty"`
	IsRecalcChangeTariff bool                   `protobuf:"varint,11,opt,name=is_recalc_change_tariff,json=isRecalcChangeTariff,proto3" json:"is_recalc_change_tariff,omitempty"`
	MaxVoiceUser         int32                  `protobuf:"varint,12,opt,name=max_voice_user,json=maxVoiceUser,proto3" json:"max_voice_user,omitempty"`
	MaxVideoUser         int32                  `protobuf:"varint,13,opt,name=max_video_user,json=maxVideoUser,proto3" json:"max_video_user,omitempty"`
	VideoCallBitrate     int32                  `protobuf:"varint,14,opt,name=video_call_bitrate,json=videoCallBitrate,proto3" json:"video_call_bitrate,omitempty"`
	VideoSharingBitrate  int32                  `protobuf:"varint,15,opt,name=video_sharing_bitrate,json=videoSharingBitrate,proto3" json:"video_sharing_bitrate,omitempty"`
	IsDefaultTariff      bool                   `protobuf:"varint,16,opt,name=is_default_tariff,json=isDefaultTariff,proto3" json:"is_default_tariff,omitempty"`
	OpenDate             *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=open_date,json=openDate,proto3" json:"open_date,omitempty"`
	CloseDate            *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=close_date,json=closeDate,proto3" json:"close_date,omitempty"`
}

func (x *CreateTariffRequest) Reset() {
	*x = CreateTariffRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_tariff_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTariffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTariffRequest) ProtoMessage() {}

func (x *CreateTariffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_tariff_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTariffRequest.ProtoReflect.Descriptor instead.
func (*CreateTariffRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_tariff_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTariffRequest) GetTariffName() string {
	if x != nil {
		return x.TariffName
	}
	return ""
}

func (x *CreateTariffRequest) GetFreeWorkplaces() int32 {
	if x != nil {
		return x.FreeWorkplaces
	}
	return 0
}

func (x *CreateTariffRequest) GetMinTariffWorkplaces() int32 {
	if x != nil {
		return x.MinTariffWorkplaces
	}
	return 0
}

func (x *CreateTariffRequest) GetMinStepWorkplaces() int32 {
	if x != nil {
		return x.MinStepWorkplaces
	}
	return 0
}

func (x *CreateTariffRequest) GetDiskSpaceQuotaMb() float64 {
	if x != nil {
		return x.DiskSpaceQuotaMb
	}
	return 0
}

func (x *CreateTariffRequest) GetIsBillingFree() bool {
	if x != nil {
		return x.IsBillingFree
	}
	return false
}

func (x *CreateTariffRequest) GetIsBillingFullTime() bool {
	if x != nil {
		return x.IsBillingFullTime
	}
	return false
}

func (x *CreateTariffRequest) GetPeriodDays() int32 {
	if x != nil {
		return x.PeriodDays
	}
	return 0
}

func (x *CreateTariffRequest) GetCostWorkplace() float64 {
	if x != nil {
		return x.CostWorkplace
	}
	return 0
}

func (x *CreateTariffRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CreateTariffRequest) GetIsRecalcChangeTariff() bool {
	if x != nil {
		return x.IsRecalcChangeTariff
	}
	return false
}

func (x *CreateTariffRequest) GetMaxVoiceUser() int32 {
	if x != nil {
		return x.MaxVoiceUser
	}
	return 0
}

func (x *CreateTariffRequest) GetMaxVideoUser() int32 {
	if x != nil {
		return x.MaxVideoUser
	}
	return 0
}

func (x *CreateTariffRequest) GetVideoCallBitrate() int32 {
	if x != nil {
		return x.VideoCallBitrate
	}
	return 0
}

func (x *CreateTariffRequest) GetVideoSharingBitrate() int32 {
	if x != nil {
		return x.VideoSharingBitrate
	}
	return 0
}

func (x *CreateTariffRequest) GetIsDefaultTariff() bool {
	if x != nil {
		return x.IsDefaultTariff
	}
	return false
}

func (x *CreateTariffRequest) GetOpenDate() *timestamppb.Timestamp {
	if x != nil {
		return x.OpenDate
	}
	return nil
}

func (x *CreateTariffRequest) GetCloseDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CloseDate
	}
	return nil
}

// CreateTariffResponse response on create tariff
type CreateTariffResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TariffId             int64                  `protobuf:"varint,1,opt,name=tariff_id,json=tariffId,proto3" json:"tariff_id,omitempty"`
	TariffName           string                 `protobuf:"bytes,2,opt,name=tariff_name,json=tariffName,proto3" json:"tariff_name,omitempty"`
	FreeWorkplaces       int32                  `protobuf:"varint,3,opt,name=free_workplaces,json=freeWorkplaces,proto3" json:"free_workplaces,omitempty"`
	MinTariffWorkplaces  int32                  `protobuf:"varint,4,opt,name=min_tariff_workplaces,json=minTariffWorkplaces,proto3" json:"min_tariff_workplaces,omitempty"`
	MinStepWorkplaces    int32                  `protobuf:"varint,5,opt,name=min_step_workplaces,json=minStepWorkplaces,proto3" json:"min_step_workplaces,omitempty"`
	DiskSpaceQuotaMb     float64                `protobuf:"fixed64,6,opt,name=disk_space_quota_mb,json=diskSpaceQuotaMb,proto3" json:"disk_space_quota_mb,omitempty"`
	IsBillingFree        bool                   `protobuf:"varint,7,opt,name=is_billing_free,json=isBillingFree,proto3" json:"is_billing_free,omitempty"`
	IsBillingFullTime    bool                   `protobuf:"varint,8,opt,name=is_billing_full_time,json=isBillingFullTime,proto3" json:"is_billing_full_time,omitempty"`
	PeriodDays           int32                  `protobuf:"varint,9,opt,name=period_days,json=periodDays,proto3" json:"period_days,omitempty"`
	CostWorkplace        float64                `protobuf:"fixed64,10,opt,name=cost_workplace,json=costWorkplace,proto3" json:"cost_workplace,omitempty"`
	Currency             string                 `protobuf:"bytes,11,opt,name=currency,proto3" json:"currency,omitempty"`
	IsRecalcChangeTariff bool                   `protobuf:"varint,12,opt,name=is_recalc_change_tariff,json=isRecalcChangeTariff,proto3" json:"is_recalc_change_tariff,omitempty"`
	MaxVoiceUser         int32                  `protobuf:"varint,13,opt,name=max_voice_user,json=maxVoiceUser,proto3" json:"max_voice_user,omitempty"`
	MaxVideoUser         int32                  `protobuf:"varint,14,opt,name=max_video_user,json=maxVideoUser,proto3" json:"max_video_user,omitempty"`
	VideoCallBitrate     int32                  `protobuf:"varint,15,opt,name=video_call_bitrate,json=videoCallBitrate,proto3" json:"video_call_bitrate,omitempty"`
	VideoSharingBitrate  int32                  `protobuf:"varint,16,opt,name=video_sharing_bitrate,json=videoSharingBitrate,proto3" json:"video_sharing_bitrate,omitempty"`
	IsDefaultTariff      bool                   `protobuf:"varint,17,opt,name=is_default_tariff,json=isDefaultTariff,proto3" json:"is_default_tariff,omitempty"`
	OpenDate             *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=open_date,json=openDate,proto3" json:"open_date,omitempty"`
	CloseDate            *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=close_date,json=closeDate,proto3" json:"close_date,omitempty"`
	Status               TariffStatus           `protobuf:"varint,20,opt,name=status,proto3,enum=tada.api.billing.TariffStatus" json:"status,omitempty"`
}

func (x *CreateTariffResponse) Reset() {
	*x = CreateTariffResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_tariff_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTariffResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTariffResponse) ProtoMessage() {}

func (x *CreateTariffResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_tariff_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTariffResponse.ProtoReflect.Descriptor instead.
func (*CreateTariffResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_tariff_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTariffResponse) GetTariffId() int64 {
	if x != nil {
		return x.TariffId
	}
	return 0
}

func (x *CreateTariffResponse) GetTariffName() string {
	if x != nil {
		return x.TariffName
	}
	return ""
}

func (x *CreateTariffResponse) GetFreeWorkplaces() int32 {
	if x != nil {
		return x.FreeWorkplaces
	}
	return 0
}

func (x *CreateTariffResponse) GetMinTariffWorkplaces() int32 {
	if x != nil {
		return x.MinTariffWorkplaces
	}
	return 0
}

func (x *CreateTariffResponse) GetMinStepWorkplaces() int32 {
	if x != nil {
		return x.MinStepWorkplaces
	}
	return 0
}

func (x *CreateTariffResponse) GetDiskSpaceQuotaMb() float64 {
	if x != nil {
		return x.DiskSpaceQuotaMb
	}
	return 0
}

func (x *CreateTariffResponse) GetIsBillingFree() bool {
	if x != nil {
		return x.IsBillingFree
	}
	return false
}

func (x *CreateTariffResponse) GetIsBillingFullTime() bool {
	if x != nil {
		return x.IsBillingFullTime
	}
	return false
}

func (x *CreateTariffResponse) GetPeriodDays() int32 {
	if x != nil {
		return x.PeriodDays
	}
	return 0
}

func (x *CreateTariffResponse) GetCostWorkplace() float64 {
	if x != nil {
		return x.CostWorkplace
	}
	return 0
}

func (x *CreateTariffResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CreateTariffResponse) GetIsRecalcChangeTariff() bool {
	if x != nil {
		return x.IsRecalcChangeTariff
	}
	return false
}

func (x *CreateTariffResponse) GetMaxVoiceUser() int32 {
	if x != nil {
		return x.MaxVoiceUser
	}
	return 0
}

func (x *CreateTariffResponse) GetMaxVideoUser() int32 {
	if x != nil {
		return x.MaxVideoUser
	}
	return 0
}

func (x *CreateTariffResponse) GetVideoCallBitrate() int32 {
	if x != nil {
		return x.VideoCallBitrate
	}
	return 0
}

func (x *CreateTariffResponse) GetVideoSharingBitrate() int32 {
	if x != nil {
		return x.VideoSharingBitrate
	}
	return 0
}

func (x *CreateTariffResponse) GetIsDefaultTariff() bool {
	if x != nil {
		return x.IsDefaultTariff
	}
	return false
}

func (x *CreateTariffResponse) GetOpenDate() *timestamppb.Timestamp {
	if x != nil {
		return x.OpenDate
	}
	return nil
}

func (x *CreateTariffResponse) GetCloseDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CloseDate
	}
	return nil
}

func (x *CreateTariffResponse) GetStatus() TariffStatus {
	if x != nil {
		return x.Status
	}
	return TariffStatus_TARIFF_STATUS_UNSPECIFIED
}

// GetTariffByIdRequest request on get tariff by ID
type GetTariffByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTariffByIdRequest) Reset() {
	*x = GetTariffByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_tariff_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTariffByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTariffByIdRequest) ProtoMessage() {}

func (x *GetTariffByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_tariff_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTariffByIdRequest.ProtoReflect.Descriptor instead.
func (*GetTariffByIdRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_tariff_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetTariffByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// GetTariffByIdResponse response on get tariff by ID
type GetTariffByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TariffId             int64                  `protobuf:"varint,1,opt,name=tariff_id,json=tariffId,proto3" json:"tariff_id,omitempty"`
	TariffName           string                 `protobuf:"bytes,2,opt,name=tariff_name,json=tariffName,proto3" json:"tariff_name,omitempty"`
	FreeWorkplaces       int32                  `protobuf:"varint,3,opt,name=free_workplaces,json=freeWorkplaces,proto3" json:"free_workplaces,omitempty"`
	MinTariffWorkplaces  int32                  `protobuf:"varint,4,opt,name=min_tariff_workplaces,json=minTariffWorkplaces,proto3" json:"min_tariff_workplaces,omitempty"`
	MinStepWorkplaces    int32                  `protobuf:"varint,5,opt,name=min_step_workplaces,json=minStepWorkplaces,proto3" json:"min_step_workplaces,omitempty"`
	DiskSpaceQuotaMb     float64                `protobuf:"fixed64,6,opt,name=disk_space_quota_mb,json=diskSpaceQuotaMb,proto3" json:"disk_space_quota_mb,omitempty"`
	IsBillingFree        bool                   `protobuf:"varint,7,opt,name=is_billing_free,json=isBillingFree,proto3" json:"is_billing_free,omitempty"`
	IsBillingFullTime    bool                   `protobuf:"varint,8,opt,name=is_billing_full_time,json=isBillingFullTime,proto3" json:"is_billing_full_time,omitempty"`
	PeriodDays           int32                  `protobuf:"varint,9,opt,name=period_days,json=periodDays,proto3" json:"period_days,omitempty"`
	CostWorkplace        float64                `protobuf:"fixed64,10,opt,name=cost_workplace,json=costWorkplace,proto3" json:"cost_workplace,omitempty"`
	Currency             string                 `protobuf:"bytes,11,opt,name=currency,proto3" json:"currency,omitempty"`
	IsRecalcChangeTariff bool                   `protobuf:"varint,12,opt,name=is_recalc_change_tariff,json=isRecalcChangeTariff,proto3" json:"is_recalc_change_tariff,omitempty"`
	MaxVoiceUser         int32                  `protobuf:"varint,13,opt,name=max_voice_user,json=maxVoiceUser,proto3" json:"max_voice_user,omitempty"`
	MaxVideoUser         int32                  `protobuf:"varint,14,opt,name=max_video_user,json=maxVideoUser,proto3" json:"max_video_user,omitempty"`
	VideoCallBitrate     int32                  `protobuf:"varint,15,opt,name=video_call_bitrate,json=videoCallBitrate,proto3" json:"video_call_bitrate,omitempty"`
	VideoSharingBitrate  int32                  `protobuf:"varint,16,opt,name=video_sharing_bitrate,json=videoSharingBitrate,proto3" json:"video_sharing_bitrate,omitempty"`
	IsDefaultTariff      bool                   `protobuf:"varint,17,opt,name=is_default_tariff,json=isDefaultTariff,proto3" json:"is_default_tariff,omitempty"`
	OpenDate             *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=open_date,json=openDate,proto3" json:"open_date,omitempty"`
	CloseDate            *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=close_date,json=closeDate,proto3" json:"close_date,omitempty"`
	Status               TariffStatus           `protobuf:"varint,20,opt,name=status,proto3,enum=tada.api.billing.TariffStatus" json:"status,omitempty"`
}

func (x *GetTariffByIdResponse) Reset() {
	*x = GetTariffByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_tariff_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTariffByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTariffByIdResponse) ProtoMessage() {}

func (x *GetTariffByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_tariff_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTariffByIdResponse.ProtoReflect.Descriptor instead.
func (*GetTariffByIdResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_tariff_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetTariffByIdResponse) GetTariffId() int64 {
	if x != nil {
		return x.TariffId
	}
	return 0
}

func (x *GetTariffByIdResponse) GetTariffName() string {
	if x != nil {
		return x.TariffName
	}
	return ""
}

func (x *GetTariffByIdResponse) GetFreeWorkplaces() int32 {
	if x != nil {
		return x.FreeWorkplaces
	}
	return 0
}

func (x *GetTariffByIdResponse) GetMinTariffWorkplaces() int32 {
	if x != nil {
		return x.MinTariffWorkplaces
	}
	return 0
}

func (x *GetTariffByIdResponse) GetMinStepWorkplaces() int32 {
	if x != nil {
		return x.MinStepWorkplaces
	}
	return 0
}

func (x *GetTariffByIdResponse) GetDiskSpaceQuotaMb() float64 {
	if x != nil {
		return x.DiskSpaceQuotaMb
	}
	return 0
}

func (x *GetTariffByIdResponse) GetIsBillingFree() bool {
	if x != nil {
		return x.IsBillingFree
	}
	return false
}

func (x *GetTariffByIdResponse) GetIsBillingFullTime() bool {
	if x != nil {
		return x.IsBillingFullTime
	}
	return false
}

func (x *GetTariffByIdResponse) GetPeriodDays() int32 {
	if x != nil {
		return x.PeriodDays
	}
	return 0
}

func (x *GetTariffByIdResponse) GetCostWorkplace() float64 {
	if x != nil {
		return x.CostWorkplace
	}
	return 0
}

func (x *GetTariffByIdResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetTariffByIdResponse) GetIsRecalcChangeTariff() bool {
	if x != nil {
		return x.IsRecalcChangeTariff
	}
	return false
}

func (x *GetTariffByIdResponse) GetMaxVoiceUser() int32 {
	if x != nil {
		return x.MaxVoiceUser
	}
	return 0
}

func (x *GetTariffByIdResponse) GetMaxVideoUser() int32 {
	if x != nil {
		return x.MaxVideoUser
	}
	return 0
}

func (x *GetTariffByIdResponse) GetVideoCallBitrate() int32 {
	if x != nil {
		return x.VideoCallBitrate
	}
	return 0
}

func (x *GetTariffByIdResponse) GetVideoSharingBitrate() int32 {
	if x != nil {
		return x.VideoSharingBitrate
	}
	return 0
}

func (x *GetTariffByIdResponse) GetIsDefaultTariff() bool {
	if x != nil {
		return x.IsDefaultTariff
	}
	return false
}

func (x *GetTariffByIdResponse) GetOpenDate() *timestamppb.Timestamp {
	if x != nil {
		return x.OpenDate
	}
	return nil
}

func (x *GetTariffByIdResponse) GetCloseDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CloseDate
	}
	return nil
}

func (x *GetTariffByIdResponse) GetStatus() TariffStatus {
	if x != nil {
		return x.Status
	}
	return TariffStatus_TARIFF_STATUS_UNSPECIFIED
}

// GetTariffsListRequest request on get tariffs list
type GetTariffsListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTariffsListRequest) Reset() {
	*x = GetTariffsListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_tariff_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTariffsListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTariffsListRequest) ProtoMessage() {}

func (x *GetTariffsListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_tariff_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTariffsListRequest.ProtoReflect.Descriptor instead.
func (*GetTariffsListRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_tariff_service_proto_rawDescGZIP(), []int{4}
}

// GetTariffsListResponse response on get tariffs list
type GetTariffsListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tariffs []*GetTariffByIdResponse `protobuf:"bytes,1,rep,name=tariffs,proto3" json:"tariffs,omitempty"`
}

func (x *GetTariffsListResponse) Reset() {
	*x = GetTariffsListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_tariff_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTariffsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTariffsListResponse) ProtoMessage() {}

func (x *GetTariffsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_tariff_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTariffsListResponse.ProtoReflect.Descriptor instead.
func (*GetTariffsListResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_tariff_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetTariffsListResponse) GetTariffs() []*GetTariffByIdResponse {
	if x != nil {
		return x.Tariffs
	}
	return nil
}

// GetActiveTariffsListRequest request on get active tariffs list
type GetActiveTariffsListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetActiveTariffsListRequest) Reset() {
	*x = GetActiveTariffsListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_tariff_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveTariffsListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveTariffsListRequest) ProtoMessage() {}

func (x *GetActiveTariffsListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_tariff_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveTariffsListRequest.ProtoReflect.Descriptor instead.
func (*GetActiveTariffsListRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_tariff_service_proto_rawDescGZIP(), []int{6}
}

// GetActiveTariffsListResponse response on get active tariffs list
type GetActiveTariffsListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tariffs []*GetTariffByIdResponse `protobuf:"bytes,1,rep,name=tariffs,proto3" json:"tariffs,omitempty"`
}

func (x *GetActiveTariffsListResponse) Reset() {
	*x = GetActiveTariffsListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_tariff_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveTariffsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveTariffsListResponse) ProtoMessage() {}

func (x *GetActiveTariffsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_tariff_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveTariffsListResponse.ProtoReflect.Descriptor instead.
func (*GetActiveTariffsListResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_tariff_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetActiveTariffsListResponse) GetTariffs() []*GetTariffByIdResponse {
	if x != nil {
		return x.Tariffs
	}
	return nil
}

// CloseTariffRequest request on close(archive) tariff
type CloseTariffRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TariffId  int64                  `protobuf:"varint,1,opt,name=tariff_id,json=tariffId,proto3" json:"tariff_id,omitempty"`
	CloseDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=close_date,json=closeDate,proto3" json:"close_date,omitempty"`
}

func (x *CloseTariffRequest) Reset() {
	*x = CloseTariffRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_tariff_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseTariffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTariffRequest) ProtoMessage() {}

func (x *CloseTariffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_tariff_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTariffRequest.ProtoReflect.Descriptor instead.
func (*CloseTariffRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_tariff_service_proto_rawDescGZIP(), []int{8}
}

func (x *CloseTariffRequest) GetTariffId() int64 {
	if x != nil {
		return x.TariffId
	}
	return 0
}

func (x *CloseTariffRequest) GetCloseDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CloseDate
	}
	return nil
}

// CloseTariffResponse response on close(archive) tariff
type CloseTariffResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *CloseTariffResponse) Reset() {
	*x = CloseTariffResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_tariff_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseTariffResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTariffResponse) ProtoMessage() {}

func (x *CloseTariffResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_tariff_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTariffResponse.ProtoReflect.Descriptor instead.
func (*CloseTariffResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_tariff_service_proto_rawDescGZIP(), []int{9}
}

func (x *CloseTariffResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// SetTariffAsDefaultRequest request on set tariff as default
type SetTariffAsDefaultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TariffId int64 `protobuf:"varint,1,opt,name=tariff_id,json=tariffId,proto3" json:"tariff_id,omitempty"`
}

func (x *SetTariffAsDefaultRequest) Reset() {
	*x = SetTariffAsDefaultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_tariff_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTariffAsDefaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTariffAsDefaultRequest) ProtoMessage() {}

func (x *SetTariffAsDefaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_tariff_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTariffAsDefaultRequest.ProtoReflect.Descriptor instead.
func (*SetTariffAsDefaultRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_tariff_service_proto_rawDescGZIP(), []int{10}
}

func (x *SetTariffAsDefaultRequest) GetTariffId() int64 {
	if x != nil {
		return x.TariffId
	}
	return 0
}

// SetTariffAsDefaultResponse response on set tariff as default
type SetTariffAsDefaultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SetTariffAsDefaultResponse) Reset() {
	*x = SetTariffAsDefaultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_tariff_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTariffAsDefaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTariffAsDefaultResponse) ProtoMessage() {}

func (x *SetTariffAsDefaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_tariff_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTariffAsDefaultResponse.ProtoReflect.Descriptor instead.
func (*SetTariffAsDefaultResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_tariff_service_proto_rawDescGZIP(), []int{11}
}

func (x *SetTariffAsDefaultResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// UpdateTariffRequest request on update tariff
type UpdateTariffRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTariffRequest) Reset() {
	*x = UpdateTariffRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_tariff_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTariffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTariffRequest) ProtoMessage() {}

func (x *UpdateTariffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_tariff_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTariffRequest.ProtoReflect.Descriptor instead.
func (*UpdateTariffRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_tariff_service_proto_rawDescGZIP(), []int{12}
}

// UpdateTariffResponse response on update tariff
type UpdateTariffResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTariffResponse) Reset() {
	*x = UpdateTariffResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_tariff_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTariffResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTariffResponse) ProtoMessage() {}

func (x *UpdateTariffResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_tariff_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTariffResponse.ProtoReflect.Descriptor instead.
func (*UpdateTariffResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_tariff_service_proto_rawDescGZIP(), []int{13}
}

var File_tada_api_billing_tariff_service_proto protoreflect.FileDescriptor

var file_tada_api_billing_tariff_service_proto_rawDesc = []byte{
	0x0a, 0x25, 0x74, 0x61, 0x64, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2f, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb4, 0x06, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x72, 0x65, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x6d, 0x69,
	0x6e, 0x5f, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6d, 0x69, 0x6e, 0x54, 0x61,
	0x72, 0x69, 0x66, 0x66, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x12, 0x2e,
	0x0a, 0x13, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x69, 0x6e,
	0x53, 0x74, 0x65, 0x70, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x12, 0x2d,
	0x0a, 0x13, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x5f, 0x6d, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x64, 0x69, 0x73,
	0x6b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x4d, 0x62, 0x12, 0x26, 0x0a,
	0x0f, 0x69, 0x73, 0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x72, 0x65, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x46, 0x72, 0x65, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x46, 0x75,
	0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x44, 0x61, 0x79, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x73, 0x74, 0x5f,
	0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0d, 0x63, 0x6f, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x35, 0x0a, 0x17, 0x69, 0x73,
	0x5f, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x63, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74,
	0x61, 0x72, 0x69, 0x66, 0x66, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x52,
	0x65, 0x63, 0x61, 0x6c, 0x63, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x61, 0x72, 0x69, 0x66,
	0x66, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x6d, 0x61, 0x78, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x0a,
	0x12, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x62, 0x69, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x43, 0x61, 0x6c, 0x6c, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x69, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12,
	0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x61,
	0x72, 0x69, 0x66, 0x66, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x12, 0x37, 0x0a, 0x09, 0x6f,
	0x70, 0x65, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22,
	0x8a, 0x07, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x69,
	0x66, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72,
	0x69, 0x66, 0x66, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x69,
	0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x77,
	0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x66, 0x72, 0x65, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x12,
	0x32, 0x0a, 0x15, 0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x5f, 0x77, 0x6f,
	0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13,
	0x6d, 0x69, 0x6e, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x5f,
	0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x11, 0x6d, 0x69, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x6d, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x10, 0x64, 0x69, 0x73, 0x6b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x4d, 0x62, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x42,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x46, 0x72, 0x65, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x69, 0x73,
	0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x46, 0x75, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x61, 0x79, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x6f, 0x73, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x63, 0x6f, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x35, 0x0a, 0x17, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x63, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x14, 0x69, 0x73, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x63, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x6d, 0x61, 0x78, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e,
	0x6d, 0x61, 0x78, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x12, 0x32, 0x0a, 0x15, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66,
	0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x08, 0x6f, 0x70, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x26, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x8b, 0x07, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x69,
	0x66, 0x66, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x61, 0x72, 0x69, 0x66, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x66, 0x72, 0x65, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x72, 0x65, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x61, 0x72,
	0x69, 0x66, 0x66, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6d, 0x69, 0x6e, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x57,
	0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x57,
	0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x13, 0x64, 0x69, 0x73,
	0x6b, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x6d, 0x62,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x64, 0x69, 0x73, 0x6b, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x4d, 0x62, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x69, 0x73, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x46, 0x72, 0x65, 0x65,
	0x12, 0x2f, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x66,
	0x75, 0x6c, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x69, 0x73, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x46, 0x75, 0x6c, 0x6c, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x64, 0x61, 0x79, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x61,
	0x79, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x63, 0x6f, 0x73, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x35, 0x0a, 0x17, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x61,
	0x6c, 0x63, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x63,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x12, 0x24, 0x0a, 0x0e,
	0x6d, 0x61, 0x78, 0x5f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x61, 0x6c, 0x6c, 0x42,
	0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x68, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73,
	0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x74, 0x61, 0x64,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x61,
	0x72, 0x69, 0x66, 0x66, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5b, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72,
	0x69, 0x66, 0x66, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x07, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x61, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x69, 0x66,
	0x66, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x72, 0x69, 0x66, 0x66, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x07, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x73, 0x22, 0x6c, 0x0a, 0x12, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x2f, 0x0a, 0x13, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x38, 0x0a, 0x19, 0x53, 0x65, 0x74,
	0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x41, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x69, 0x66,
	0x66, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66,
	0x41, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x69,
	0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x62, 0x0a, 0x0c, 0x54, 0x61,
	0x72, 0x69, 0x66, 0x66, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x19, 0x54, 0x41,
	0x52, 0x49, 0x46, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x41, 0x52,
	0x49, 0x46, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x45, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x41, 0x52, 0x49, 0x46, 0x46, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x10, 0x02, 0x32, 0xb8,
	0x08, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x12, 0x8d, 0x01, 0x0a, 0x0c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x12, 0x25, 0x2e, 0x74, 0x61, 0x64,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x69, 0x66,
	0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x28, 0x1a, 0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x2f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x3a, 0x01, 0x2a, 0x12, 0x8d, 0x01, 0x0a, 0x0c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x12, 0x25, 0x2e, 0x74, 0x61, 0x64,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x69, 0x66,
	0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x28, 0x32, 0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x2f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x3a, 0x01, 0x2a, 0x12, 0x91, 0x01, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x42, 0x79, 0x49, 0x64, 0x12, 0x26, 0x2e, 0x74, 0x61,
	0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x29, 0x22, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x2f, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x42, 0x79, 0x49, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0x95, 0x01,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x27, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x74, 0x61, 0x64, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x22, 0x25, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x61, 0x72,
	0x69, 0x66, 0x66, 0x2f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xad, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d,
	0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x72, 0x69, 0x66,
	0x66, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x30, 0x22, 0x2b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x2f, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x89, 0x01, 0x0a, 0x0b, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54,
	0x61, 0x72, 0x69, 0x66, 0x66, 0x12, 0x24, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x61,
	0x72, 0x69, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x61,
	0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x2a, 0x22, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x61, 0x72, 0x69,
	0x66, 0x66, 0x2f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x3a, 0x01,
	0x2a, 0x12, 0xa5, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x41,
	0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x2b, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x74, 0x54,
	0x61, 0x72, 0x69, 0x66, 0x66, 0x41, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x61, 0x72, 0x69,
	0x66, 0x66, 0x41, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x32, 0x29, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x61, 0x72,
	0x69, 0x66, 0x66, 0x2f, 0x53, 0x65, 0x74, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x41, 0x73, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x3a, 0x01, 0x2a, 0x42, 0x89, 0x01, 0x0a, 0x10, 0x74, 0x61,
	0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x42, 0x13,
	0x54, 0x61, 0x64, 0x61, 0x41, 0x50, 0x49, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x74, 0x61,
	0x64, 0x61, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x74, 0x64, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67,
	0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x61, 0x64, 0x61, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x3b, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0xaa, 0x02, 0x0c, 0x54, 0x61, 0x64, 0x61, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0xca, 0x02, 0x10, 0x54, 0x61, 0x64, 0x61, 0x5c, 0x41, 0x50, 0x49, 0x5c, 0x42, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tada_api_billing_tariff_service_proto_rawDescOnce sync.Once
	file_tada_api_billing_tariff_service_proto_rawDescData = file_tada_api_billing_tariff_service_proto_rawDesc
)

func file_tada_api_billing_tariff_service_proto_rawDescGZIP() []byte {
	file_tada_api_billing_tariff_service_proto_rawDescOnce.Do(func() {
		file_tada_api_billing_tariff_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_tada_api_billing_tariff_service_proto_rawDescData)
	})
	return file_tada_api_billing_tariff_service_proto_rawDescData
}

var file_tada_api_billing_tariff_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tada_api_billing_tariff_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_tada_api_billing_tariff_service_proto_goTypes = []interface{}{
	(TariffStatus)(0),                    // 0: tada.api.billing.TariffStatus
	(*CreateTariffRequest)(nil),          // 1: tada.api.billing.CreateTariffRequest
	(*CreateTariffResponse)(nil),         // 2: tada.api.billing.CreateTariffResponse
	(*GetTariffByIdRequest)(nil),         // 3: tada.api.billing.GetTariffByIdRequest
	(*GetTariffByIdResponse)(nil),        // 4: tada.api.billing.GetTariffByIdResponse
	(*GetTariffsListRequest)(nil),        // 5: tada.api.billing.GetTariffsListRequest
	(*GetTariffsListResponse)(nil),       // 6: tada.api.billing.GetTariffsListResponse
	(*GetActiveTariffsListRequest)(nil),  // 7: tada.api.billing.GetActiveTariffsListRequest
	(*GetActiveTariffsListResponse)(nil), // 8: tada.api.billing.GetActiveTariffsListResponse
	(*CloseTariffRequest)(nil),           // 9: tada.api.billing.CloseTariffRequest
	(*CloseTariffResponse)(nil),          // 10: tada.api.billing.CloseTariffResponse
	(*SetTariffAsDefaultRequest)(nil),    // 11: tada.api.billing.SetTariffAsDefaultRequest
	(*SetTariffAsDefaultResponse)(nil),   // 12: tada.api.billing.SetTariffAsDefaultResponse
	(*UpdateTariffRequest)(nil),          // 13: tada.api.billing.UpdateTariffRequest
	(*UpdateTariffResponse)(nil),         // 14: tada.api.billing.UpdateTariffResponse
	(*timestamppb.Timestamp)(nil),        // 15: google.protobuf.Timestamp
}
var file_tada_api_billing_tariff_service_proto_depIdxs = []int32{
	15, // 0: tada.api.billing.CreateTariffRequest.open_date:type_name -> google.protobuf.Timestamp
	15, // 1: tada.api.billing.CreateTariffRequest.close_date:type_name -> google.protobuf.Timestamp
	15, // 2: tada.api.billing.CreateTariffResponse.open_date:type_name -> google.protobuf.Timestamp
	15, // 3: tada.api.billing.CreateTariffResponse.close_date:type_name -> google.protobuf.Timestamp
	0,  // 4: tada.api.billing.CreateTariffResponse.status:type_name -> tada.api.billing.TariffStatus
	15, // 5: tada.api.billing.GetTariffByIdResponse.open_date:type_name -> google.protobuf.Timestamp
	15, // 6: tada.api.billing.GetTariffByIdResponse.close_date:type_name -> google.protobuf.Timestamp
	0,  // 7: tada.api.billing.GetTariffByIdResponse.status:type_name -> tada.api.billing.TariffStatus
	4,  // 8: tada.api.billing.GetTariffsListResponse.tariffs:type_name -> tada.api.billing.GetTariffByIdResponse
	4,  // 9: tada.api.billing.GetActiveTariffsListResponse.tariffs:type_name -> tada.api.billing.GetTariffByIdResponse
	15, // 10: tada.api.billing.CloseTariffRequest.close_date:type_name -> google.protobuf.Timestamp
	1,  // 11: tada.api.billing.Tariff.CreateTariff:input_type -> tada.api.billing.CreateTariffRequest
	13, // 12: tada.api.billing.Tariff.UpdateTariff:input_type -> tada.api.billing.UpdateTariffRequest
	3,  // 13: tada.api.billing.Tariff.GetTariffById:input_type -> tada.api.billing.GetTariffByIdRequest
	5,  // 14: tada.api.billing.Tariff.GetTariffsList:input_type -> tada.api.billing.GetTariffsListRequest
	7,  // 15: tada.api.billing.Tariff.GetActiveTariffsList:input_type -> tada.api.billing.GetActiveTariffsListRequest
	9,  // 16: tada.api.billing.Tariff.CloseTariff:input_type -> tada.api.billing.CloseTariffRequest
	11, // 17: tada.api.billing.Tariff.SetTariffAsDefault:input_type -> tada.api.billing.SetTariffAsDefaultRequest
	2,  // 18: tada.api.billing.Tariff.CreateTariff:output_type -> tada.api.billing.CreateTariffResponse
	14, // 19: tada.api.billing.Tariff.UpdateTariff:output_type -> tada.api.billing.UpdateTariffResponse
	4,  // 20: tada.api.billing.Tariff.GetTariffById:output_type -> tada.api.billing.GetTariffByIdResponse
	6,  // 21: tada.api.billing.Tariff.GetTariffsList:output_type -> tada.api.billing.GetTariffsListResponse
	8,  // 22: tada.api.billing.Tariff.GetActiveTariffsList:output_type -> tada.api.billing.GetActiveTariffsListResponse
	10, // 23: tada.api.billing.Tariff.CloseTariff:output_type -> tada.api.billing.CloseTariffResponse
	12, // 24: tada.api.billing.Tariff.SetTariffAsDefault:output_type -> tada.api.billing.SetTariffAsDefaultResponse
	18, // [18:25] is the sub-list for method output_type
	11, // [11:18] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_tada_api_billing_tariff_service_proto_init() }
func file_tada_api_billing_tariff_service_proto_init() {
	if File_tada_api_billing_tariff_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tada_api_billing_tariff_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTariffRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_tariff_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTariffResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_tariff_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTariffByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_tariff_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTariffByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_tariff_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTariffsListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_tariff_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTariffsListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_tariff_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveTariffsListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_tariff_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveTariffsListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_tariff_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseTariffRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_tariff_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseTariffResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_tariff_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTariffAsDefaultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_tariff_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTariffAsDefaultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_tariff_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTariffRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_tariff_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTariffResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tada_api_billing_tariff_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tada_api_billing_tariff_service_proto_goTypes,
		DependencyIndexes: file_tada_api_billing_tariff_service_proto_depIdxs,
		EnumInfos:         file_tada_api_billing_tariff_service_proto_enumTypes,
		MessageInfos:      file_tada_api_billing_tariff_service_proto_msgTypes,
	}.Build()
	File_tada_api_billing_tariff_service_proto = out.File
	file_tada_api_billing_tariff_service_proto_rawDesc = nil
	file_tada_api_billing_tariff_service_proto_goTypes = nil
	file_tada_api_billing_tariff_service_proto_depIdxs = nil
}
