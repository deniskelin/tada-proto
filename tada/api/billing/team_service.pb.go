// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: tada/api/billing/team_service.proto

package billing

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AddTeamOnPersonalAccountRequest request on add team on personal account
type AddTeamOnPersonalAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64  `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
	TeamUuid          string `protobuf:"bytes,2,opt,name=team_uuid,json=teamUuid,proto3" json:"team_uuid,omitempty"`
}

func (x *AddTeamOnPersonalAccountRequest) Reset() {
	*x = AddTeamOnPersonalAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_team_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTeamOnPersonalAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTeamOnPersonalAccountRequest) ProtoMessage() {}

func (x *AddTeamOnPersonalAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_team_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTeamOnPersonalAccountRequest.ProtoReflect.Descriptor instead.
func (*AddTeamOnPersonalAccountRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_team_service_proto_rawDescGZIP(), []int{0}
}

func (x *AddTeamOnPersonalAccountRequest) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

func (x *AddTeamOnPersonalAccountRequest) GetTeamUuid() string {
	if x != nil {
		return x.TeamUuid
	}
	return ""
}

// AddTeamOnPersonalAccountResponse response on add team on personal account
type AddTeamOnPersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *AddTeamOnPersonalAccountResponse) Reset() {
	*x = AddTeamOnPersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_team_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTeamOnPersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTeamOnPersonalAccountResponse) ProtoMessage() {}

func (x *AddTeamOnPersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_team_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTeamOnPersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*AddTeamOnPersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_team_service_proto_rawDescGZIP(), []int{1}
}

func (x *AddTeamOnPersonalAccountResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// DeleteTeamFromPersonalAccountRequest request on delete team from personal account
type DeleteTeamFromPersonalAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64                  `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
	TeamId            int64                  `protobuf:"varint,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	TeamUuid          string                 `protobuf:"bytes,3,opt,name=team_uuid,json=teamUuid,proto3" json:"team_uuid,omitempty"`
	DeleteDate        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=delete_date,json=deleteDate,proto3" json:"delete_date,omitempty"`
}

func (x *DeleteTeamFromPersonalAccountRequest) Reset() {
	*x = DeleteTeamFromPersonalAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_team_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTeamFromPersonalAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTeamFromPersonalAccountRequest) ProtoMessage() {}

func (x *DeleteTeamFromPersonalAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_team_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTeamFromPersonalAccountRequest.ProtoReflect.Descriptor instead.
func (*DeleteTeamFromPersonalAccountRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_team_service_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteTeamFromPersonalAccountRequest) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

func (x *DeleteTeamFromPersonalAccountRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *DeleteTeamFromPersonalAccountRequest) GetTeamUuid() string {
	if x != nil {
		return x.TeamUuid
	}
	return ""
}

func (x *DeleteTeamFromPersonalAccountRequest) GetDeleteDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DeleteDate
	}
	return nil
}

// DeleteTeamFromPersonalAccountResponse response on delete team from personal account
type DeleteTeamFromPersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteTeamFromPersonalAccountResponse) Reset() {
	*x = DeleteTeamFromPersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_team_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTeamFromPersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTeamFromPersonalAccountResponse) ProtoMessage() {}

func (x *DeleteTeamFromPersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_team_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTeamFromPersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*DeleteTeamFromPersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_team_service_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteTeamFromPersonalAccountResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// GetTeamsOnPersonalAccountRequest request on get team on personal account
type GetTeamsOnPersonalAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64 `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
}

func (x *GetTeamsOnPersonalAccountRequest) Reset() {
	*x = GetTeamsOnPersonalAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_team_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamsOnPersonalAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamsOnPersonalAccountRequest) ProtoMessage() {}

func (x *GetTeamsOnPersonalAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_team_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamsOnPersonalAccountRequest.ProtoReflect.Descriptor instead.
func (*GetTeamsOnPersonalAccountRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_team_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetTeamsOnPersonalAccountRequest) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

// GetTeamsOnPersonalAccountResponse response on get team on personal account
type GetTeamsOnPersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teams []*GetTeamOnPersonalAccountResponse `protobuf:"bytes,1,rep,name=teams,proto3" json:"teams,omitempty"`
}

func (x *GetTeamsOnPersonalAccountResponse) Reset() {
	*x = GetTeamsOnPersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_team_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamsOnPersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamsOnPersonalAccountResponse) ProtoMessage() {}

func (x *GetTeamsOnPersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_team_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamsOnPersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*GetTeamsOnPersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_team_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetTeamsOnPersonalAccountResponse) GetTeams() []*GetTeamOnPersonalAccountResponse {
	if x != nil {
		return x.Teams
	}
	return nil
}

// GetTeamOnPersonalAccountResponse response on get team on personal account
type GetTeamOnPersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64                  `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
	TeamId            int64                  `protobuf:"varint,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	TeamUuid          string                 `protobuf:"bytes,3,opt,name=team_uuid,json=teamUuid,proto3" json:"team_uuid,omitempty"`
	OpenDate          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=open_date,json=openDate,proto3" json:"open_date,omitempty"`
	CloseDate         *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=close_date,json=closeDate,proto3" json:"close_date,omitempty"`
}

func (x *GetTeamOnPersonalAccountResponse) Reset() {
	*x = GetTeamOnPersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_team_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamOnPersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamOnPersonalAccountResponse) ProtoMessage() {}

func (x *GetTeamOnPersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_team_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamOnPersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*GetTeamOnPersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_team_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetTeamOnPersonalAccountResponse) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

func (x *GetTeamOnPersonalAccountResponse) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *GetTeamOnPersonalAccountResponse) GetTeamUuid() string {
	if x != nil {
		return x.TeamUuid
	}
	return ""
}

func (x *GetTeamOnPersonalAccountResponse) GetOpenDate() *timestamppb.Timestamp {
	if x != nil {
		return x.OpenDate
	}
	return nil
}

func (x *GetTeamOnPersonalAccountResponse) GetCloseDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CloseDate
	}
	return nil
}

// CheckTeamByIDOnPersonalAccountRequest request on check team by id on personal account
type CheckTeamOnPersonalAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64  `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
	TeamId            int64  `protobuf:"varint,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	TeamUuid          string `protobuf:"bytes,3,opt,name=team_uuid,json=teamUuid,proto3" json:"team_uuid,omitempty"`
}

func (x *CheckTeamOnPersonalAccountRequest) Reset() {
	*x = CheckTeamOnPersonalAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_team_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTeamOnPersonalAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTeamOnPersonalAccountRequest) ProtoMessage() {}

func (x *CheckTeamOnPersonalAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_team_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTeamOnPersonalAccountRequest.ProtoReflect.Descriptor instead.
func (*CheckTeamOnPersonalAccountRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_team_service_proto_rawDescGZIP(), []int{7}
}

func (x *CheckTeamOnPersonalAccountRequest) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

func (x *CheckTeamOnPersonalAccountRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *CheckTeamOnPersonalAccountRequest) GetTeamUuid() string {
	if x != nil {
		return x.TeamUuid
	}
	return ""
}

// CheckTeamByIDOnPersonalAccountResponse response on check team by id on personal account
type CheckTeamOnPersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *CheckTeamOnPersonalAccountResponse) Reset() {
	*x = CheckTeamOnPersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_team_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTeamOnPersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTeamOnPersonalAccountResponse) ProtoMessage() {}

func (x *CheckTeamOnPersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_team_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTeamOnPersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*CheckTeamOnPersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_team_service_proto_rawDescGZIP(), []int{8}
}

func (x *CheckTeamOnPersonalAccountResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// GetTeamBitrateRequest request on get team bitrate
type GetTeamBitrateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamUuid string `protobuf:"bytes,1,opt,name=team_uuid,json=teamUuid,proto3" json:"team_uuid,omitempty"`
}

func (x *GetTeamBitrateRequest) Reset() {
	*x = GetTeamBitrateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_team_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamBitrateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamBitrateRequest) ProtoMessage() {}

func (x *GetTeamBitrateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_team_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamBitrateRequest.ProtoReflect.Descriptor instead.
func (*GetTeamBitrateRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_team_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetTeamBitrateRequest) GetTeamUuid() string {
	if x != nil {
		return x.TeamUuid
	}
	return ""
}

// GetTeamBitrateResponse response on get team bitrate
type GetTeamBitrateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoCallBitrate    int32 `protobuf:"varint,1,opt,name=video_call_bitrate,json=videoCallBitrate,proto3" json:"video_call_bitrate,omitempty"`
	VideoSharingBitrate int32 `protobuf:"varint,2,opt,name=video_sharing_bitrate,json=videoSharingBitrate,proto3" json:"video_sharing_bitrate,omitempty"`
}

func (x *GetTeamBitrateResponse) Reset() {
	*x = GetTeamBitrateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_team_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamBitrateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamBitrateResponse) ProtoMessage() {}

func (x *GetTeamBitrateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_team_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamBitrateResponse.ProtoReflect.Descriptor instead.
func (*GetTeamBitrateResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_team_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetTeamBitrateResponse) GetVideoCallBitrate() int32 {
	if x != nil {
		return x.VideoCallBitrate
	}
	return 0
}

func (x *GetTeamBitrateResponse) GetVideoSharingBitrate() int32 {
	if x != nil {
		return x.VideoSharingBitrate
	}
	return 0
}

var File_tada_api_billing_team_service_proto protoreflect.FileDescriptor

var file_tada_api_billing_team_service_proto_rawDesc = []byte{
	0x0a, 0x23, 0x74, 0x61, 0x64, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6e, 0x0a, 0x1f, 0x41, 0x64, 0x64, 0x54, 0x65, 0x61,
	0x6d, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65,
	0x61, 0x6d, 0x55, 0x75, 0x69, 0x64, 0x22, 0x3c, 0x0a, 0x20, 0x41, 0x64, 0x64, 0x54, 0x65, 0x61,
	0x6d, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0xc9, 0x01, 0x0a, 0x24, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x65, 0x61, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x13, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x22, 0x41, 0x0a, 0x25, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x46, 0x72,
	0x6f, 0x6d, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x52, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x4f,
	0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x61, 0x6d, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x05,
	0x74, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x74, 0x61,
	0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x22, 0xfc, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x61, 0x6d, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x21, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54,
	0x65, 0x61, 0x6d, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x55, 0x75, 0x69,
	0x64, 0x22, 0x3e, 0x0a, 0x22, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x65, 0x61, 0x6d, 0x4f, 0x6e,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x34, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x69, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65,
	0x61, 0x6d, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x65, 0x61, 0x6d, 0x55, 0x75, 0x69, 0x64, 0x22, 0x7a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x61, 0x6d, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12,
	0x32, 0x0a, 0x15, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x32, 0xb4, 0x07, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x12, 0xbb, 0x01, 0x0a,
	0x18, 0x41, 0x64, 0x64, 0x54, 0x65, 0x61, 0x6d, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x2e, 0x74, 0x61, 0x64, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64,
	0x54, 0x65, 0x61, 0x6d, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x74,
	0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x41, 0x64, 0x64, 0x54, 0x65, 0x61, 0x6d, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x1a, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x2f, 0x41,
	0x64, 0x64, 0x54, 0x65, 0x61, 0x6d, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xcf, 0x01, 0x0a, 0x1d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x2e, 0x74,
	0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x37, 0x2a, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x2f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xbf, 0x01, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x2e, 0x74, 0x61, 0x64,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33,
	0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x22, 0x2e, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x65, 0x61,
	0x6d, 0x2f, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xc3,
	0x01, 0x0a, 0x1a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x65, 0x61, 0x6d, 0x4f, 0x6e, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x2e,
	0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x65, 0x61, 0x6d, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x34, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x65, 0x61, 0x6d, 0x4f,
	0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34,
	0x22, 0x2f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x2f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x65, 0x61, 0x6d,
	0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x3a, 0x01, 0x2a, 0x12, 0x93, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d,
	0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x61, 0x6d, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x69, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x28, 0x22, 0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x2f, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d,
	0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x42, 0x89, 0x01, 0x0a, 0x10, 0x74,
	0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x42,
	0x13, 0x54, 0x61, 0x64, 0x61, 0x41, 0x50, 0x49, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x74,
	0x61, 0x64, 0x61, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x74, 0x64, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x61, 0x64, 0x61,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x3b, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0xaa, 0x02, 0x0c, 0x54, 0x61, 0x64, 0x61, 0x2e, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0xca, 0x02, 0x10, 0x54, 0x61, 0x64, 0x61, 0x5c, 0x41, 0x50, 0x49, 0x5c, 0x42,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tada_api_billing_team_service_proto_rawDescOnce sync.Once
	file_tada_api_billing_team_service_proto_rawDescData = file_tada_api_billing_team_service_proto_rawDesc
)

func file_tada_api_billing_team_service_proto_rawDescGZIP() []byte {
	file_tada_api_billing_team_service_proto_rawDescOnce.Do(func() {
		file_tada_api_billing_team_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_tada_api_billing_team_service_proto_rawDescData)
	})
	return file_tada_api_billing_team_service_proto_rawDescData
}

var file_tada_api_billing_team_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_tada_api_billing_team_service_proto_goTypes = []interface{}{
	(*AddTeamOnPersonalAccountRequest)(nil),       // 0: tada.api.billing.AddTeamOnPersonalAccountRequest
	(*AddTeamOnPersonalAccountResponse)(nil),      // 1: tada.api.billing.AddTeamOnPersonalAccountResponse
	(*DeleteTeamFromPersonalAccountRequest)(nil),  // 2: tada.api.billing.DeleteTeamFromPersonalAccountRequest
	(*DeleteTeamFromPersonalAccountResponse)(nil), // 3: tada.api.billing.DeleteTeamFromPersonalAccountResponse
	(*GetTeamsOnPersonalAccountRequest)(nil),      // 4: tada.api.billing.GetTeamsOnPersonalAccountRequest
	(*GetTeamsOnPersonalAccountResponse)(nil),     // 5: tada.api.billing.GetTeamsOnPersonalAccountResponse
	(*GetTeamOnPersonalAccountResponse)(nil),      // 6: tada.api.billing.GetTeamOnPersonalAccountResponse
	(*CheckTeamOnPersonalAccountRequest)(nil),     // 7: tada.api.billing.CheckTeamOnPersonalAccountRequest
	(*CheckTeamOnPersonalAccountResponse)(nil),    // 8: tada.api.billing.CheckTeamOnPersonalAccountResponse
	(*GetTeamBitrateRequest)(nil),                 // 9: tada.api.billing.GetTeamBitrateRequest
	(*GetTeamBitrateResponse)(nil),                // 10: tada.api.billing.GetTeamBitrateResponse
	(*timestamppb.Timestamp)(nil),                 // 11: google.protobuf.Timestamp
}
var file_tada_api_billing_team_service_proto_depIdxs = []int32{
	11, // 0: tada.api.billing.DeleteTeamFromPersonalAccountRequest.delete_date:type_name -> google.protobuf.Timestamp
	6,  // 1: tada.api.billing.GetTeamsOnPersonalAccountResponse.teams:type_name -> tada.api.billing.GetTeamOnPersonalAccountResponse
	11, // 2: tada.api.billing.GetTeamOnPersonalAccountResponse.open_date:type_name -> google.protobuf.Timestamp
	11, // 3: tada.api.billing.GetTeamOnPersonalAccountResponse.close_date:type_name -> google.protobuf.Timestamp
	0,  // 4: tada.api.billing.Team.AddTeamOnPersonalAccount:input_type -> tada.api.billing.AddTeamOnPersonalAccountRequest
	2,  // 5: tada.api.billing.Team.DeleteTeamFromPersonalAccount:input_type -> tada.api.billing.DeleteTeamFromPersonalAccountRequest
	4,  // 6: tada.api.billing.Team.GetTeamsOnPersonalAccount:input_type -> tada.api.billing.GetTeamsOnPersonalAccountRequest
	7,  // 7: tada.api.billing.Team.CheckTeamOnPersonalAccount:input_type -> tada.api.billing.CheckTeamOnPersonalAccountRequest
	9,  // 8: tada.api.billing.Team.GetTeamBitrate:input_type -> tada.api.billing.GetTeamBitrateRequest
	1,  // 9: tada.api.billing.Team.AddTeamOnPersonalAccount:output_type -> tada.api.billing.AddTeamOnPersonalAccountResponse
	3,  // 10: tada.api.billing.Team.DeleteTeamFromPersonalAccount:output_type -> tada.api.billing.DeleteTeamFromPersonalAccountResponse
	5,  // 11: tada.api.billing.Team.GetTeamsOnPersonalAccount:output_type -> tada.api.billing.GetTeamsOnPersonalAccountResponse
	8,  // 12: tada.api.billing.Team.CheckTeamOnPersonalAccount:output_type -> tada.api.billing.CheckTeamOnPersonalAccountResponse
	10, // 13: tada.api.billing.Team.GetTeamBitrate:output_type -> tada.api.billing.GetTeamBitrateResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_tada_api_billing_team_service_proto_init() }
func file_tada_api_billing_team_service_proto_init() {
	if File_tada_api_billing_team_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tada_api_billing_team_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTeamOnPersonalAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_team_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTeamOnPersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_team_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTeamFromPersonalAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_team_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTeamFromPersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_team_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamsOnPersonalAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_team_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamsOnPersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_team_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamOnPersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_team_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTeamOnPersonalAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_team_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTeamOnPersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_team_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamBitrateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_team_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamBitrateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tada_api_billing_team_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tada_api_billing_team_service_proto_goTypes,
		DependencyIndexes: file_tada_api_billing_team_service_proto_depIdxs,
		MessageInfos:      file_tada_api_billing_team_service_proto_msgTypes,
	}.Build()
	File_tada_api_billing_team_service_proto = out.File
	file_tada_api_billing_team_service_proto_rawDesc = nil
	file_tada_api_billing_team_service_proto_goTypes = nil
	file_tada_api_billing_team_service_proto_depIdxs = nil
}
