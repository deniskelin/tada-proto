// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.1
// source: tada/api/billing/personal_account_service.proto

package billing

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PersonalAccountStatus is status of personal account
type PersonalAccountStatus int32

const (
	PersonalAccountStatus_PERSONAL_ACCOUNT_STATUS_UNSPECIFIED PersonalAccountStatus = 0
	PersonalAccountStatus_PERSONAL_ACCOUNT_STATUS_ACTIVE      PersonalAccountStatus = 1
	PersonalAccountStatus_PERSONAL_ACCOUNT_STATUS_SUSPENDED   PersonalAccountStatus = 2
	PersonalAccountStatus_PERSONAL_ACCOUNT_STATUS_BLOCKED     PersonalAccountStatus = 3
)

// Enum value maps for PersonalAccountStatus.
var (
	PersonalAccountStatus_name = map[int32]string{
		0: "PERSONAL_ACCOUNT_STATUS_UNSPECIFIED",
		1: "PERSONAL_ACCOUNT_STATUS_ACTIVE",
		2: "PERSONAL_ACCOUNT_STATUS_SUSPENDED",
		3: "PERSONAL_ACCOUNT_STATUS_BLOCKED",
	}
	PersonalAccountStatus_value = map[string]int32{
		"PERSONAL_ACCOUNT_STATUS_UNSPECIFIED": 0,
		"PERSONAL_ACCOUNT_STATUS_ACTIVE":      1,
		"PERSONAL_ACCOUNT_STATUS_SUSPENDED":   2,
		"PERSONAL_ACCOUNT_STATUS_BLOCKED":     3,
	}
)

func (x PersonalAccountStatus) Enum() *PersonalAccountStatus {
	p := new(PersonalAccountStatus)
	*p = x
	return p
}

func (x PersonalAccountStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PersonalAccountStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_tada_api_billing_personal_account_service_proto_enumTypes[0].Descriptor()
}

func (PersonalAccountStatus) Type() protoreflect.EnumType {
	return &file_tada_api_billing_personal_account_service_proto_enumTypes[0]
}

func (x PersonalAccountStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PersonalAccountStatus.Descriptor instead.
func (PersonalAccountStatus) EnumDescriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{0}
}

// CreatePersonalAccountRequest request on create personal account
type CreatePersonalAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerUuid string  `protobuf:"bytes,1,opt,name=owner_uuid,json=ownerUuid,proto3" json:"owner_uuid,omitempty"`
	FullName  *string `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3,oneof" json:"full_name,omitempty"`
	Phone     string  `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	TeamUuid  string  `protobuf:"bytes,4,opt,name=team_uuid,json=teamUuid,proto3" json:"team_uuid,omitempty"`
}

func (x *CreatePersonalAccountRequest) Reset() {
	*x = CreatePersonalAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePersonalAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePersonalAccountRequest) ProtoMessage() {}

func (x *CreatePersonalAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePersonalAccountRequest.ProtoReflect.Descriptor instead.
func (*CreatePersonalAccountRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePersonalAccountRequest) GetOwnerUuid() string {
	if x != nil {
		return x.OwnerUuid
	}
	return ""
}

func (x *CreatePersonalAccountRequest) GetFullName() string {
	if x != nil && x.FullName != nil {
		return *x.FullName
	}
	return ""
}

func (x *CreatePersonalAccountRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreatePersonalAccountRequest) GetTeamUuid() string {
	if x != nil {
		return x.TeamUuid
	}
	return ""
}

// CreatePersonalAccountResponse response on create personal account
type CreatePersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId   int64                  `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
	FullName            *string                `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3,oneof" json:"full_name,omitempty"`
	Phone               string                 `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	OwnerId             int64                  `protobuf:"varint,4,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	OwnerUuid           string                 `protobuf:"bytes,5,opt,name=owner_uuid,json=ownerUuid,proto3" json:"owner_uuid,omitempty"`
	TariffId            int64                  `protobuf:"varint,6,opt,name=tariff_id,json=tariffId,proto3" json:"tariff_id,omitempty"`
	TariffName          string                 `protobuf:"bytes,7,opt,name=tariff_name,json=tariffName,proto3" json:"tariff_name,omitempty"`
	DiscountId          int64                  `protobuf:"varint,8,opt,name=discount_id,json=discountId,proto3" json:"discount_id,omitempty"`
	DiscountAmount      int32                  `protobuf:"varint,9,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`
	Status              PersonalAccountStatus  `protobuf:"varint,10,opt,name=status,proto3,enum=tada.api.billing.PersonalAccountStatus" json:"status,omitempty"`
	NextBillingDate     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=next_billing_date,json=nextBillingDate,proto3" json:"next_billing_date,omitempty"`
	MinTariffWorkplaces int32                  `protobuf:"varint,12,opt,name=min_tariff_workplaces,json=minTariffWorkplaces,proto3" json:"min_tariff_workplaces,omitempty"`
	MinStepWorkplaces   int32                  `protobuf:"varint,13,opt,name=min_step_workplaces,json=minStepWorkplaces,proto3" json:"min_step_workplaces,omitempty"`
	VideoCallBitrate    int32                  `protobuf:"varint,14,opt,name=video_call_bitrate,json=videoCallBitrate,proto3" json:"video_call_bitrate,omitempty"`
	VideoSharingBitrate int32                  `protobuf:"varint,15,opt,name=video_sharing_bitrate,json=videoSharingBitrate,proto3" json:"video_sharing_bitrate,omitempty"`
	TeamCount           int32                  `protobuf:"varint,16,opt,name=team_count,json=teamCount,proto3" json:"team_count,omitempty"`
	WorkplaceCount      int32                  `protobuf:"varint,17,opt,name=workplace_count,json=workplaceCount,proto3" json:"workplace_count,omitempty"`
	UsersCount          int32                  `protobuf:"varint,18,opt,name=users_count,json=usersCount,proto3" json:"users_count,omitempty"`
	FreeWorkplaces      int32                  `protobuf:"varint,19,opt,name=free_workplaces,json=freeWorkplaces,proto3" json:"free_workplaces,omitempty"`
	PaidWorkplaces      int32                  `protobuf:"varint,20,opt,name=paid_workplaces,json=paidWorkplaces,proto3" json:"paid_workplaces,omitempty"`
}

func (x *CreatePersonalAccountResponse) Reset() {
	*x = CreatePersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePersonalAccountResponse) ProtoMessage() {}

func (x *CreatePersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*CreatePersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePersonalAccountResponse) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

func (x *CreatePersonalAccountResponse) GetFullName() string {
	if x != nil && x.FullName != nil {
		return *x.FullName
	}
	return ""
}

func (x *CreatePersonalAccountResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreatePersonalAccountResponse) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *CreatePersonalAccountResponse) GetOwnerUuid() string {
	if x != nil {
		return x.OwnerUuid
	}
	return ""
}

func (x *CreatePersonalAccountResponse) GetTariffId() int64 {
	if x != nil {
		return x.TariffId
	}
	return 0
}

func (x *CreatePersonalAccountResponse) GetTariffName() string {
	if x != nil {
		return x.TariffName
	}
	return ""
}

func (x *CreatePersonalAccountResponse) GetDiscountId() int64 {
	if x != nil {
		return x.DiscountId
	}
	return 0
}

func (x *CreatePersonalAccountResponse) GetDiscountAmount() int32 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *CreatePersonalAccountResponse) GetStatus() PersonalAccountStatus {
	if x != nil {
		return x.Status
	}
	return PersonalAccountStatus_PERSONAL_ACCOUNT_STATUS_UNSPECIFIED
}

func (x *CreatePersonalAccountResponse) GetNextBillingDate() *timestamppb.Timestamp {
	if x != nil {
		return x.NextBillingDate
	}
	return nil
}

func (x *CreatePersonalAccountResponse) GetMinTariffWorkplaces() int32 {
	if x != nil {
		return x.MinTariffWorkplaces
	}
	return 0
}

func (x *CreatePersonalAccountResponse) GetMinStepWorkplaces() int32 {
	if x != nil {
		return x.MinStepWorkplaces
	}
	return 0
}

func (x *CreatePersonalAccountResponse) GetVideoCallBitrate() int32 {
	if x != nil {
		return x.VideoCallBitrate
	}
	return 0
}

func (x *CreatePersonalAccountResponse) GetVideoSharingBitrate() int32 {
	if x != nil {
		return x.VideoSharingBitrate
	}
	return 0
}

func (x *CreatePersonalAccountResponse) GetTeamCount() int32 {
	if x != nil {
		return x.TeamCount
	}
	return 0
}

func (x *CreatePersonalAccountResponse) GetWorkplaceCount() int32 {
	if x != nil {
		return x.WorkplaceCount
	}
	return 0
}

func (x *CreatePersonalAccountResponse) GetUsersCount() int32 {
	if x != nil {
		return x.UsersCount
	}
	return 0
}

func (x *CreatePersonalAccountResponse) GetFreeWorkplaces() int32 {
	if x != nil {
		return x.FreeWorkplaces
	}
	return 0
}

func (x *CreatePersonalAccountResponse) GetPaidWorkplaces() int32 {
	if x != nil {
		return x.PaidWorkplaces
	}
	return 0
}

// GetPersonalAccountByIDRequest request on get personal account by ID
type GetPersonalAccountByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64 `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
}

func (x *GetPersonalAccountByIDRequest) Reset() {
	*x = GetPersonalAccountByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonalAccountByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonalAccountByIDRequest) ProtoMessage() {}

func (x *GetPersonalAccountByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonalAccountByIDRequest.ProtoReflect.Descriptor instead.
func (*GetPersonalAccountByIDRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetPersonalAccountByIDRequest) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

// GetPersonalAccountByIDResponse response on get personal account by ID
type GetPersonalAccountByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId   int64                  `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
	FullName            *string                `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3,oneof" json:"full_name,omitempty"`
	Phone               string                 `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	OwnerId             int64                  `protobuf:"varint,4,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	OwnerUuid           string                 `protobuf:"bytes,5,opt,name=owner_uuid,json=ownerUuid,proto3" json:"owner_uuid,omitempty"`
	TariffId            int64                  `protobuf:"varint,6,opt,name=tariff_id,json=tariffId,proto3" json:"tariff_id,omitempty"`
	TariffName          string                 `protobuf:"bytes,7,opt,name=tariff_name,json=tariffName,proto3" json:"tariff_name,omitempty"`
	DiscountId          int64                  `protobuf:"varint,8,opt,name=discount_id,json=discountId,proto3" json:"discount_id,omitempty"`
	DiscountAmount      int32                  `protobuf:"varint,9,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`
	Status              PersonalAccountStatus  `protobuf:"varint,10,opt,name=status,proto3,enum=tada.api.billing.PersonalAccountStatus" json:"status,omitempty"`
	NextBillingDate     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=next_billing_date,json=nextBillingDate,proto3" json:"next_billing_date,omitempty"`
	MinTariffWorkplaces int32                  `protobuf:"varint,12,opt,name=min_tariff_workplaces,json=minTariffWorkplaces,proto3" json:"min_tariff_workplaces,omitempty"`
	MinStepWorkplaces   int32                  `protobuf:"varint,13,opt,name=min_step_workplaces,json=minStepWorkplaces,proto3" json:"min_step_workplaces,omitempty"`
	VideoCallBitrate    int32                  `protobuf:"varint,14,opt,name=video_call_bitrate,json=videoCallBitrate,proto3" json:"video_call_bitrate,omitempty"`
	VideoSharingBitrate int32                  `protobuf:"varint,15,opt,name=video_sharing_bitrate,json=videoSharingBitrate,proto3" json:"video_sharing_bitrate,omitempty"`
	TeamCount           int32                  `protobuf:"varint,16,opt,name=team_count,json=teamCount,proto3" json:"team_count,omitempty"`
	WorkplaceCount      int32                  `protobuf:"varint,17,opt,name=workplace_count,json=workplaceCount,proto3" json:"workplace_count,omitempty"`
	UsersCount          int32                  `protobuf:"varint,18,opt,name=users_count,json=usersCount,proto3" json:"users_count,omitempty"`
	FreeWorkplaces      int32                  `protobuf:"varint,19,opt,name=free_workplaces,json=freeWorkplaces,proto3" json:"free_workplaces,omitempty"`
	PaidWorkplaces      int32                  `protobuf:"varint,20,opt,name=paid_workplaces,json=paidWorkplaces,proto3" json:"paid_workplaces,omitempty"`
}

func (x *GetPersonalAccountByIDResponse) Reset() {
	*x = GetPersonalAccountByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonalAccountByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonalAccountByIDResponse) ProtoMessage() {}

func (x *GetPersonalAccountByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonalAccountByIDResponse.ProtoReflect.Descriptor instead.
func (*GetPersonalAccountByIDResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetPersonalAccountByIDResponse) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

func (x *GetPersonalAccountByIDResponse) GetFullName() string {
	if x != nil && x.FullName != nil {
		return *x.FullName
	}
	return ""
}

func (x *GetPersonalAccountByIDResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetPersonalAccountByIDResponse) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *GetPersonalAccountByIDResponse) GetOwnerUuid() string {
	if x != nil {
		return x.OwnerUuid
	}
	return ""
}

func (x *GetPersonalAccountByIDResponse) GetTariffId() int64 {
	if x != nil {
		return x.TariffId
	}
	return 0
}

func (x *GetPersonalAccountByIDResponse) GetTariffName() string {
	if x != nil {
		return x.TariffName
	}
	return ""
}

func (x *GetPersonalAccountByIDResponse) GetDiscountId() int64 {
	if x != nil {
		return x.DiscountId
	}
	return 0
}

func (x *GetPersonalAccountByIDResponse) GetDiscountAmount() int32 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *GetPersonalAccountByIDResponse) GetStatus() PersonalAccountStatus {
	if x != nil {
		return x.Status
	}
	return PersonalAccountStatus_PERSONAL_ACCOUNT_STATUS_UNSPECIFIED
}

func (x *GetPersonalAccountByIDResponse) GetNextBillingDate() *timestamppb.Timestamp {
	if x != nil {
		return x.NextBillingDate
	}
	return nil
}

func (x *GetPersonalAccountByIDResponse) GetMinTariffWorkplaces() int32 {
	if x != nil {
		return x.MinTariffWorkplaces
	}
	return 0
}

func (x *GetPersonalAccountByIDResponse) GetMinStepWorkplaces() int32 {
	if x != nil {
		return x.MinStepWorkplaces
	}
	return 0
}

func (x *GetPersonalAccountByIDResponse) GetVideoCallBitrate() int32 {
	if x != nil {
		return x.VideoCallBitrate
	}
	return 0
}

func (x *GetPersonalAccountByIDResponse) GetVideoSharingBitrate() int32 {
	if x != nil {
		return x.VideoSharingBitrate
	}
	return 0
}

func (x *GetPersonalAccountByIDResponse) GetTeamCount() int32 {
	if x != nil {
		return x.TeamCount
	}
	return 0
}

func (x *GetPersonalAccountByIDResponse) GetWorkplaceCount() int32 {
	if x != nil {
		return x.WorkplaceCount
	}
	return 0
}

func (x *GetPersonalAccountByIDResponse) GetUsersCount() int32 {
	if x != nil {
		return x.UsersCount
	}
	return 0
}

func (x *GetPersonalAccountByIDResponse) GetFreeWorkplaces() int32 {
	if x != nil {
		return x.FreeWorkplaces
	}
	return 0
}

func (x *GetPersonalAccountByIDResponse) GetPaidWorkplaces() int32 {
	if x != nil {
		return x.PaidWorkplaces
	}
	return 0
}

// GetPersonalAccountIDByOwnerUUIDRequest request on get personal account ID by ownerUUID
type GetPersonalAccountIDByOwnerUUIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerUuid string `protobuf:"bytes,1,opt,name=owner_uuid,json=ownerUuid,proto3" json:"owner_uuid,omitempty"`
}

func (x *GetPersonalAccountIDByOwnerUUIDRequest) Reset() {
	*x = GetPersonalAccountIDByOwnerUUIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonalAccountIDByOwnerUUIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonalAccountIDByOwnerUUIDRequest) ProtoMessage() {}

func (x *GetPersonalAccountIDByOwnerUUIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonalAccountIDByOwnerUUIDRequest.ProtoReflect.Descriptor instead.
func (*GetPersonalAccountIDByOwnerUUIDRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetPersonalAccountIDByOwnerUUIDRequest) GetOwnerUuid() string {
	if x != nil {
		return x.OwnerUuid
	}
	return ""
}

// GetPersonalAccountIDByOwnerUUIDResponse response on get personal account ID by ownerUUID
type GetPersonalAccountIDByOwnerUUIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64 `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
}

func (x *GetPersonalAccountIDByOwnerUUIDResponse) Reset() {
	*x = GetPersonalAccountIDByOwnerUUIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonalAccountIDByOwnerUUIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonalAccountIDByOwnerUUIDResponse) ProtoMessage() {}

func (x *GetPersonalAccountIDByOwnerUUIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonalAccountIDByOwnerUUIDResponse.ProtoReflect.Descriptor instead.
func (*GetPersonalAccountIDByOwnerUUIDResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetPersonalAccountIDByOwnerUUIDResponse) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

// GetPersonalAccountIDByTeamUUIDRequest request on get personal account ID by teamUUID
type GetPersonalAccountIDByTeamUUIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamUuid string `protobuf:"bytes,1,opt,name=team_uuid,json=teamUuid,proto3" json:"team_uuid,omitempty"`
}

func (x *GetPersonalAccountIDByTeamUUIDRequest) Reset() {
	*x = GetPersonalAccountIDByTeamUUIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonalAccountIDByTeamUUIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonalAccountIDByTeamUUIDRequest) ProtoMessage() {}

func (x *GetPersonalAccountIDByTeamUUIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonalAccountIDByTeamUUIDRequest.ProtoReflect.Descriptor instead.
func (*GetPersonalAccountIDByTeamUUIDRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetPersonalAccountIDByTeamUUIDRequest) GetTeamUuid() string {
	if x != nil {
		return x.TeamUuid
	}
	return ""
}

// GetPersonalAccountIDByTeamUUIDResponse response on get personal account ID by teamUUID
type GetPersonalAccountIDByTeamUUIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64 `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
}

func (x *GetPersonalAccountIDByTeamUUIDResponse) Reset() {
	*x = GetPersonalAccountIDByTeamUUIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonalAccountIDByTeamUUIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonalAccountIDByTeamUUIDResponse) ProtoMessage() {}

func (x *GetPersonalAccountIDByTeamUUIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonalAccountIDByTeamUUIDResponse.ProtoReflect.Descriptor instead.
func (*GetPersonalAccountIDByTeamUUIDResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetPersonalAccountIDByTeamUUIDResponse) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

// GetPersonalAccountsListRequest request on get list of personal accounts
type GetPersonalAccountsListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64  `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
	Limit             *int32 `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Offset            *int32 `protobuf:"varint,3,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
}

func (x *GetPersonalAccountsListRequest) Reset() {
	*x = GetPersonalAccountsListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonalAccountsListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonalAccountsListRequest) ProtoMessage() {}

func (x *GetPersonalAccountsListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonalAccountsListRequest.ProtoReflect.Descriptor instead.
func (*GetPersonalAccountsListRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetPersonalAccountsListRequest) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

func (x *GetPersonalAccountsListRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GetPersonalAccountsListRequest) GetOffset() int32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

// GetPersonalAccountsListRequest response on get list of personal accounts
type GetPersonalAccountsListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccounts []*GetPersonalAccountByIDResponse `protobuf:"bytes,1,rep,name=personal_accounts,json=personalAccounts,proto3" json:"personal_accounts,omitempty"`
}

func (x *GetPersonalAccountsListResponse) Reset() {
	*x = GetPersonalAccountsListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonalAccountsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonalAccountsListResponse) ProtoMessage() {}

func (x *GetPersonalAccountsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonalAccountsListResponse.ProtoReflect.Descriptor instead.
func (*GetPersonalAccountsListResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetPersonalAccountsListResponse) GetPersonalAccounts() []*GetPersonalAccountByIDResponse {
	if x != nil {
		return x.PersonalAccounts
	}
	return nil
}

// ActivatePersonalAccountRequest request on activate suspended personal account
type ActivatePersonalAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64 `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
}

func (x *ActivatePersonalAccountRequest) Reset() {
	*x = ActivatePersonalAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivatePersonalAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivatePersonalAccountRequest) ProtoMessage() {}

func (x *ActivatePersonalAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivatePersonalAccountRequest.ProtoReflect.Descriptor instead.
func (*ActivatePersonalAccountRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{10}
}

func (x *ActivatePersonalAccountRequest) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

// ActivatePersonalAccountResponse response on activate suspended personal account
type ActivatePersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ActivatePersonalAccountResponse) Reset() {
	*x = ActivatePersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivatePersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivatePersonalAccountResponse) ProtoMessage() {}

func (x *ActivatePersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivatePersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*ActivatePersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{11}
}

func (x *ActivatePersonalAccountResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// BlockPersonalAccountRequest request on block unblocked personal account
type BlockPersonalAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64 `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
}

func (x *BlockPersonalAccountRequest) Reset() {
	*x = BlockPersonalAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockPersonalAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockPersonalAccountRequest) ProtoMessage() {}

func (x *BlockPersonalAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockPersonalAccountRequest.ProtoReflect.Descriptor instead.
func (*BlockPersonalAccountRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{12}
}

func (x *BlockPersonalAccountRequest) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

// BlockPersonalAccountResponse response on block unblocked personal account
type BlockPersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *BlockPersonalAccountResponse) Reset() {
	*x = BlockPersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockPersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockPersonalAccountResponse) ProtoMessage() {}

func (x *BlockPersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockPersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*BlockPersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{13}
}

func (x *BlockPersonalAccountResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// UnblockPersonalAccountRequest request on unblock blocked personal account
type UnblockPersonalAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64 `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
}

func (x *UnblockPersonalAccountRequest) Reset() {
	*x = UnblockPersonalAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnblockPersonalAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnblockPersonalAccountRequest) ProtoMessage() {}

func (x *UnblockPersonalAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnblockPersonalAccountRequest.ProtoReflect.Descriptor instead.
func (*UnblockPersonalAccountRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{14}
}

func (x *UnblockPersonalAccountRequest) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

// UnblockPersonalAccountResponse response on unblock blocked personal account
type UnblockPersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UnblockPersonalAccountResponse) Reset() {
	*x = UnblockPersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnblockPersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnblockPersonalAccountResponse) ProtoMessage() {}

func (x *UnblockPersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnblockPersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*UnblockPersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{15}
}

func (x *UnblockPersonalAccountResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// SuspendPersonalAccountRequest request on suspend active personal account
type SuspendPersonalAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64 `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
}

func (x *SuspendPersonalAccountRequest) Reset() {
	*x = SuspendPersonalAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuspendPersonalAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuspendPersonalAccountRequest) ProtoMessage() {}

func (x *SuspendPersonalAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuspendPersonalAccountRequest.ProtoReflect.Descriptor instead.
func (*SuspendPersonalAccountRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{16}
}

func (x *SuspendPersonalAccountRequest) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

// SuspendPersonalAccountResponse response on suspend active personal account
type SuspendPersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SuspendPersonalAccountResponse) Reset() {
	*x = SuspendPersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuspendPersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuspendPersonalAccountResponse) ProtoMessage() {}

func (x *SuspendPersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuspendPersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*SuspendPersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{17}
}

func (x *SuspendPersonalAccountResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// UpdatePersonalAccountRequest request on update personal account
type UpdatePersonalAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64   `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
	FullName          *string `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3,oneof" json:"full_name,omitempty"`
	Phone             string  `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *UpdatePersonalAccountRequest) Reset() {
	*x = UpdatePersonalAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePersonalAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePersonalAccountRequest) ProtoMessage() {}

func (x *UpdatePersonalAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePersonalAccountRequest.ProtoReflect.Descriptor instead.
func (*UpdatePersonalAccountRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{18}
}

func (x *UpdatePersonalAccountRequest) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

func (x *UpdatePersonalAccountRequest) GetFullName() string {
	if x != nil && x.FullName != nil {
		return *x.FullName
	}
	return ""
}

func (x *UpdatePersonalAccountRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

// UpdatePersonalAccountResponse response on update personal account
type UpdatePersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UpdatePersonalAccountResponse) Reset() {
	*x = UpdatePersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePersonalAccountResponse) ProtoMessage() {}

func (x *UpdatePersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*UpdatePersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{19}
}

func (x *UpdatePersonalAccountResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// CheckActivePersonalAccountRequest request on check active personal account
type CheckActivePersonalAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64 `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
}

func (x *CheckActivePersonalAccountRequest) Reset() {
	*x = CheckActivePersonalAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckActivePersonalAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckActivePersonalAccountRequest) ProtoMessage() {}

func (x *CheckActivePersonalAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckActivePersonalAccountRequest.ProtoReflect.Descriptor instead.
func (*CheckActivePersonalAccountRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{20}
}

func (x *CheckActivePersonalAccountRequest) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

// CheckActivePersonalAccountResponse response on check active personal account
type CheckActivePersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *CheckActivePersonalAccountResponse) Reset() {
	*x = CheckActivePersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckActivePersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckActivePersonalAccountResponse) ProtoMessage() {}

func (x *CheckActivePersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckActivePersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*CheckActivePersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{21}
}

func (x *CheckActivePersonalAccountResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// ChangeDateOfDebitingFundsOnPersonalAccountRequest request on change date of debiting funds on personal account
type ChangeDateOfDebitingFundsOnPersonalAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64                  `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
	NextBillingDate   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=next_billing_date,json=nextBillingDate,proto3" json:"next_billing_date,omitempty"`
}

func (x *ChangeDateOfDebitingFundsOnPersonalAccountRequest) Reset() {
	*x = ChangeDateOfDebitingFundsOnPersonalAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeDateOfDebitingFundsOnPersonalAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeDateOfDebitingFundsOnPersonalAccountRequest) ProtoMessage() {}

func (x *ChangeDateOfDebitingFundsOnPersonalAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeDateOfDebitingFundsOnPersonalAccountRequest.ProtoReflect.Descriptor instead.
func (*ChangeDateOfDebitingFundsOnPersonalAccountRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{22}
}

func (x *ChangeDateOfDebitingFundsOnPersonalAccountRequest) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

func (x *ChangeDateOfDebitingFundsOnPersonalAccountRequest) GetNextBillingDate() *timestamppb.Timestamp {
	if x != nil {
		return x.NextBillingDate
	}
	return nil
}

// ChangeDateOfDebitingFundsOnPersonalAccountResponse response on change date of debiting funds on personal account
type ChangeDateOfDebitingFundsOnPersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ChangeDateOfDebitingFundsOnPersonalAccountResponse) Reset() {
	*x = ChangeDateOfDebitingFundsOnPersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeDateOfDebitingFundsOnPersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeDateOfDebitingFundsOnPersonalAccountResponse) ProtoMessage() {}

func (x *ChangeDateOfDebitingFundsOnPersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeDateOfDebitingFundsOnPersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*ChangeDateOfDebitingFundsOnPersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{23}
}

func (x *ChangeDateOfDebitingFundsOnPersonalAccountResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// GetUsersByPersonalAccountRequest request on get users by personal account
type GetUsersByPersonalAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64 `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
}

func (x *GetUsersByPersonalAccountRequest) Reset() {
	*x = GetUsersByPersonalAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersByPersonalAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersByPersonalAccountRequest) ProtoMessage() {}

func (x *GetUsersByPersonalAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersByPersonalAccountRequest.ProtoReflect.Descriptor instead.
func (*GetUsersByPersonalAccountRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{24}
}

func (x *GetUsersByPersonalAccountRequest) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

// GetUsersByPersonalAccountResponse response on get users by personal account
type GetUsersByPersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*GetUserByPersonalAccountResponse `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *GetUsersByPersonalAccountResponse) Reset() {
	*x = GetUsersByPersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersByPersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersByPersonalAccountResponse) ProtoMessage() {}

func (x *GetUsersByPersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersByPersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*GetUsersByPersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{25}
}

func (x *GetUsersByPersonalAccountResponse) GetUsers() []*GetUserByPersonalAccountResponse {
	if x != nil {
		return x.Users
	}
	return nil
}

// GetUserByPersonalAccountResponse response on get user by personal account
type GetUserByPersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserUuid string `protobuf:"bytes,2,opt,name=user_uuid,json=userUuid,proto3" json:"user_uuid,omitempty"`
}

func (x *GetUserByPersonalAccountResponse) Reset() {
	*x = GetUserByPersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserByPersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByPersonalAccountResponse) ProtoMessage() {}

func (x *GetUserByPersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByPersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*GetUserByPersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{26}
}

func (x *GetUserByPersonalAccountResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserByPersonalAccountResponse) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

// GetDiskSpaceQuotaOnPersonalAccountRequest request on get disk space quota on personal account
type GetDiskSpaceQuotaOnPersonalAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId   *int64  `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3,oneof" json:"personal_account_id,omitempty"`
	PersonalAccountUuid *string `protobuf:"bytes,2,opt,name=personal_account_uuid,json=personalAccountUuid,proto3,oneof" json:"personal_account_uuid,omitempty"`
	TypeSize            *string `protobuf:"bytes,3,opt,name=type_size,json=typeSize,proto3,oneof" json:"type_size,omitempty"`
}

func (x *GetDiskSpaceQuotaOnPersonalAccountRequest) Reset() {
	*x = GetDiskSpaceQuotaOnPersonalAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiskSpaceQuotaOnPersonalAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiskSpaceQuotaOnPersonalAccountRequest) ProtoMessage() {}

func (x *GetDiskSpaceQuotaOnPersonalAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiskSpaceQuotaOnPersonalAccountRequest.ProtoReflect.Descriptor instead.
func (*GetDiskSpaceQuotaOnPersonalAccountRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{27}
}

func (x *GetDiskSpaceQuotaOnPersonalAccountRequest) GetPersonalAccountId() int64 {
	if x != nil && x.PersonalAccountId != nil {
		return *x.PersonalAccountId
	}
	return 0
}

func (x *GetDiskSpaceQuotaOnPersonalAccountRequest) GetPersonalAccountUuid() string {
	if x != nil && x.PersonalAccountUuid != nil {
		return *x.PersonalAccountUuid
	}
	return ""
}

func (x *GetDiskSpaceQuotaOnPersonalAccountRequest) GetTypeSize() string {
	if x != nil && x.TypeSize != nil {
		return *x.TypeSize
	}
	return ""
}

// GetDiskSpaceQuotaOnPersonalAccountResponse response on get disk space quota on personal account
type GetDiskSpaceQuotaOnPersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiskSpaceQuota float64 `protobuf:"fixed64,1,opt,name=disk_space_quota,json=diskSpaceQuota,proto3" json:"disk_space_quota,omitempty"`
}

func (x *GetDiskSpaceQuotaOnPersonalAccountResponse) Reset() {
	*x = GetDiskSpaceQuotaOnPersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiskSpaceQuotaOnPersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiskSpaceQuotaOnPersonalAccountResponse) ProtoMessage() {}

func (x *GetDiskSpaceQuotaOnPersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiskSpaceQuotaOnPersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*GetDiskSpaceQuotaOnPersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{28}
}

func (x *GetDiskSpaceQuotaOnPersonalAccountResponse) GetDiskSpaceQuota() float64 {
	if x != nil {
		return x.DiskSpaceQuota
	}
	return 0
}

// GetCostOfWorkplacesOnPersonalAccountRequest request on get cost of workplaces on personal account
type GetCostOfWorkplacesOnPersonalAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64 `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
	CountWorkplaces   int32 `protobuf:"varint,2,opt,name=count_workplaces,json=countWorkplaces,proto3" json:"count_workplaces,omitempty"`
}

func (x *GetCostOfWorkplacesOnPersonalAccountRequest) Reset() {
	*x = GetCostOfWorkplacesOnPersonalAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCostOfWorkplacesOnPersonalAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCostOfWorkplacesOnPersonalAccountRequest) ProtoMessage() {}

func (x *GetCostOfWorkplacesOnPersonalAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCostOfWorkplacesOnPersonalAccountRequest.ProtoReflect.Descriptor instead.
func (*GetCostOfWorkplacesOnPersonalAccountRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{29}
}

func (x *GetCostOfWorkplacesOnPersonalAccountRequest) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

func (x *GetCostOfWorkplacesOnPersonalAccountRequest) GetCountWorkplaces() int32 {
	if x != nil {
		return x.CountWorkplaces
	}
	return 0
}

// GetCostOfWorkplacesOnPersonalAccountResponse response on get cost of workplaces on personal account
type GetCostOfWorkplacesOnPersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cost float64 `protobuf:"fixed64,1,opt,name=cost,proto3" json:"cost,omitempty"`
}

func (x *GetCostOfWorkplacesOnPersonalAccountResponse) Reset() {
	*x = GetCostOfWorkplacesOnPersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCostOfWorkplacesOnPersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCostOfWorkplacesOnPersonalAccountResponse) ProtoMessage() {}

func (x *GetCostOfWorkplacesOnPersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCostOfWorkplacesOnPersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*GetCostOfWorkplacesOnPersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{30}
}

func (x *GetCostOfWorkplacesOnPersonalAccountResponse) GetCost() float64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

// DeletePersonalAccountRequest request on delete personal account
type DeletePersonalAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePersonalAccountRequest) Reset() {
	*x = DeletePersonalAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePersonalAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePersonalAccountRequest) ProtoMessage() {}

func (x *DeletePersonalAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePersonalAccountRequest.ProtoReflect.Descriptor instead.
func (*DeletePersonalAccountRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{31}
}

// DeletePersonalAccountResponse response on delete personal account
type DeletePersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePersonalAccountResponse) Reset() {
	*x = DeletePersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePersonalAccountResponse) ProtoMessage() {}

func (x *DeletePersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_personal_account_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*DeletePersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_personal_account_service_proto_rawDescGZIP(), []int{32}
}

var File_tada_api_billing_personal_account_service_proto protoreflect.FileDescriptor

var file_tada_api_billing_personal_account_service_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x74, 0x61, 0x64, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x10, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa0, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x20, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65,
	0x61, 0x6d, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x65, 0x61, 0x6d, 0x55, 0x75, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x66, 0x75, 0x6c, 0x6c,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xe1, 0x06, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x66, 0x75,
	0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72,
	0x69, 0x66, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61,
	0x72, 0x69, 0x66, 0x66, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72,
	0x69, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x27, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x46, 0x0a, 0x11, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x42,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x6d, 0x69,
	0x6e, 0x5f, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6d, 0x69, 0x6e, 0x54, 0x61,
	0x72, 0x69, 0x66, 0x66, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x12, 0x2e,
	0x0a, 0x13, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x69, 0x6e,
	0x53, 0x74, 0x65, 0x70, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x12, 0x2c,
	0x0a, 0x12, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x62, 0x69, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x15,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x69,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x72, 0x65,
	0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x66, 0x72, 0x65, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x61, 0x69,
	0x64, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4f, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xe2, 0x06, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x13, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x46, 0x0a, 0x11, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0f, 0x6e, 0x65, 0x78, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x32, 0x0a, 0x15, 0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x5f, 0x77,
	0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x13, 0x6d, 0x69, 0x6e, 0x54, 0x61, 0x72, 0x69, 0x66, 0x66, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x65, 0x70,
	0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x61,
	0x6c, 0x6c, 0x5f, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x69, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x68, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x42,
	0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x65, 0x61, 0x6d,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x72, 0x65, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x69, 0x64,
	0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x70, 0x61, 0x69, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x47, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x42, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x55,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x22, 0x59, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x42, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x42, 0x79, 0x54, 0x65, 0x61,
	0x6d, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x65, 0x61, 0x6d, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x65, 0x61, 0x6d, 0x55, 0x75, 0x69, 0x64, 0x22, 0x58, 0x0a, 0x26, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x42, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x01, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x11, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x10, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x50, 0x0a, 0x1e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x1f, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x4d, 0x0a, 0x1b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x1c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x4f,
	0x0a, 0x1d, 0x55, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x3a, 0x0a, 0x1e, 0x55, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x4f, 0x0a, 0x1d, 0x53,
	0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x1e,
	0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x09, 0x66, 0x75, 0x6c,
	0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08,
	0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x39, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x53, 0x0a, 0x21, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x3e, 0x0a, 0x22, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0xab, 0x01, 0x0a, 0x31, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66,
	0x44, 0x65, 0x62, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x11, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x22, 0x4e, 0x0a,
	0x32, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x44, 0x65, 0x62,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x52, 0x0a,
	0x20, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x6d, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x79, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x22, 0x58, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x22, 0xfb, 0x01, 0x0a, 0x29, 0x47,
	0x65, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x11, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a,
	0x15, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x13,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x74, 0x79, 0x70,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x42, 0x18, 0x0a, 0x16, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x56, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x44,
	0x69, 0x73, 0x6b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x4f, 0x6e, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0e, 0x64, 0x69, 0x73, 0x6b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x22, 0x88, 0x01, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x73, 0x74, 0x4f, 0x66, 0x57, 0x6f,
	0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x22, 0x42, 0x0a, 0x2c, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x73, 0x74, 0x4f, 0x66, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x22,
	0x1e, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x1f, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2a, 0xb0, 0x01, 0x0a, 0x15, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x23, 0x50, 0x45,
	0x52, 0x53, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x45, 0x52, 0x53, 0x4f, 0x4e, 0x41, 0x4c, 0x5f,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x50, 0x45, 0x52, 0x53, 0x4f,
	0x4e, 0x41, 0x4c, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x02, 0x12, 0x23,
	0x0a, 0x1f, 0x50, 0x45, 0x52, 0x53, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45,
	0x44, 0x10, 0x03, 0x32, 0xad, 0x1a, 0x0a, 0x0f, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0xba, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2e, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3a, 0x22, 0x35, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x3a, 0x01, 0x2a, 0x12, 0xc2, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x30, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x22, 0x37, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xbe, 0x01, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x79, 0x49, 0x44, 0x12, 0x2f, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x22,
	0x36, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2f, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x3a, 0x01, 0x2a, 0x12, 0xe2, 0x01, 0x0a, 0x1f, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x42, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x12, 0x38,
	0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x42, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x55, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x42, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x4a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x44, 0x22, 0x3f, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x42, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x3a, 0x01, 0x2a, 0x12,
	0xde, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x42, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x55, 0x55,
	0x49, 0x44, 0x12, 0x37, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x42, 0x79, 0x54, 0x65, 0x61, 0x6d,
	0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x74, 0x61,
	0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x42, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x43, 0x22, 0x3e, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x42, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x55, 0x55, 0x49, 0x44, 0x3a, 0x01, 0x2a,
	0x12, 0xc2, 0x01, 0x0a, 0x17, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x2e, 0x74,
	0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31,
	0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x22, 0x37, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xb6, 0x01, 0x0a, 0x14, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d,
	0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x39, 0x22, 0x34, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xbe,
	0x01, 0x0a, 0x16, 0x55, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x2e, 0x74, 0x61, 0x64, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x6e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x74, 0x61, 0x64,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x6e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x3b, 0x22, 0x36, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x55, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12,
	0xbe, 0x01, 0x0a, 0x16, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x2e, 0x74, 0x61, 0x64,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x75,
	0x73, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x74, 0x61,
	0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x53,
	0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x22, 0x36, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a,
	0x12, 0xba, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x2e, 0x74, 0x61, 0x64,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x74, 0x61, 0x64,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x3a, 0x22, 0x35, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xce, 0x01,
	0x0a, 0x1a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x2e, 0x74,
	0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3f, 0x22,
	0x3a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x8e,
	0x02, 0x0a, 0x2a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x44,
	0x65, 0x62, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x43, 0x2e,
	0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x44, 0x65, 0x62,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x44, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x4f, 0x66, 0x44, 0x65, 0x62, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x4f,
	0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4f,
	0x22, 0x4a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x44, 0x65,
	0x62, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12,
	0xca, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x2e,
	0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3e, 0x22, 0x39,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xee, 0x01, 0x0a,
	0x22, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x3b, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3c, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x47, 0x22, 0x42, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xf6, 0x01,
	0x0a, 0x24, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x73, 0x74, 0x4f, 0x66, 0x57, 0x6f, 0x72, 0x6b, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3d, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x73,
	0x74, 0x4f, 0x66, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x4f, 0x6e, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x73, 0x74,
	0x4f, 0x66, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x4f, 0x6e, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x49, 0x22, 0x44, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x73, 0x74, 0x4f, 0x66, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xba, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2e, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3a, 0x22, 0x35, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x3a, 0x01, 0x2a, 0x42, 0x89, 0x01, 0x0a, 0x10, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x42, 0x13, 0x54, 0x61, 0x64, 0x61, 0x41, 0x50,
	0x49, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x3c, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x74, 0x65, 0x61,
	0x6d, 0x2f, 0x74, 0x64, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x61, 0x64, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x3b, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0xaa, 0x02, 0x0c,
	0x54, 0x61, 0x64, 0x61, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0xca, 0x02, 0x10, 0x54,
	0x61, 0x64, 0x61, 0x5c, 0x41, 0x50, 0x49, 0x5c, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tada_api_billing_personal_account_service_proto_rawDescOnce sync.Once
	file_tada_api_billing_personal_account_service_proto_rawDescData = file_tada_api_billing_personal_account_service_proto_rawDesc
)

func file_tada_api_billing_personal_account_service_proto_rawDescGZIP() []byte {
	file_tada_api_billing_personal_account_service_proto_rawDescOnce.Do(func() {
		file_tada_api_billing_personal_account_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_tada_api_billing_personal_account_service_proto_rawDescData)
	})
	return file_tada_api_billing_personal_account_service_proto_rawDescData
}

var file_tada_api_billing_personal_account_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tada_api_billing_personal_account_service_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_tada_api_billing_personal_account_service_proto_goTypes = []interface{}{
	(PersonalAccountStatus)(0),                                 // 0: tada.api.billing.PersonalAccountStatus
	(*CreatePersonalAccountRequest)(nil),                       // 1: tada.api.billing.CreatePersonalAccountRequest
	(*CreatePersonalAccountResponse)(nil),                      // 2: tada.api.billing.CreatePersonalAccountResponse
	(*GetPersonalAccountByIDRequest)(nil),                      // 3: tada.api.billing.GetPersonalAccountByIDRequest
	(*GetPersonalAccountByIDResponse)(nil),                     // 4: tada.api.billing.GetPersonalAccountByIDResponse
	(*GetPersonalAccountIDByOwnerUUIDRequest)(nil),             // 5: tada.api.billing.GetPersonalAccountIDByOwnerUUIDRequest
	(*GetPersonalAccountIDByOwnerUUIDResponse)(nil),            // 6: tada.api.billing.GetPersonalAccountIDByOwnerUUIDResponse
	(*GetPersonalAccountIDByTeamUUIDRequest)(nil),              // 7: tada.api.billing.GetPersonalAccountIDByTeamUUIDRequest
	(*GetPersonalAccountIDByTeamUUIDResponse)(nil),             // 8: tada.api.billing.GetPersonalAccountIDByTeamUUIDResponse
	(*GetPersonalAccountsListRequest)(nil),                     // 9: tada.api.billing.GetPersonalAccountsListRequest
	(*GetPersonalAccountsListResponse)(nil),                    // 10: tada.api.billing.GetPersonalAccountsListResponse
	(*ActivatePersonalAccountRequest)(nil),                     // 11: tada.api.billing.ActivatePersonalAccountRequest
	(*ActivatePersonalAccountResponse)(nil),                    // 12: tada.api.billing.ActivatePersonalAccountResponse
	(*BlockPersonalAccountRequest)(nil),                        // 13: tada.api.billing.BlockPersonalAccountRequest
	(*BlockPersonalAccountResponse)(nil),                       // 14: tada.api.billing.BlockPersonalAccountResponse
	(*UnblockPersonalAccountRequest)(nil),                      // 15: tada.api.billing.UnblockPersonalAccountRequest
	(*UnblockPersonalAccountResponse)(nil),                     // 16: tada.api.billing.UnblockPersonalAccountResponse
	(*SuspendPersonalAccountRequest)(nil),                      // 17: tada.api.billing.SuspendPersonalAccountRequest
	(*SuspendPersonalAccountResponse)(nil),                     // 18: tada.api.billing.SuspendPersonalAccountResponse
	(*UpdatePersonalAccountRequest)(nil),                       // 19: tada.api.billing.UpdatePersonalAccountRequest
	(*UpdatePersonalAccountResponse)(nil),                      // 20: tada.api.billing.UpdatePersonalAccountResponse
	(*CheckActivePersonalAccountRequest)(nil),                  // 21: tada.api.billing.CheckActivePersonalAccountRequest
	(*CheckActivePersonalAccountResponse)(nil),                 // 22: tada.api.billing.CheckActivePersonalAccountResponse
	(*ChangeDateOfDebitingFundsOnPersonalAccountRequest)(nil),  // 23: tada.api.billing.ChangeDateOfDebitingFundsOnPersonalAccountRequest
	(*ChangeDateOfDebitingFundsOnPersonalAccountResponse)(nil), // 24: tada.api.billing.ChangeDateOfDebitingFundsOnPersonalAccountResponse
	(*GetUsersByPersonalAccountRequest)(nil),                   // 25: tada.api.billing.GetUsersByPersonalAccountRequest
	(*GetUsersByPersonalAccountResponse)(nil),                  // 26: tada.api.billing.GetUsersByPersonalAccountResponse
	(*GetUserByPersonalAccountResponse)(nil),                   // 27: tada.api.billing.GetUserByPersonalAccountResponse
	(*GetDiskSpaceQuotaOnPersonalAccountRequest)(nil),          // 28: tada.api.billing.GetDiskSpaceQuotaOnPersonalAccountRequest
	(*GetDiskSpaceQuotaOnPersonalAccountResponse)(nil),         // 29: tada.api.billing.GetDiskSpaceQuotaOnPersonalAccountResponse
	(*GetCostOfWorkplacesOnPersonalAccountRequest)(nil),        // 30: tada.api.billing.GetCostOfWorkplacesOnPersonalAccountRequest
	(*GetCostOfWorkplacesOnPersonalAccountResponse)(nil),       // 31: tada.api.billing.GetCostOfWorkplacesOnPersonalAccountResponse
	(*DeletePersonalAccountRequest)(nil),                       // 32: tada.api.billing.DeletePersonalAccountRequest
	(*DeletePersonalAccountResponse)(nil),                      // 33: tada.api.billing.DeletePersonalAccountResponse
	(*timestamppb.Timestamp)(nil),                              // 34: google.protobuf.Timestamp
}
var file_tada_api_billing_personal_account_service_proto_depIdxs = []int32{
	0,  // 0: tada.api.billing.CreatePersonalAccountResponse.status:type_name -> tada.api.billing.PersonalAccountStatus
	34, // 1: tada.api.billing.CreatePersonalAccountResponse.next_billing_date:type_name -> google.protobuf.Timestamp
	0,  // 2: tada.api.billing.GetPersonalAccountByIDResponse.status:type_name -> tada.api.billing.PersonalAccountStatus
	34, // 3: tada.api.billing.GetPersonalAccountByIDResponse.next_billing_date:type_name -> google.protobuf.Timestamp
	4,  // 4: tada.api.billing.GetPersonalAccountsListResponse.personal_accounts:type_name -> tada.api.billing.GetPersonalAccountByIDResponse
	34, // 5: tada.api.billing.ChangeDateOfDebitingFundsOnPersonalAccountRequest.next_billing_date:type_name -> google.protobuf.Timestamp
	27, // 6: tada.api.billing.GetUsersByPersonalAccountResponse.users:type_name -> tada.api.billing.GetUserByPersonalAccountResponse
	1,  // 7: tada.api.billing.PersonalAccount.CreatePersonalAccount:input_type -> tada.api.billing.CreatePersonalAccountRequest
	9,  // 8: tada.api.billing.PersonalAccount.GetPersonalAccountsList:input_type -> tada.api.billing.GetPersonalAccountsListRequest
	3,  // 9: tada.api.billing.PersonalAccount.GetPersonalAccountByID:input_type -> tada.api.billing.GetPersonalAccountByIDRequest
	5,  // 10: tada.api.billing.PersonalAccount.GetPersonalAccountIDByOwnerUUID:input_type -> tada.api.billing.GetPersonalAccountIDByOwnerUUIDRequest
	7,  // 11: tada.api.billing.PersonalAccount.GetPersonalAccountIDByTeamUUID:input_type -> tada.api.billing.GetPersonalAccountIDByTeamUUIDRequest
	11, // 12: tada.api.billing.PersonalAccount.ActivatePersonalAccount:input_type -> tada.api.billing.ActivatePersonalAccountRequest
	13, // 13: tada.api.billing.PersonalAccount.BlockPersonalAccount:input_type -> tada.api.billing.BlockPersonalAccountRequest
	15, // 14: tada.api.billing.PersonalAccount.UnblockPersonalAccount:input_type -> tada.api.billing.UnblockPersonalAccountRequest
	17, // 15: tada.api.billing.PersonalAccount.SuspendPersonalAccount:input_type -> tada.api.billing.SuspendPersonalAccountRequest
	19, // 16: tada.api.billing.PersonalAccount.UpdatePersonalAccount:input_type -> tada.api.billing.UpdatePersonalAccountRequest
	21, // 17: tada.api.billing.PersonalAccount.CheckActivePersonalAccount:input_type -> tada.api.billing.CheckActivePersonalAccountRequest
	23, // 18: tada.api.billing.PersonalAccount.ChangeDateOfDebitingFundsOnPersonalAccount:input_type -> tada.api.billing.ChangeDateOfDebitingFundsOnPersonalAccountRequest
	25, // 19: tada.api.billing.PersonalAccount.GetUsersByPersonalAccount:input_type -> tada.api.billing.GetUsersByPersonalAccountRequest
	28, // 20: tada.api.billing.PersonalAccount.GetDiskSpaceQuotaOnPersonalAccount:input_type -> tada.api.billing.GetDiskSpaceQuotaOnPersonalAccountRequest
	30, // 21: tada.api.billing.PersonalAccount.GetCostOfWorkplacesOnPersonalAccount:input_type -> tada.api.billing.GetCostOfWorkplacesOnPersonalAccountRequest
	32, // 22: tada.api.billing.PersonalAccount.DeletePersonalAccount:input_type -> tada.api.billing.DeletePersonalAccountRequest
	2,  // 23: tada.api.billing.PersonalAccount.CreatePersonalAccount:output_type -> tada.api.billing.CreatePersonalAccountResponse
	10, // 24: tada.api.billing.PersonalAccount.GetPersonalAccountsList:output_type -> tada.api.billing.GetPersonalAccountsListResponse
	4,  // 25: tada.api.billing.PersonalAccount.GetPersonalAccountByID:output_type -> tada.api.billing.GetPersonalAccountByIDResponse
	6,  // 26: tada.api.billing.PersonalAccount.GetPersonalAccountIDByOwnerUUID:output_type -> tada.api.billing.GetPersonalAccountIDByOwnerUUIDResponse
	8,  // 27: tada.api.billing.PersonalAccount.GetPersonalAccountIDByTeamUUID:output_type -> tada.api.billing.GetPersonalAccountIDByTeamUUIDResponse
	12, // 28: tada.api.billing.PersonalAccount.ActivatePersonalAccount:output_type -> tada.api.billing.ActivatePersonalAccountResponse
	14, // 29: tada.api.billing.PersonalAccount.BlockPersonalAccount:output_type -> tada.api.billing.BlockPersonalAccountResponse
	16, // 30: tada.api.billing.PersonalAccount.UnblockPersonalAccount:output_type -> tada.api.billing.UnblockPersonalAccountResponse
	18, // 31: tada.api.billing.PersonalAccount.SuspendPersonalAccount:output_type -> tada.api.billing.SuspendPersonalAccountResponse
	20, // 32: tada.api.billing.PersonalAccount.UpdatePersonalAccount:output_type -> tada.api.billing.UpdatePersonalAccountResponse
	22, // 33: tada.api.billing.PersonalAccount.CheckActivePersonalAccount:output_type -> tada.api.billing.CheckActivePersonalAccountResponse
	24, // 34: tada.api.billing.PersonalAccount.ChangeDateOfDebitingFundsOnPersonalAccount:output_type -> tada.api.billing.ChangeDateOfDebitingFundsOnPersonalAccountResponse
	26, // 35: tada.api.billing.PersonalAccount.GetUsersByPersonalAccount:output_type -> tada.api.billing.GetUsersByPersonalAccountResponse
	29, // 36: tada.api.billing.PersonalAccount.GetDiskSpaceQuotaOnPersonalAccount:output_type -> tada.api.billing.GetDiskSpaceQuotaOnPersonalAccountResponse
	31, // 37: tada.api.billing.PersonalAccount.GetCostOfWorkplacesOnPersonalAccount:output_type -> tada.api.billing.GetCostOfWorkplacesOnPersonalAccountResponse
	33, // 38: tada.api.billing.PersonalAccount.DeletePersonalAccount:output_type -> tada.api.billing.DeletePersonalAccountResponse
	23, // [23:39] is the sub-list for method output_type
	7,  // [7:23] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_tada_api_billing_personal_account_service_proto_init() }
func file_tada_api_billing_personal_account_service_proto_init() {
	if File_tada_api_billing_personal_account_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tada_api_billing_personal_account_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePersonalAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonalAccountByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonalAccountByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonalAccountIDByOwnerUUIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonalAccountIDByOwnerUUIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonalAccountIDByTeamUUIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonalAccountIDByTeamUUIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonalAccountsListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonalAccountsListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivatePersonalAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivatePersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockPersonalAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockPersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnblockPersonalAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnblockPersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuspendPersonalAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuspendPersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePersonalAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckActivePersonalAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckActivePersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeDateOfDebitingFundsOnPersonalAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeDateOfDebitingFundsOnPersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersByPersonalAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersByPersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserByPersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiskSpaceQuotaOnPersonalAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiskSpaceQuotaOnPersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCostOfWorkplacesOnPersonalAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCostOfWorkplacesOnPersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePersonalAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_personal_account_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tada_api_billing_personal_account_service_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_tada_api_billing_personal_account_service_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_tada_api_billing_personal_account_service_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_tada_api_billing_personal_account_service_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_tada_api_billing_personal_account_service_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_tada_api_billing_personal_account_service_proto_msgTypes[27].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tada_api_billing_personal_account_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tada_api_billing_personal_account_service_proto_goTypes,
		DependencyIndexes: file_tada_api_billing_personal_account_service_proto_depIdxs,
		EnumInfos:         file_tada_api_billing_personal_account_service_proto_enumTypes,
		MessageInfos:      file_tada_api_billing_personal_account_service_proto_msgTypes,
	}.Build()
	File_tada_api_billing_personal_account_service_proto = out.File
	file_tada_api_billing_personal_account_service_proto_rawDesc = nil
	file_tada_api_billing_personal_account_service_proto_goTypes = nil
	file_tada_api_billing_personal_account_service_proto_depIdxs = nil
}
