// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.1
// source: tada/api/billing/workplace_service.proto

package billing

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AddWorkplacesOnPersonalAccountRequest request on add workplace on personal account
type AddWorkplacesOnPersonalAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64 `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
	CountWorkplaces   int32 `protobuf:"varint,2,opt,name=count_workplaces,json=countWorkplaces,proto3" json:"count_workplaces,omitempty"`
}

func (x *AddWorkplacesOnPersonalAccountRequest) Reset() {
	*x = AddWorkplacesOnPersonalAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_workplace_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWorkplacesOnPersonalAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWorkplacesOnPersonalAccountRequest) ProtoMessage() {}

func (x *AddWorkplacesOnPersonalAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_workplace_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWorkplacesOnPersonalAccountRequest.ProtoReflect.Descriptor instead.
func (*AddWorkplacesOnPersonalAccountRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_workplace_service_proto_rawDescGZIP(), []int{0}
}

func (x *AddWorkplacesOnPersonalAccountRequest) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

func (x *AddWorkplacesOnPersonalAccountRequest) GetCountWorkplaces() int32 {
	if x != nil {
		return x.CountWorkplaces
	}
	return 0
}

// AddWorkplacesOnPersonalAccountResponse response on add workplace on personal account
type AddWorkplacesOnPersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *AddWorkplacesOnPersonalAccountResponse) Reset() {
	*x = AddWorkplacesOnPersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_workplace_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWorkplacesOnPersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWorkplacesOnPersonalAccountResponse) ProtoMessage() {}

func (x *AddWorkplacesOnPersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_workplace_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWorkplacesOnPersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*AddWorkplacesOnPersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_workplace_service_proto_rawDescGZIP(), []int{1}
}

func (x *AddWorkplacesOnPersonalAccountResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// ActivateWorkplacesOnPersonalAccountRequest request on activate workplace on personal account
type ActivateWorkplacesOnPersonalAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64 `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
	CountWorkplaces   int32 `protobuf:"varint,2,opt,name=count_workplaces,json=countWorkplaces,proto3" json:"count_workplaces,omitempty"`
}

func (x *ActivateWorkplacesOnPersonalAccountRequest) Reset() {
	*x = ActivateWorkplacesOnPersonalAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_workplace_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateWorkplacesOnPersonalAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateWorkplacesOnPersonalAccountRequest) ProtoMessage() {}

func (x *ActivateWorkplacesOnPersonalAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_workplace_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateWorkplacesOnPersonalAccountRequest.ProtoReflect.Descriptor instead.
func (*ActivateWorkplacesOnPersonalAccountRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_workplace_service_proto_rawDescGZIP(), []int{2}
}

func (x *ActivateWorkplacesOnPersonalAccountRequest) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

func (x *ActivateWorkplacesOnPersonalAccountRequest) GetCountWorkplaces() int32 {
	if x != nil {
		return x.CountWorkplaces
	}
	return 0
}

// ActivateWorkplacesOnPersonalAccountResponse response on activate workplace on personal account
type ActivateWorkplacesOnPersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ActivateWorkplacesOnPersonalAccountResponse) Reset() {
	*x = ActivateWorkplacesOnPersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_workplace_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateWorkplacesOnPersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateWorkplacesOnPersonalAccountResponse) ProtoMessage() {}

func (x *ActivateWorkplacesOnPersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_workplace_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateWorkplacesOnPersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*ActivateWorkplacesOnPersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_workplace_service_proto_rawDescGZIP(), []int{3}
}

func (x *ActivateWorkplacesOnPersonalAccountResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// DeleteWorkplacesFromPersonalAccountRequest request on delete workplaces from personal account
type DeleteWorkplacesFromPersonalAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64 `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
	CountWorkplaces   int32 `protobuf:"varint,2,opt,name=count_workplaces,json=countWorkplaces,proto3" json:"count_workplaces,omitempty"`
}

func (x *DeleteWorkplacesFromPersonalAccountRequest) Reset() {
	*x = DeleteWorkplacesFromPersonalAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_workplace_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWorkplacesFromPersonalAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkplacesFromPersonalAccountRequest) ProtoMessage() {}

func (x *DeleteWorkplacesFromPersonalAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_workplace_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkplacesFromPersonalAccountRequest.ProtoReflect.Descriptor instead.
func (*DeleteWorkplacesFromPersonalAccountRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_workplace_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteWorkplacesFromPersonalAccountRequest) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

func (x *DeleteWorkplacesFromPersonalAccountRequest) GetCountWorkplaces() int32 {
	if x != nil {
		return x.CountWorkplaces
	}
	return 0
}

// DeleteWorkplacesFromPersonalAccountResponse response on delete workplaces from personal account
type DeleteWorkplacesFromPersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteWorkplacesFromPersonalAccountResponse) Reset() {
	*x = DeleteWorkplacesFromPersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_workplace_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWorkplacesFromPersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkplacesFromPersonalAccountResponse) ProtoMessage() {}

func (x *DeleteWorkplacesFromPersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_workplace_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkplacesFromPersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*DeleteWorkplacesFromPersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_workplace_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteWorkplacesFromPersonalAccountResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// AddUserInWorkplaceRequest request on add user in workplace on personal account
type AddUserInWorkplaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64  `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
	UserUuid          string `protobuf:"bytes,2,opt,name=user_uuid,json=userUuid,proto3" json:"user_uuid,omitempty"`
}

func (x *AddUserInWorkplaceRequest) Reset() {
	*x = AddUserInWorkplaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_workplace_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserInWorkplaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserInWorkplaceRequest) ProtoMessage() {}

func (x *AddUserInWorkplaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_workplace_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserInWorkplaceRequest.ProtoReflect.Descriptor instead.
func (*AddUserInWorkplaceRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_workplace_service_proto_rawDescGZIP(), []int{6}
}

func (x *AddUserInWorkplaceRequest) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

func (x *AddUserInWorkplaceRequest) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

// AddUserInWorkplaceResponse response on add user in workplace on personal account
type AddUserInWorkplaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *AddUserInWorkplaceResponse) Reset() {
	*x = AddUserInWorkplaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_workplace_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserInWorkplaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserInWorkplaceResponse) ProtoMessage() {}

func (x *AddUserInWorkplaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_workplace_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserInWorkplaceResponse.ProtoReflect.Descriptor instead.
func (*AddUserInWorkplaceResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_workplace_service_proto_rawDescGZIP(), []int{7}
}

func (x *AddUserInWorkplaceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// DeleteUserFromWorkplaceRequest request on delete user from workplace on personal account
type DeleteUserFromWorkplaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64   `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
	UserId            *int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	UserUuid          *string `protobuf:"bytes,3,opt,name=user_uuid,json=userUuid,proto3,oneof" json:"user_uuid,omitempty"`
}

func (x *DeleteUserFromWorkplaceRequest) Reset() {
	*x = DeleteUserFromWorkplaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_workplace_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserFromWorkplaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserFromWorkplaceRequest) ProtoMessage() {}

func (x *DeleteUserFromWorkplaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_workplace_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserFromWorkplaceRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserFromWorkplaceRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_workplace_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteUserFromWorkplaceRequest) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

func (x *DeleteUserFromWorkplaceRequest) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *DeleteUserFromWorkplaceRequest) GetUserUuid() string {
	if x != nil && x.UserUuid != nil {
		return *x.UserUuid
	}
	return ""
}

// DeleteUserFromWorkplaceResponse response on delete user from workplace on personal account
type DeleteUserFromWorkplaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteUserFromWorkplaceResponse) Reset() {
	*x = DeleteUserFromWorkplaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_workplace_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserFromWorkplaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserFromWorkplaceResponse) ProtoMessage() {}

func (x *DeleteUserFromWorkplaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_workplace_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserFromWorkplaceResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserFromWorkplaceResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_workplace_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteUserFromWorkplaceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// GetWorkplacesByPersonalAccountRequest request on get workplaces by personal account
type GetWorkplacesByPersonalAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64  `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
	Limit             *int32 `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Offset            *int32 `protobuf:"varint,3,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
}

func (x *GetWorkplacesByPersonalAccountRequest) Reset() {
	*x = GetWorkplacesByPersonalAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_workplace_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkplacesByPersonalAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkplacesByPersonalAccountRequest) ProtoMessage() {}

func (x *GetWorkplacesByPersonalAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_workplace_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkplacesByPersonalAccountRequest.ProtoReflect.Descriptor instead.
func (*GetWorkplacesByPersonalAccountRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_workplace_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetWorkplacesByPersonalAccountRequest) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

func (x *GetWorkplacesByPersonalAccountRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GetWorkplacesByPersonalAccountRequest) GetOffset() int32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

// GetWorkplacesByPersonalAccountResponse response on get workplaces by personal account
type GetWorkplacesByPersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workplaces []*GetWorkplaceByPersonalAccountResponse `protobuf:"bytes,1,rep,name=workplaces,proto3" json:"workplaces,omitempty"`
}

func (x *GetWorkplacesByPersonalAccountResponse) Reset() {
	*x = GetWorkplacesByPersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_workplace_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkplacesByPersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkplacesByPersonalAccountResponse) ProtoMessage() {}

func (x *GetWorkplacesByPersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_workplace_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkplacesByPersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*GetWorkplacesByPersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_workplace_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetWorkplacesByPersonalAccountResponse) GetWorkplaces() []*GetWorkplaceByPersonalAccountResponse {
	if x != nil {
		return x.Workplaces
	}
	return nil
}

// GetWorkplaceByPersonalAccountResponse response on get workplace by personal account
type GetWorkplaceByPersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64  `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
	WorkplaceId       int64  `protobuf:"varint,2,opt,name=workplace_id,json=workplaceId,proto3" json:"workplace_id,omitempty"`
	UserId            int64  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserUuid          string `protobuf:"bytes,4,opt,name=user_uuid,json=userUuid,proto3" json:"user_uuid,omitempty"`
}

func (x *GetWorkplaceByPersonalAccountResponse) Reset() {
	*x = GetWorkplaceByPersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_workplace_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkplaceByPersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkplaceByPersonalAccountResponse) ProtoMessage() {}

func (x *GetWorkplaceByPersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_workplace_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkplaceByPersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*GetWorkplaceByPersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_workplace_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetWorkplaceByPersonalAccountResponse) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

func (x *GetWorkplaceByPersonalAccountResponse) GetWorkplaceId() int64 {
	if x != nil {
		return x.WorkplaceId
	}
	return 0
}

func (x *GetWorkplaceByPersonalAccountResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetWorkplaceByPersonalAccountResponse) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

// GetCountOfUnpaidWorkplacesByPersonalAccountRequest request on get count of unpaid workplaces by personal account
type GetCountOfUnpaidWorkplacesByPersonalAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalAccountId int64 `protobuf:"varint,1,opt,name=personal_account_id,json=personalAccountId,proto3" json:"personal_account_id,omitempty"`
}

func (x *GetCountOfUnpaidWorkplacesByPersonalAccountRequest) Reset() {
	*x = GetCountOfUnpaidWorkplacesByPersonalAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_workplace_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountOfUnpaidWorkplacesByPersonalAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountOfUnpaidWorkplacesByPersonalAccountRequest) ProtoMessage() {}

func (x *GetCountOfUnpaidWorkplacesByPersonalAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_workplace_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountOfUnpaidWorkplacesByPersonalAccountRequest.ProtoReflect.Descriptor instead.
func (*GetCountOfUnpaidWorkplacesByPersonalAccountRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_workplace_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetCountOfUnpaidWorkplacesByPersonalAccountRequest) GetPersonalAccountId() int64 {
	if x != nil {
		return x.PersonalAccountId
	}
	return 0
}

// GetCountOfUnpaidWorkplacesByPersonalAccountResponse response on get count of unpaid workplaces by personal account
type GetCountOfUnpaidWorkplacesByPersonalAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetCountOfUnpaidWorkplacesByPersonalAccountResponse) Reset() {
	*x = GetCountOfUnpaidWorkplacesByPersonalAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_workplace_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountOfUnpaidWorkplacesByPersonalAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountOfUnpaidWorkplacesByPersonalAccountResponse) ProtoMessage() {}

func (x *GetCountOfUnpaidWorkplacesByPersonalAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_workplace_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountOfUnpaidWorkplacesByPersonalAccountResponse.ProtoReflect.Descriptor instead.
func (*GetCountOfUnpaidWorkplacesByPersonalAccountResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_workplace_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetCountOfUnpaidWorkplacesByPersonalAccountResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_tada_api_billing_workplace_service_proto protoreflect.FileDescriptor

var file_tada_api_billing_workplace_service_proto_rawDesc = []byte{
	0x0a, 0x28, 0x74, 0x61, 0x64, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x74, 0x61, 0x64, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x25, 0x41,
	0x64, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x4f, 0x6e, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x77, 0x6f,
	0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x22,
	0x42, 0x0a, 0x26, 0x41, 0x64, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73,
	0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x2a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x11, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x6b,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x22, 0x47, 0x0a,
	0x2b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x2a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x77,
	0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73,
	0x22, 0x47, 0x0a, 0x2b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x68, 0x0a, 0x19, 0x41, 0x64, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55,
	0x75, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x1e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x6f,
	0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x13, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x22, 0x3b, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x42, 0x79, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x81, 0x01, 0x0a,
	0x26, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x42, 0x79,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x74, 0x61,
	0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47,
	0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x42, 0x79, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73,
	0x22, 0xb0, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x42, 0x79, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f,
	0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55,
	0x75, 0x69, 0x64, 0x22, 0x64, 0x0a, 0x32, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f,
	0x66, 0x55, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x73, 0x42, 0x79, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x33, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x55, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x57, 0x6f, 0x72,
	0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x42, 0x79, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0x98, 0x0c, 0x0a, 0x09, 0x57, 0x6f, 0x72, 0x6b, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x12, 0xd8, 0x01, 0x0a, 0x1e, 0x41, 0x64, 0x64, 0x57, 0x6f, 0x72, 0x6b,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x37, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x6f,
	0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x38, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x73, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x3d, 0x1a, 0x38, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2f, 0x41, 0x64,
	0x64, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12,
	0xec, 0x01, 0x0a, 0x23, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x4f, 0x6e, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x42, 0x32, 0x3d, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x4f, 0x6e, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xec,
	0x01, 0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x48, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x42, 0x2a, 0x3d, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72,
	0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xa8, 0x01,
	0x0a, 0x12, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x12, 0x2b, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x57, 0x6f,
	0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x1a, 0x2c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x2f, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x57, 0x6f, 0x72, 0x6b,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0xbc, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x12, 0x30, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x36, 0x2a, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2f, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0xd8, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x42, 0x79, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x37, 0x2e, 0x74, 0x61, 0x64,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x42, 0x79, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x73, 0x42, 0x79, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x3d, 0x22, 0x38, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x2f, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x42, 0x79,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a,
	0x01, 0x2a, 0x12, 0x8c, 0x02, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f,
	0x66, 0x55, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x73, 0x42, 0x79, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x44, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66,
	0x55, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73,
	0x42, 0x79, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x55, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x57, 0x6f, 0x72, 0x6b,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x42, 0x79, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x50, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4a, 0x22, 0x45, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x2f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x55, 0x6e, 0x70,
	0x61, 0x69, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x42, 0x79, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01,
	0x2a, 0x42, 0x89, 0x01, 0x0a, 0x10, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x42, 0x13, 0x54, 0x61, 0x64, 0x61, 0x41, 0x50, 0x49, 0x42,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3c, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2f,
	0x74, 0x64, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x74, 0x61, 0x64, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x3b, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0xaa, 0x02, 0x0c, 0x54, 0x61,
	0x64, 0x61, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0xca, 0x02, 0x10, 0x54, 0x61, 0x64,
	0x61, 0x5c, 0x41, 0x50, 0x49, 0x5c, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tada_api_billing_workplace_service_proto_rawDescOnce sync.Once
	file_tada_api_billing_workplace_service_proto_rawDescData = file_tada_api_billing_workplace_service_proto_rawDesc
)

func file_tada_api_billing_workplace_service_proto_rawDescGZIP() []byte {
	file_tada_api_billing_workplace_service_proto_rawDescOnce.Do(func() {
		file_tada_api_billing_workplace_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_tada_api_billing_workplace_service_proto_rawDescData)
	})
	return file_tada_api_billing_workplace_service_proto_rawDescData
}

var file_tada_api_billing_workplace_service_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_tada_api_billing_workplace_service_proto_goTypes = []interface{}{
	(*AddWorkplacesOnPersonalAccountRequest)(nil),               // 0: tada.api.billing.AddWorkplacesOnPersonalAccountRequest
	(*AddWorkplacesOnPersonalAccountResponse)(nil),              // 1: tada.api.billing.AddWorkplacesOnPersonalAccountResponse
	(*ActivateWorkplacesOnPersonalAccountRequest)(nil),          // 2: tada.api.billing.ActivateWorkplacesOnPersonalAccountRequest
	(*ActivateWorkplacesOnPersonalAccountResponse)(nil),         // 3: tada.api.billing.ActivateWorkplacesOnPersonalAccountResponse
	(*DeleteWorkplacesFromPersonalAccountRequest)(nil),          // 4: tada.api.billing.DeleteWorkplacesFromPersonalAccountRequest
	(*DeleteWorkplacesFromPersonalAccountResponse)(nil),         // 5: tada.api.billing.DeleteWorkplacesFromPersonalAccountResponse
	(*AddUserInWorkplaceRequest)(nil),                           // 6: tada.api.billing.AddUserInWorkplaceRequest
	(*AddUserInWorkplaceResponse)(nil),                          // 7: tada.api.billing.AddUserInWorkplaceResponse
	(*DeleteUserFromWorkplaceRequest)(nil),                      // 8: tada.api.billing.DeleteUserFromWorkplaceRequest
	(*DeleteUserFromWorkplaceResponse)(nil),                     // 9: tada.api.billing.DeleteUserFromWorkplaceResponse
	(*GetWorkplacesByPersonalAccountRequest)(nil),               // 10: tada.api.billing.GetWorkplacesByPersonalAccountRequest
	(*GetWorkplacesByPersonalAccountResponse)(nil),              // 11: tada.api.billing.GetWorkplacesByPersonalAccountResponse
	(*GetWorkplaceByPersonalAccountResponse)(nil),               // 12: tada.api.billing.GetWorkplaceByPersonalAccountResponse
	(*GetCountOfUnpaidWorkplacesByPersonalAccountRequest)(nil),  // 13: tada.api.billing.GetCountOfUnpaidWorkplacesByPersonalAccountRequest
	(*GetCountOfUnpaidWorkplacesByPersonalAccountResponse)(nil), // 14: tada.api.billing.GetCountOfUnpaidWorkplacesByPersonalAccountResponse
}
var file_tada_api_billing_workplace_service_proto_depIdxs = []int32{
	12, // 0: tada.api.billing.GetWorkplacesByPersonalAccountResponse.workplaces:type_name -> tada.api.billing.GetWorkplaceByPersonalAccountResponse
	0,  // 1: tada.api.billing.Workplace.AddWorkplacesOnPersonalAccount:input_type -> tada.api.billing.AddWorkplacesOnPersonalAccountRequest
	2,  // 2: tada.api.billing.Workplace.ActivateWorkplacesOnPersonalAccount:input_type -> tada.api.billing.ActivateWorkplacesOnPersonalAccountRequest
	4,  // 3: tada.api.billing.Workplace.DeleteWorkplacesFromPersonalAccount:input_type -> tada.api.billing.DeleteWorkplacesFromPersonalAccountRequest
	6,  // 4: tada.api.billing.Workplace.AddUserInWorkplace:input_type -> tada.api.billing.AddUserInWorkplaceRequest
	8,  // 5: tada.api.billing.Workplace.DeleteUserFromWorkplace:input_type -> tada.api.billing.DeleteUserFromWorkplaceRequest
	10, // 6: tada.api.billing.Workplace.GetWorkplacesByPersonalAccount:input_type -> tada.api.billing.GetWorkplacesByPersonalAccountRequest
	13, // 7: tada.api.billing.Workplace.GetCountOfUnpaidWorkplacesByPersonalAccount:input_type -> tada.api.billing.GetCountOfUnpaidWorkplacesByPersonalAccountRequest
	1,  // 8: tada.api.billing.Workplace.AddWorkplacesOnPersonalAccount:output_type -> tada.api.billing.AddWorkplacesOnPersonalAccountResponse
	3,  // 9: tada.api.billing.Workplace.ActivateWorkplacesOnPersonalAccount:output_type -> tada.api.billing.ActivateWorkplacesOnPersonalAccountResponse
	5,  // 10: tada.api.billing.Workplace.DeleteWorkplacesFromPersonalAccount:output_type -> tada.api.billing.DeleteWorkplacesFromPersonalAccountResponse
	7,  // 11: tada.api.billing.Workplace.AddUserInWorkplace:output_type -> tada.api.billing.AddUserInWorkplaceResponse
	9,  // 12: tada.api.billing.Workplace.DeleteUserFromWorkplace:output_type -> tada.api.billing.DeleteUserFromWorkplaceResponse
	11, // 13: tada.api.billing.Workplace.GetWorkplacesByPersonalAccount:output_type -> tada.api.billing.GetWorkplacesByPersonalAccountResponse
	14, // 14: tada.api.billing.Workplace.GetCountOfUnpaidWorkplacesByPersonalAccount:output_type -> tada.api.billing.GetCountOfUnpaidWorkplacesByPersonalAccountResponse
	8,  // [8:15] is the sub-list for method output_type
	1,  // [1:8] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_tada_api_billing_workplace_service_proto_init() }
func file_tada_api_billing_workplace_service_proto_init() {
	if File_tada_api_billing_workplace_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tada_api_billing_workplace_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWorkplacesOnPersonalAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_workplace_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWorkplacesOnPersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_workplace_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateWorkplacesOnPersonalAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_workplace_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateWorkplacesOnPersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_workplace_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWorkplacesFromPersonalAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_workplace_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWorkplacesFromPersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_workplace_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserInWorkplaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_workplace_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserInWorkplaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_workplace_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserFromWorkplaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_workplace_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserFromWorkplaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_workplace_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkplacesByPersonalAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_workplace_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkplacesByPersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_workplace_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkplaceByPersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_workplace_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountOfUnpaidWorkplacesByPersonalAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_workplace_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountOfUnpaidWorkplacesByPersonalAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tada_api_billing_workplace_service_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_tada_api_billing_workplace_service_proto_msgTypes[10].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tada_api_billing_workplace_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tada_api_billing_workplace_service_proto_goTypes,
		DependencyIndexes: file_tada_api_billing_workplace_service_proto_depIdxs,
		MessageInfos:      file_tada_api_billing_workplace_service_proto_msgTypes,
	}.Build()
	File_tada_api_billing_workplace_service_proto = out.File
	file_tada_api_billing_workplace_service_proto_rawDesc = nil
	file_tada_api_billing_workplace_service_proto_goTypes = nil
	file_tada_api_billing_workplace_service_proto_depIdxs = nil
}
