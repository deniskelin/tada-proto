// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: tada/api/billing/currency_service.proto

package billing

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetCurrenciesListRequest request on get currencies list
type GetCurrenciesListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCurrenciesListRequest) Reset() {
	*x = GetCurrenciesListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_currency_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrenciesListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrenciesListRequest) ProtoMessage() {}

func (x *GetCurrenciesListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_currency_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrenciesListRequest.ProtoReflect.Descriptor instead.
func (*GetCurrenciesListRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_currency_service_proto_rawDescGZIP(), []int{0}
}

// GetCurrenciesListResponse response on get currencies list
type GetCurrenciesListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currencies []*GetCurrencyResponse `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
}

func (x *GetCurrenciesListResponse) Reset() {
	*x = GetCurrenciesListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_currency_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrenciesListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrenciesListResponse) ProtoMessage() {}

func (x *GetCurrenciesListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_currency_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrenciesListResponse.ProtoReflect.Descriptor instead.
func (*GetCurrenciesListResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_currency_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetCurrenciesListResponse) GetCurrencies() []*GetCurrencyResponse {
	if x != nil {
		return x.Currencies
	}
	return nil
}

// GetCurrencyResponse response on get currency
type GetCurrencyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyId    int64    `protobuf:"varint,1,opt,name=currency_id,json=currencyId,proto3" json:"currency_id,omitempty"`
	Name          string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Iso_4217      *string  `protobuf:"bytes,3,opt,name=iso_4217,json=iso4217,proto3,oneof" json:"iso_4217,omitempty"`
	Iso_4217Num   *float64 `protobuf:"fixed64,4,opt,name=iso_4217_num,json=iso4217Num,proto3,oneof" json:"iso_4217_num,omitempty"`
	DecimalDigits *float64 `protobuf:"fixed64,5,opt,name=decimal_digits,json=decimalDigits,proto3,oneof" json:"decimal_digits,omitempty"`
	NameMajor     *string  `protobuf:"bytes,6,opt,name=name_major,json=nameMajor,proto3,oneof" json:"name_major,omitempty"`
	NameMinor     *string  `protobuf:"bytes,7,opt,name=name_minor,json=nameMinor,proto3,oneof" json:"name_minor,omitempty"`
	Visible       bool     `protobuf:"varint,8,opt,name=visible,proto3" json:"visible,omitempty"`
}

func (x *GetCurrencyResponse) Reset() {
	*x = GetCurrencyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_currency_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrencyResponse) ProtoMessage() {}

func (x *GetCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_currency_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrencyResponse.ProtoReflect.Descriptor instead.
func (*GetCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_currency_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetCurrencyResponse) GetCurrencyId() int64 {
	if x != nil {
		return x.CurrencyId
	}
	return 0
}

func (x *GetCurrencyResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetCurrencyResponse) GetIso_4217() string {
	if x != nil && x.Iso_4217 != nil {
		return *x.Iso_4217
	}
	return ""
}

func (x *GetCurrencyResponse) GetIso_4217Num() float64 {
	if x != nil && x.Iso_4217Num != nil {
		return *x.Iso_4217Num
	}
	return 0
}

func (x *GetCurrencyResponse) GetDecimalDigits() float64 {
	if x != nil && x.DecimalDigits != nil {
		return *x.DecimalDigits
	}
	return 0
}

func (x *GetCurrencyResponse) GetNameMajor() string {
	if x != nil && x.NameMajor != nil {
		return *x.NameMajor
	}
	return ""
}

func (x *GetCurrencyResponse) GetNameMinor() string {
	if x != nil && x.NameMinor != nil {
		return *x.NameMinor
	}
	return ""
}

func (x *GetCurrencyResponse) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

// GetCurrenciesListRequest request on get currencies list
type GetVisibleCurrenciesListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetVisibleCurrenciesListRequest) Reset() {
	*x = GetVisibleCurrenciesListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_currency_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVisibleCurrenciesListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVisibleCurrenciesListRequest) ProtoMessage() {}

func (x *GetVisibleCurrenciesListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_currency_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVisibleCurrenciesListRequest.ProtoReflect.Descriptor instead.
func (*GetVisibleCurrenciesListRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_currency_service_proto_rawDescGZIP(), []int{3}
}

// GetCurrenciesListResponse response on get currencies list
type GetVisibleCurrenciesListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currencies []*GetCurrencyResponse `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
}

func (x *GetVisibleCurrenciesListResponse) Reset() {
	*x = GetVisibleCurrenciesListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_currency_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVisibleCurrenciesListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVisibleCurrenciesListResponse) ProtoMessage() {}

func (x *GetVisibleCurrenciesListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_currency_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVisibleCurrenciesListResponse.ProtoReflect.Descriptor instead.
func (*GetVisibleCurrenciesListResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_currency_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetVisibleCurrenciesListResponse) GetCurrencies() []*GetCurrencyResponse {
	if x != nil {
		return x.Currencies
	}
	return nil
}

// SetCurrencyVisibilityRequest request on set currency visibility
type SetCurrencyVisibilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyId int64 `protobuf:"varint,1,opt,name=currency_id,json=currencyId,proto3" json:"currency_id,omitempty"`
	Visible    bool  `protobuf:"varint,2,opt,name=visible,proto3" json:"visible,omitempty"`
}

func (x *SetCurrencyVisibilityRequest) Reset() {
	*x = SetCurrencyVisibilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_currency_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCurrencyVisibilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCurrencyVisibilityRequest) ProtoMessage() {}

func (x *SetCurrencyVisibilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_currency_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCurrencyVisibilityRequest.ProtoReflect.Descriptor instead.
func (*SetCurrencyVisibilityRequest) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_currency_service_proto_rawDescGZIP(), []int{5}
}

func (x *SetCurrencyVisibilityRequest) GetCurrencyId() int64 {
	if x != nil {
		return x.CurrencyId
	}
	return 0
}

func (x *SetCurrencyVisibilityRequest) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

// SetCurrencyVisibilityResponse response on set currency visibility
type SetCurrencyVisibilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SetCurrencyVisibilityResponse) Reset() {
	*x = SetCurrencyVisibilityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tada_api_billing_currency_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCurrencyVisibilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCurrencyVisibilityResponse) ProtoMessage() {}

func (x *SetCurrencyVisibilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tada_api_billing_currency_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCurrencyVisibilityResponse.ProtoReflect.Descriptor instead.
func (*SetCurrencyVisibilityResponse) Descriptor() ([]byte, []int) {
	return file_tada_api_billing_currency_service_proto_rawDescGZIP(), []int{6}
}

func (x *SetCurrencyVisibilityResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_tada_api_billing_currency_service_proto protoreflect.FileDescriptor

var file_tada_api_billing_currency_service_proto_rawDesc = []byte{
	0x0a, 0x27, 0x74, 0x61, 0x64, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x74, 0x61, 0x64, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x22, 0xee, 0x02, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x73, 0x6f, 0x5f, 0x34, 0x32,
	0x31, 0x37, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x69, 0x73, 0x6f, 0x34,
	0x32, 0x31, 0x37, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0c, 0x69, 0x73, 0x6f, 0x5f, 0x34, 0x32,
	0x31, 0x37, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x0a,
	0x69, 0x73, 0x6f, 0x34, 0x32, 0x31, 0x37, 0x4e, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a,
	0x0e, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x48, 0x02, 0x52, 0x0d, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x44, 0x69, 0x67, 0x69, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x04, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x69, 0x73, 0x6f, 0x5f, 0x34, 0x32, 0x31, 0x37, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x69, 0x73, 0x6f,
	0x5f, 0x34, 0x32, 0x31, 0x37, 0x5f, 0x6e, 0x75, 0x6d, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x64, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x73, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x22, 0x21, 0x0a, 0x1f, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x69, 0x0a,
	0x20, 0x47, 0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x45, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x22, 0x59, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x22, 0x39, 0x0a, 0x1d, 0x53, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xa8,
	0x04, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0xa3, 0x01, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2a, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2f, 0x22, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2f, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x3a, 0x01,
	0x2a, 0x12, 0xbf, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31,
	0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36, 0x22, 0x31, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2f, 0x47, 0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x3a, 0x01, 0x2a, 0x12, 0xb3, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x2e,
	0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x53, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x56, 0x69, 0x73, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x74, 0x61, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x53, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x56, 0x69, 0x73, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x32, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x2f, 0x53, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x56, 0x69, 0x73, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x3a, 0x01, 0x2a, 0x42, 0x89, 0x01, 0x0a, 0x10, 0x74, 0x61,
	0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x42, 0x13,
	0x54, 0x61, 0x64, 0x61, 0x41, 0x50, 0x49, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x74, 0x61,
	0x64, 0x61, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x74, 0x64, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67,
	0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x61, 0x64, 0x61, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x3b, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0xaa, 0x02, 0x0c, 0x54, 0x61, 0x64, 0x61, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0xca, 0x02, 0x10, 0x54, 0x61, 0x64, 0x61, 0x5c, 0x41, 0x50, 0x49, 0x5c, 0x42, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tada_api_billing_currency_service_proto_rawDescOnce sync.Once
	file_tada_api_billing_currency_service_proto_rawDescData = file_tada_api_billing_currency_service_proto_rawDesc
)

func file_tada_api_billing_currency_service_proto_rawDescGZIP() []byte {
	file_tada_api_billing_currency_service_proto_rawDescOnce.Do(func() {
		file_tada_api_billing_currency_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_tada_api_billing_currency_service_proto_rawDescData)
	})
	return file_tada_api_billing_currency_service_proto_rawDescData
}

var file_tada_api_billing_currency_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_tada_api_billing_currency_service_proto_goTypes = []interface{}{
	(*GetCurrenciesListRequest)(nil),         // 0: tada.api.billing.GetCurrenciesListRequest
	(*GetCurrenciesListResponse)(nil),        // 1: tada.api.billing.GetCurrenciesListResponse
	(*GetCurrencyResponse)(nil),              // 2: tada.api.billing.GetCurrencyResponse
	(*GetVisibleCurrenciesListRequest)(nil),  // 3: tada.api.billing.GetVisibleCurrenciesListRequest
	(*GetVisibleCurrenciesListResponse)(nil), // 4: tada.api.billing.GetVisibleCurrenciesListResponse
	(*SetCurrencyVisibilityRequest)(nil),     // 5: tada.api.billing.SetCurrencyVisibilityRequest
	(*SetCurrencyVisibilityResponse)(nil),    // 6: tada.api.billing.SetCurrencyVisibilityResponse
}
var file_tada_api_billing_currency_service_proto_depIdxs = []int32{
	2, // 0: tada.api.billing.GetCurrenciesListResponse.currencies:type_name -> tada.api.billing.GetCurrencyResponse
	2, // 1: tada.api.billing.GetVisibleCurrenciesListResponse.currencies:type_name -> tada.api.billing.GetCurrencyResponse
	0, // 2: tada.api.billing.Currency.GetCurrenciesList:input_type -> tada.api.billing.GetCurrenciesListRequest
	3, // 3: tada.api.billing.Currency.GetVisibleCurrenciesList:input_type -> tada.api.billing.GetVisibleCurrenciesListRequest
	5, // 4: tada.api.billing.Currency.SetCurrencyVisibility:input_type -> tada.api.billing.SetCurrencyVisibilityRequest
	1, // 5: tada.api.billing.Currency.GetCurrenciesList:output_type -> tada.api.billing.GetCurrenciesListResponse
	4, // 6: tada.api.billing.Currency.GetVisibleCurrenciesList:output_type -> tada.api.billing.GetVisibleCurrenciesListResponse
	6, // 7: tada.api.billing.Currency.SetCurrencyVisibility:output_type -> tada.api.billing.SetCurrencyVisibilityResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_tada_api_billing_currency_service_proto_init() }
func file_tada_api_billing_currency_service_proto_init() {
	if File_tada_api_billing_currency_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tada_api_billing_currency_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrenciesListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_currency_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrenciesListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_currency_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrencyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_currency_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVisibleCurrenciesListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_currency_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVisibleCurrenciesListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_currency_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCurrencyVisibilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tada_api_billing_currency_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCurrencyVisibilityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tada_api_billing_currency_service_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tada_api_billing_currency_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tada_api_billing_currency_service_proto_goTypes,
		DependencyIndexes: file_tada_api_billing_currency_service_proto_depIdxs,
		MessageInfos:      file_tada_api_billing_currency_service_proto_msgTypes,
	}.Build()
	File_tada_api_billing_currency_service_proto = out.File
	file_tada_api_billing_currency_service_proto_rawDesc = nil
	file_tada_api_billing_currency_service_proto_goTypes = nil
	file_tada_api_billing_currency_service_proto_depIdxs = nil
}
