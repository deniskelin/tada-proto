// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.1
// source: tada/billing/api/personal_account/enquiry/v1/enquiry_types.proto

package enquiry

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EnquiryStatus - Статус заявки
type EnquiryStatus int32

const (
	EnquiryStatus_ENQUIRY_STATUS_UNSPECIFIED EnquiryStatus = 0
	// Ожидание подтверждения оплаты
	EnquiryStatus_ENQUIRY_STATUS_WAITING_PAYMENT_CONFIRMATION EnquiryStatus = 1
	// Ожидание зачисления оплаты
	EnquiryStatus_ENQUIRY_STATUS_WAITING_PAYMENT_CREDITING EnquiryStatus = 2
	// Оплачено
	EnquiryStatus_ENQUIRY_STATUS_PAID EnquiryStatus = 3
	// Отменено
	EnquiryStatus_ENQUIRY_STATUS_CANCELLED EnquiryStatus = 4
	// Активная
	EnquiryStatus_ENQUIRY_STATUS_ACTIVE EnquiryStatus = 5
	// Просрочено
	EnquiryStatus_ENQUIRY_STATUS_EXPIRED EnquiryStatus = 6
	// Выполнено
	EnquiryStatus_ENQUIRY_STATUS_DONE EnquiryStatus = 7
)

// Enum value maps for EnquiryStatus.
var (
	EnquiryStatus_name = map[int32]string{
		0: "ENQUIRY_STATUS_UNSPECIFIED",
		1: "ENQUIRY_STATUS_WAITING_PAYMENT_CONFIRMATION",
		2: "ENQUIRY_STATUS_WAITING_PAYMENT_CREDITING",
		3: "ENQUIRY_STATUS_PAID",
		4: "ENQUIRY_STATUS_CANCELLED",
		5: "ENQUIRY_STATUS_ACTIVE",
		6: "ENQUIRY_STATUS_EXPIRED",
		7: "ENQUIRY_STATUS_DONE",
	}
	EnquiryStatus_value = map[string]int32{
		"ENQUIRY_STATUS_UNSPECIFIED":                  0,
		"ENQUIRY_STATUS_WAITING_PAYMENT_CONFIRMATION": 1,
		"ENQUIRY_STATUS_WAITING_PAYMENT_CREDITING":    2,
		"ENQUIRY_STATUS_PAID":                         3,
		"ENQUIRY_STATUS_CANCELLED":                    4,
		"ENQUIRY_STATUS_ACTIVE":                       5,
		"ENQUIRY_STATUS_EXPIRED":                      6,
		"ENQUIRY_STATUS_DONE":                         7,
	}
)

func (x EnquiryStatus) Enum() *EnquiryStatus {
	p := new(EnquiryStatus)
	*p = x
	return p
}

func (x EnquiryStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnquiryStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_enumTypes[0].Descriptor()
}

func (EnquiryStatus) Type() protoreflect.EnumType {
	return &file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_enumTypes[0]
}

func (x EnquiryStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnquiryStatus.Descriptor instead.
func (EnquiryStatus) EnumDescriptor() ([]byte, []int) {
	return file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_rawDescGZIP(), []int{0}
}

// EnquiryType - тип заявки
type EnquiryType int32

const (
	EnquiryType_ENQUIRY_TYPE_UNSPECIFIED EnquiryType = 0
	// Автопродление
	EnquiryType_ENQUIRY_TYPE_RENEWAL EnquiryType = 1
	// Основная
	EnquiryType_ENQUIRY_TYPE_BASIC EnquiryType = 2
	// Расширение
	EnquiryType_ENQUIRY_TYPE_EXTENSION EnquiryType = 3
)

// Enum value maps for EnquiryType.
var (
	EnquiryType_name = map[int32]string{
		0: "ENQUIRY_TYPE_UNSPECIFIED",
		1: "ENQUIRY_TYPE_RENEWAL",
		2: "ENQUIRY_TYPE_BASIC",
		3: "ENQUIRY_TYPE_EXTENSION",
	}
	EnquiryType_value = map[string]int32{
		"ENQUIRY_TYPE_UNSPECIFIED": 0,
		"ENQUIRY_TYPE_RENEWAL":     1,
		"ENQUIRY_TYPE_BASIC":       2,
		"ENQUIRY_TYPE_EXTENSION":   3,
	}
)

func (x EnquiryType) Enum() *EnquiryType {
	p := new(EnquiryType)
	*p = x
	return p
}

func (x EnquiryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnquiryType) Descriptor() protoreflect.EnumDescriptor {
	return file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_enumTypes[1].Descriptor()
}

func (EnquiryType) Type() protoreflect.EnumType {
	return &file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_enumTypes[1]
}

func (x EnquiryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnquiryType.Descriptor instead.
func (EnquiryType) EnumDescriptor() ([]byte, []int) {
	return file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_rawDescGZIP(), []int{1}
}

// PaymentType - тип оплаты
type PaymentType int32

const (
	PaymentType_PAYMENT_TYPE_UNSPECIFIED PaymentType = 0
	// Бумажный документооборот
	PaymentType_PAYMENT_TYPE_PAPER_DOCUMENT_MANAGEMENT PaymentType = 1
	// Электронный документооборот
	PaymentType_PAYMENT_TYPE_ELECTRONIC_DOCUMENT_MANAGEMENT PaymentType = 2
	// Банковской картой
	PaymentType_PAYMENT_TYPE_BANK_CARD PaymentType = 3
	// Техническая оплата (мануальное пополнение)
	PaymentType_PAYMENT_TYPE_TECHNICAL PaymentType = 10
)

// Enum value maps for PaymentType.
var (
	PaymentType_name = map[int32]string{
		0:  "PAYMENT_TYPE_UNSPECIFIED",
		1:  "PAYMENT_TYPE_PAPER_DOCUMENT_MANAGEMENT",
		2:  "PAYMENT_TYPE_ELECTRONIC_DOCUMENT_MANAGEMENT",
		3:  "PAYMENT_TYPE_BANK_CARD",
		10: "PAYMENT_TYPE_TECHNICAL",
	}
	PaymentType_value = map[string]int32{
		"PAYMENT_TYPE_UNSPECIFIED":                    0,
		"PAYMENT_TYPE_PAPER_DOCUMENT_MANAGEMENT":      1,
		"PAYMENT_TYPE_ELECTRONIC_DOCUMENT_MANAGEMENT": 2,
		"PAYMENT_TYPE_BANK_CARD":                      3,
		"PAYMENT_TYPE_TECHNICAL":                      10,
	}
)

func (x PaymentType) Enum() *PaymentType {
	p := new(PaymentType)
	*p = x
	return p
}

func (x PaymentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentType) Descriptor() protoreflect.EnumDescriptor {
	return file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_enumTypes[2].Descriptor()
}

func (PaymentType) Type() protoreflect.EnumType {
	return &file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_enumTypes[2]
}

func (x PaymentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentType.Descriptor instead.
func (PaymentType) EnumDescriptor() ([]byte, []int) {
	return file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_rawDescGZIP(), []int{2}
}

var File_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto protoreflect.FileDescriptor

var file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_rawDesc = []byte{
	0x0a, 0x40, 0x74, 0x61, 0x64, 0x61, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2f, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x2c, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x76, 0x31,
	0x2a, 0x95, 0x02, 0x0a, 0x0d, 0x45, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x4e, 0x51, 0x55, 0x49, 0x52, 0x59, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x2f, 0x0a, 0x2b, 0x45, 0x4e, 0x51, 0x55, 0x49, 0x52, 0x59, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x41, 0x59,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x01, 0x12, 0x2c, 0x0a, 0x28, 0x45, 0x4e, 0x51, 0x55, 0x49, 0x52, 0x59, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x41,
	0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x4e, 0x51, 0x55, 0x49, 0x52, 0x59, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x50, 0x41, 0x49, 0x44, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x4e,
	0x51, 0x55, 0x49, 0x52, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e,
	0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x4e, 0x51, 0x55,
	0x49, 0x52, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x45, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x4e, 0x51, 0x55, 0x49, 0x52, 0x59, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x06, 0x12,
	0x17, 0x0a, 0x13, 0x45, 0x4e, 0x51, 0x55, 0x49, 0x52, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x07, 0x2a, 0x79, 0x0a, 0x0b, 0x45, 0x6e, 0x71, 0x75,
	0x69, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x4e, 0x51, 0x55, 0x49,
	0x52, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x4e, 0x51, 0x55, 0x49, 0x52, 0x59,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x4e, 0x45, 0x57, 0x41, 0x4c, 0x10, 0x01, 0x12,
	0x16, 0x0a, 0x12, 0x45, 0x4e, 0x51, 0x55, 0x49, 0x52, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x4e, 0x51, 0x55, 0x49,
	0x52, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x58, 0x54, 0x45, 0x4e, 0x53, 0x49, 0x4f,
	0x4e, 0x10, 0x03, 0x2a, 0xc0, 0x01, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x2a, 0x0a, 0x26, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x50, 0x41, 0x50, 0x45, 0x52, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x2f, 0x0a,
	0x2b, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4c,
	0x45, 0x43, 0x54, 0x52, 0x4f, 0x4e, 0x49, 0x43, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x1a,
	0x0a, 0x16, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42,
	0x41, 0x4e, 0x4b, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x41,
	0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x45, 0x43, 0x48, 0x4e,
	0x49, 0x43, 0x41, 0x4c, 0x10, 0x0a, 0x42, 0xe6, 0x01, 0x0a, 0x2c, 0x74, 0x61, 0x64, 0x61, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x65, 0x6e, 0x71,
	0x75, 0x69, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x58, 0x67, 0x69, 0x74, 0x6c, 0x61,
	0x62, 0x2e, 0x74, 0x61, 0x64, 0x61, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x74, 0x64, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74,
	0x61, 0x64, 0x61, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2f, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x6e, 0x71, 0x75,
	0x69, 0x72, 0x79, 0xaa, 0x02, 0x2b, 0x54, 0x61, 0x64, 0x61, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x2b, 0x54, 0x61, 0x64, 0x61, 0x5c, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x5c, 0x41, 0x70, 0x69, 0x5c, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5c, 0x45, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x5c, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_rawDescOnce sync.Once
	file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_rawDescData = file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_rawDesc
)

func file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_rawDescGZIP() []byte {
	file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_rawDescOnce.Do(func() {
		file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_rawDescData)
	})
	return file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_rawDescData
}

var file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_goTypes = []interface{}{
	(EnquiryStatus)(0), // 0: tada.billing.api.personal_account.enquiry.v1.EnquiryStatus
	(EnquiryType)(0),   // 1: tada.billing.api.personal_account.enquiry.v1.EnquiryType
	(PaymentType)(0),   // 2: tada.billing.api.personal_account.enquiry.v1.PaymentType
}
var file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_init() }
func file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_init() {
	if File_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_goTypes,
		DependencyIndexes: file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_depIdxs,
		EnumInfos:         file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_enumTypes,
	}.Build()
	File_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto = out.File
	file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_rawDesc = nil
	file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_goTypes = nil
	file_tada_billing_api_personal_account_enquiry_v1_enquiry_types_proto_depIdxs = nil
}
